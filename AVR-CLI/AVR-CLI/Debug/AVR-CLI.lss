
AVR-CLI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000072  00800100  00001646  000016da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001646  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000126  00800172  00800172  0000174c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000174c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000017a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000230  00000000  00000000  000017e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002186  00000000  00000000  00001a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001131  00000000  00000000  00003b9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010f7  00000000  00000000  00004ccb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005b4  00000000  00000000  00005dc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000922  00000000  00000000  00006378  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000015f0  00000000  00000000  00006c9a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  0000828a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	7f c0       	rjmp	.+254    	; 0x148 <__vector_18>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	a4 c0       	rjmp	.+328    	; 0x19a <__vector_20>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e6 e4       	ldi	r30, 0x46	; 70
      a0:	f6 e1       	ldi	r31, 0x16	; 22
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a2 37       	cpi	r26, 0x72	; 114
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	22 e0       	ldi	r18, 0x02	; 2
      b4:	a2 e7       	ldi	r26, 0x72	; 114
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a8 39       	cpi	r26, 0x98	; 152
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	2b d6       	rcall	.+3158   	; 0xd1a <main>
      c4:	0c 94 21 0b 	jmp	0x1642	; 0x1642 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <apInit>:
ï»¿#include "ap.h"


void apInit(void)
{
	uartOpen(_DEF_UART0, 115200);
      ca:	40 e0       	ldi	r20, 0x00	; 0
      cc:	52 ec       	ldi	r21, 0xC2	; 194
      ce:	61 e0       	ldi	r22, 0x01	; 1
      d0:	70 e0       	ldi	r23, 0x00	; 0
      d2:	80 e0       	ldi	r24, 0x00	; 0
      d4:	f5 d1       	rcall	.+1002   	; 0x4c0 <uartOpen>
	
	sei();
      d6:	78 94       	sei
      d8:	08 95       	ret

000000da <apMain>:
{
	//char *str = "Hello, World!";
	char input = 0;
	uint32_t baud = 115200;
	
	uartPrintf(_DEF_UART0, "baud: %lu bps\n", baud);//uartGetBaud(_DEF_UART0));
      da:	1f 92       	push	r1
      dc:	81 e0       	ldi	r24, 0x01	; 1
      de:	8f 93       	push	r24
      e0:	82 ec       	ldi	r24, 0xC2	; 194
      e2:	8f 93       	push	r24
      e4:	1f 92       	push	r1
      e6:	87 e4       	ldi	r24, 0x47	; 71
      e8:	91 e0       	ldi	r25, 0x01	; 1
      ea:	9f 93       	push	r25
      ec:	8f 93       	push	r24
      ee:	1f 92       	push	r1
      f0:	5f d2       	rcall	.+1214   	; 0x5b0 <uartPrintf>
      f2:	8d b7       	in	r24, 0x3d	; 61
      f4:	9e b7       	in	r25, 0x3e	; 62
      f6:	07 96       	adiw	r24, 0x07	; 7
      f8:	0f b6       	in	r0, 0x3f	; 63
      fa:	f8 94       	cli
      fc:	9e bf       	out	0x3e, r25	; 62
      fe:	0f be       	out	0x3f, r0	; 63
     100:	8d bf       	out	0x3d, r24	; 61
		
		if (uartAvailable(_DEF_UART0) > 0)
		{
			gpioPinWrite(_DEF_GPIO0, true);
			input = uartRead(_DEF_UART0);
			uartPrintf(_DEF_UART0, "echo : %c, available : %d\n", input, uartAvailable(_DEF_UART0));
     102:	c6 e5       	ldi	r28, 0x56	; 86
     104:	d1 e0       	ldi	r29, 0x01	; 1
		//uartPrintf(_DEF_UART0, "uart0 : %s\n", str);
		//gpioPinToggle(_DEF_GPIO0);
		
		//uartPrintf(_DEF_UART0, "available : %d\n", input, uartAvailable(_DEF_UART0));
		
		if (uartAvailable(_DEF_UART0) > 0)
     106:	80 e0       	ldi	r24, 0x00	; 0
     108:	09 d2       	rcall	.+1042   	; 0x51c <uartAvailable>
     10a:	67 2b       	or	r22, r23
     10c:	68 2b       	or	r22, r24
     10e:	69 2b       	or	r22, r25
     110:	d1 f3       	breq	.-12     	; 0x106 <apMain+0x2c>
		{
			gpioPinWrite(_DEF_GPIO0, true);
     112:	61 e0       	ldi	r22, 0x01	; 1
     114:	80 e0       	ldi	r24, 0x00	; 0
			input = uartRead(_DEF_UART0);
     116:	c0 d1       	rcall	.+896    	; 0x498 <gpioPinWrite>
     118:	80 e0       	ldi	r24, 0x00	; 0
     11a:	0a d2       	rcall	.+1044   	; 0x530 <uartRead>
			uartPrintf(_DEF_UART0, "echo : %c, available : %d\n", input, uartAvailable(_DEF_UART0));
     11c:	18 2f       	mov	r17, r24
     11e:	80 e0       	ldi	r24, 0x00	; 0
     120:	fd d1       	rcall	.+1018   	; 0x51c <uartAvailable>
     122:	9f 93       	push	r25
     124:	8f 93       	push	r24
     126:	7f 93       	push	r23
     128:	6f 93       	push	r22
     12a:	1f 92       	push	r1
     12c:	1f 93       	push	r17
     12e:	df 93       	push	r29
     130:	cf 93       	push	r28
     132:	1f 92       	push	r1
     134:	3d d2       	rcall	.+1146   	; 0x5b0 <uartPrintf>
     136:	8d b7       	in	r24, 0x3d	; 61
     138:	9e b7       	in	r25, 0x3e	; 62
     13a:	09 96       	adiw	r24, 0x09	; 9
     13c:	0f b6       	in	r0, 0x3f	; 63
     13e:	f8 94       	cli
     140:	9e bf       	out	0x3e, r25	; 62
     142:	0f be       	out	0x3f, r0	; 63
     144:	8d bf       	out	0x3d, r24	; 61
     146:	df cf       	rjmp	.-66     	; 0x106 <apMain+0x2c>

00000148 <__vector_18>:

extern UART_HandleTypeDef huart1;


ISR(USART0_RX_vect)
{
     148:	1f 92       	push	r1
     14a:	0f 92       	push	r0
     14c:	0f b6       	in	r0, 0x3f	; 63
     14e:	0f 92       	push	r0
     150:	11 24       	eor	r1, r1
     152:	0b b6       	in	r0, 0x3b	; 59
     154:	0f 92       	push	r0
     156:	2f 93       	push	r18
     158:	3f 93       	push	r19
     15a:	4f 93       	push	r20
     15c:	5f 93       	push	r21
     15e:	6f 93       	push	r22
     160:	7f 93       	push	r23
     162:	8f 93       	push	r24
     164:	9f 93       	push	r25
     166:	af 93       	push	r26
     168:	bf 93       	push	r27
     16a:	ef 93       	push	r30
     16c:	ff 93       	push	r31
	UART_RxIRQHandler(&huart1);
     16e:	81 e8       	ldi	r24, 0x81	; 129
     170:	92 e0       	ldi	r25, 0x02	; 2
     172:	be d5       	rcall	.+2940   	; 0xcf0 <UART_RxIRQHandler>
}
     174:	ff 91       	pop	r31
     176:	ef 91       	pop	r30
     178:	bf 91       	pop	r27
     17a:	af 91       	pop	r26
     17c:	9f 91       	pop	r25
     17e:	8f 91       	pop	r24
     180:	7f 91       	pop	r23
     182:	6f 91       	pop	r22
     184:	5f 91       	pop	r21
     186:	4f 91       	pop	r20
     188:	3f 91       	pop	r19
     18a:	2f 91       	pop	r18
     18c:	0f 90       	pop	r0
     18e:	0b be       	out	0x3b, r0	; 59
     190:	0f 90       	pop	r0
     192:	0f be       	out	0x3f, r0	; 63
     194:	0f 90       	pop	r0
     196:	1f 90       	pop	r1
     198:	18 95       	reti

0000019a <__vector_20>:

ISR(USART0_TX_vect)
{
     19a:	1f 92       	push	r1
     19c:	0f 92       	push	r0
     19e:	0f b6       	in	r0, 0x3f	; 63
     1a0:	0f 92       	push	r0
     1a2:	11 24       	eor	r1, r1
     1a4:	0b b6       	in	r0, 0x3b	; 59
     1a6:	0f 92       	push	r0
     1a8:	2f 93       	push	r18
     1aa:	3f 93       	push	r19
     1ac:	4f 93       	push	r20
     1ae:	5f 93       	push	r21
     1b0:	6f 93       	push	r22
     1b2:	7f 93       	push	r23
     1b4:	8f 93       	push	r24
     1b6:	9f 93       	push	r25
     1b8:	af 93       	push	r26
     1ba:	bf 93       	push	r27
     1bc:	ef 93       	push	r30
     1be:	ff 93       	push	r31
	UART_TxIRQHandler(&huart1);
     1c0:	81 e8       	ldi	r24, 0x81	; 129
     1c2:	92 e0       	ldi	r25, 0x02	; 2
     1c4:	93 d5       	rcall	.+2854   	; 0xcec <UART_TxIRQHandler>
}
     1c6:	ff 91       	pop	r31
     1c8:	ef 91       	pop	r30
     1ca:	bf 91       	pop	r27
     1cc:	af 91       	pop	r26
     1ce:	9f 91       	pop	r25
     1d0:	8f 91       	pop	r24
     1d2:	7f 91       	pop	r23
     1d4:	6f 91       	pop	r22
     1d6:	5f 91       	pop	r21
     1d8:	4f 91       	pop	r20
     1da:	3f 91       	pop	r19
     1dc:	2f 91       	pop	r18
     1de:	0f 90       	pop	r0
     1e0:	0b be       	out	0x3b, r0	; 59
     1e2:	0f 90       	pop	r0
     1e4:	0f be       	out	0x3f, r0	; 63
     1e6:	0f 90       	pop	r0
     1e8:	1f 90       	pop	r1
     1ea:	18 95       	reti

000001ec <bspInit>:
ï»¿#include "bsp.h"


void bspInit(void)
{
     1ec:	08 95       	ret

000001ee <qbufferCreate>:
{

}

bool qbufferCreate(qbuffer_t *p_node, uint8_t *p_buf, uint32_t length)
{
     1ee:	fc 01       	movw	r30, r24
	bool ret = true;

	p_node->in    = 0;
     1f0:	10 82       	st	Z, r1
     1f2:	11 82       	std	Z+1, r1	; 0x01
     1f4:	12 82       	std	Z+2, r1	; 0x02
     1f6:	13 82       	std	Z+3, r1	; 0x03
	p_node->out   = 0;
     1f8:	14 82       	std	Z+4, r1	; 0x04
     1fa:	15 82       	std	Z+5, r1	; 0x05
     1fc:	16 82       	std	Z+6, r1	; 0x06
     1fe:	17 82       	std	Z+7, r1	; 0x07
	p_node->len   = length;
     200:	20 87       	std	Z+8, r18	; 0x08
     202:	31 87       	std	Z+9, r19	; 0x09
     204:	42 87       	std	Z+10, r20	; 0x0a
     206:	53 87       	std	Z+11, r21	; 0x0b
	p_node->p_buf = p_buf;
     208:	75 87       	std	Z+13, r23	; 0x0d
     20a:	64 87       	std	Z+12, r22	; 0x0c

	return ret;
}
     20c:	81 e0       	ldi	r24, 0x01	; 1
     20e:	08 95       	ret

00000210 <qbufferWrite>:

bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
     210:	4f 92       	push	r4
     212:	5f 92       	push	r5
     214:	6f 92       	push	r6
     216:	7f 92       	push	r7
     218:	af 92       	push	r10
     21a:	bf 92       	push	r11
     21c:	cf 92       	push	r12
     21e:	df 92       	push	r13
     220:	ef 92       	push	r14
     222:	ff 92       	push	r15
     224:	0f 93       	push	r16
     226:	1f 93       	push	r17
     228:	cf 93       	push	r28
     22a:	df 93       	push	r29
     22c:	00 d0       	rcall	.+0      	; 0x22e <qbufferWrite+0x1e>
     22e:	00 d0       	rcall	.+0      	; 0x230 <qbufferWrite+0x20>
     230:	00 d0       	rcall	.+0      	; 0x232 <qbufferWrite+0x22>
     232:	cd b7       	in	r28, 0x3d	; 61
     234:	de b7       	in	r29, 0x3e	; 62
     236:	9e 83       	std	Y+6, r25	; 0x06
     238:	8d 83       	std	Y+5, r24	; 0x05
     23a:	06 2f       	mov	r16, r22
     23c:	17 2f       	mov	r17, r23
     23e:	29 01       	movw	r4, r18
     240:	3a 01       	movw	r6, r20
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
     242:	23 2b       	or	r18, r19
     244:	24 2b       	or	r18, r20
     246:	25 2b       	or	r18, r21
     248:	09 f4       	brne	.+2      	; 0x24c <qbufferWrite+0x3c>
     24a:	70 c0       	rjmp	.+224    	; 0x32c <qbufferWrite+0x11c>
	{
		next_in = (p_node->in + 1) %p_node->len;
     24c:	dc 01       	movw	r26, r24
     24e:	8d 91       	ld	r24, X+
     250:	9d 91       	ld	r25, X+
     252:	0d 90       	ld	r0, X+
     254:	bc 91       	ld	r27, X
     256:	a0 2d       	mov	r26, r0
     258:	89 83       	std	Y+1, r24	; 0x01
     25a:	9a 83       	std	Y+2, r25	; 0x02
     25c:	ab 83       	std	Y+3, r26	; 0x03
     25e:	bc 83       	std	Y+4, r27	; 0x04
     260:	bc 01       	movw	r22, r24
     262:	cd 01       	movw	r24, r26
     264:	6f 5f       	subi	r22, 0xFF	; 255
     266:	7f 4f       	sbci	r23, 0xFF	; 255
     268:	8f 4f       	sbci	r24, 0xFF	; 255
     26a:	9f 4f       	sbci	r25, 0xFF	; 255
     26c:	ed 81       	ldd	r30, Y+5	; 0x05
     26e:	fe 81       	ldd	r31, Y+6	; 0x06
     270:	20 85       	ldd	r18, Z+8	; 0x08
     272:	31 85       	ldd	r19, Z+9	; 0x09
     274:	42 85       	ldd	r20, Z+10	; 0x0a
     276:	53 85       	ldd	r21, Z+11	; 0x0b
     278:	dd d6       	rcall	.+3514   	; 0x1034 <__udivmodsi4>
     27a:	6b 01       	movw	r12, r22
     27c:	7c 01       	movw	r14, r24

		if (next_in != p_node->out)
     27e:	ed 81       	ldd	r30, Y+5	; 0x05
     280:	fe 81       	ldd	r31, Y+6	; 0x06
     282:	84 81       	ldd	r24, Z+4	; 0x04
     284:	95 81       	ldd	r25, Z+5	; 0x05
     286:	a6 81       	ldd	r26, Z+6	; 0x06
     288:	b7 81       	ldd	r27, Z+7	; 0x07
     28a:	c8 16       	cp	r12, r24
     28c:	d9 06       	cpc	r13, r25
     28e:	ea 06       	cpc	r14, r26
     290:	fb 06       	cpc	r15, r27
     292:	09 f4       	brne	.+2      	; 0x296 <qbufferWrite+0x86>
     294:	4b c0       	rjmp	.+150    	; 0x32c <qbufferWrite+0x11c>
     296:	a0 2e       	mov	r10, r16
     298:	b1 2e       	mov	r11, r17
     29a:	00 e0       	ldi	r16, 0x00	; 0
     29c:	10 e0       	ldi	r17, 0x00	; 0
     29e:	23 c0       	rjmp	.+70     	; 0x2e6 <qbufferWrite+0xd6>
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
	{
		next_in = (p_node->in + 1) %p_node->len;
     2a0:	c7 01       	movw	r24, r14
     2a2:	b6 01       	movw	r22, r12
     2a4:	6f 5f       	subi	r22, 0xFF	; 255
     2a6:	7f 4f       	sbci	r23, 0xFF	; 255
     2a8:	8f 4f       	sbci	r24, 0xFF	; 255
     2aa:	9f 4f       	sbci	r25, 0xFF	; 255
     2ac:	ad 81       	ldd	r26, Y+5	; 0x05
     2ae:	be 81       	ldd	r27, Y+6	; 0x06
     2b0:	18 96       	adiw	r26, 0x08	; 8
     2b2:	2d 91       	ld	r18, X+
     2b4:	3d 91       	ld	r19, X+
     2b6:	4d 91       	ld	r20, X+
     2b8:	5c 91       	ld	r21, X
     2ba:	1b 97       	sbiw	r26, 0x0b	; 11
     2bc:	bb d6       	rcall	.+3446   	; 0x1034 <__udivmodsi4>
     2be:	bf ef       	ldi	r27, 0xFF	; 255
     2c0:	ab 1a       	sub	r10, r27
     2c2:	bb 0a       	sbc	r11, r27
     2c4:	c9 82       	std	Y+1, r12	; 0x01
     2c6:	da 82       	std	Y+2, r13	; 0x02
     2c8:	eb 82       	std	Y+3, r14	; 0x03
     2ca:	fc 82       	std	Y+4, r15	; 0x04

		if (next_in != p_node->out)
     2cc:	ed 81       	ldd	r30, Y+5	; 0x05
     2ce:	fe 81       	ldd	r31, Y+6	; 0x06
     2d0:	c4 80       	ldd	r12, Z+4	; 0x04
     2d2:	d5 80       	ldd	r13, Z+5	; 0x05
     2d4:	e6 80       	ldd	r14, Z+6	; 0x06
     2d6:	f7 80       	ldd	r15, Z+7	; 0x07
     2d8:	6c 15       	cp	r22, r12
     2da:	7d 05       	cpc	r23, r13
     2dc:	8e 05       	cpc	r24, r14
     2de:	9f 05       	cpc	r25, r15
     2e0:	29 f1       	breq	.+74     	; 0x32c <qbufferWrite+0x11c>
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
	{
		next_in = (p_node->in + 1) %p_node->len;
     2e2:	6b 01       	movw	r12, r22
     2e4:	7c 01       	movw	r14, r24

		if (next_in != p_node->out)
		{
			if (p_node->p_buf != NULL)
     2e6:	ad 81       	ldd	r26, Y+5	; 0x05
     2e8:	be 81       	ldd	r27, Y+6	; 0x06
     2ea:	1c 96       	adiw	r26, 0x0c	; 12
     2ec:	8d 91       	ld	r24, X+
     2ee:	9c 91       	ld	r25, X
     2f0:	1d 97       	sbiw	r26, 0x0d	; 13
     2f2:	00 97       	sbiw	r24, 0x00	; 0
     2f4:	39 f0       	breq	.+14     	; 0x304 <qbufferWrite+0xf4>
			{
				p_node->p_buf[p_node->in] = p_data[i];
     2f6:	f5 01       	movw	r30, r10
     2f8:	20 81       	ld	r18, Z
     2fa:	e9 81       	ldd	r30, Y+1	; 0x01
     2fc:	fa 81       	ldd	r31, Y+2	; 0x02
     2fe:	e8 0f       	add	r30, r24
     300:	f9 1f       	adc	r31, r25
     302:	20 83       	st	Z, r18
			}
			p_node->in = next_in;
     304:	ad 81       	ldd	r26, Y+5	; 0x05
     306:	be 81       	ldd	r27, Y+6	; 0x06
     308:	cd 92       	st	X+, r12
     30a:	dd 92       	st	X+, r13
     30c:	ed 92       	st	X+, r14
     30e:	fc 92       	st	X, r15
     310:	13 97       	sbiw	r26, 0x03	; 3
bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
     312:	0f 5f       	subi	r16, 0xFF	; 255
     314:	1f 4f       	sbci	r17, 0xFF	; 255
     316:	c8 01       	movw	r24, r16
     318:	01 2e       	mov	r0, r17
     31a:	00 0c       	add	r0, r0
     31c:	aa 0b       	sbc	r26, r26
     31e:	bb 0b       	sbc	r27, r27
     320:	84 15       	cp	r24, r4
     322:	95 05       	cpc	r25, r5
     324:	a6 05       	cpc	r26, r6
     326:	b7 05       	cpc	r27, r7
     328:	08 f4       	brcc	.+2      	; 0x32c <qbufferWrite+0x11c>
     32a:	ba cf       	rjmp	.-140    	; 0x2a0 <qbufferWrite+0x90>
			ret = false;
			break;
		}
	}
	return ret;
}
     32c:	80 e0       	ldi	r24, 0x00	; 0
     32e:	26 96       	adiw	r28, 0x06	; 6
     330:	0f b6       	in	r0, 0x3f	; 63
     332:	f8 94       	cli
     334:	de bf       	out	0x3e, r29	; 62
     336:	0f be       	out	0x3f, r0	; 63
     338:	cd bf       	out	0x3d, r28	; 61
     33a:	df 91       	pop	r29
     33c:	cf 91       	pop	r28
     33e:	1f 91       	pop	r17
     340:	0f 91       	pop	r16
     342:	ff 90       	pop	r15
     344:	ef 90       	pop	r14
     346:	df 90       	pop	r13
     348:	cf 90       	pop	r12
     34a:	bf 90       	pop	r11
     34c:	af 90       	pop	r10
     34e:	7f 90       	pop	r7
     350:	6f 90       	pop	r6
     352:	5f 90       	pop	r5
     354:	4f 90       	pop	r4
     356:	08 95       	ret

00000358 <qbufferRead>:


bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
     358:	4f 92       	push	r4
     35a:	5f 92       	push	r5
     35c:	6f 92       	push	r6
     35e:	7f 92       	push	r7
     360:	8f 92       	push	r8
     362:	9f 92       	push	r9
     364:	af 92       	push	r10
     366:	bf 92       	push	r11
     368:	ef 92       	push	r14
     36a:	ff 92       	push	r15
     36c:	0f 93       	push	r16
     36e:	1f 93       	push	r17
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	ec 01       	movw	r28, r24
     376:	49 01       	movw	r8, r18
     378:	5a 01       	movw	r10, r20
	bool ret = true;

	for (int i=0; i<length; i++)
     37a:	23 2b       	or	r18, r19
     37c:	24 2b       	or	r18, r20
     37e:	25 2b       	or	r18, r21
     380:	e1 f1       	breq	.+120    	; 0x3fa <qbufferRead+0xa2>
     382:	06 2f       	mov	r16, r22
     384:	17 2f       	mov	r17, r23
     386:	e1 2c       	mov	r14, r1
     388:	f1 2c       	mov	r15, r1
	{
		if (p_node->p_buf != NULL)
     38a:	ec 85       	ldd	r30, Y+12	; 0x0c
     38c:	fd 85       	ldd	r31, Y+13	; 0x0d
     38e:	30 97       	sbiw	r30, 0x00	; 0
     390:	39 f0       	breq	.+14     	; 0x3a0 <qbufferRead+0x48>
		{
			p_data[i] = p_node->p_buf[p_node->out];
     392:	8c 81       	ldd	r24, Y+4	; 0x04
     394:	9d 81       	ldd	r25, Y+5	; 0x05
     396:	e8 0f       	add	r30, r24
     398:	f9 1f       	adc	r31, r25
     39a:	80 81       	ld	r24, Z
     39c:	f8 01       	movw	r30, r16
     39e:	80 83       	st	Z, r24
		}

		if (p_node->out != p_node->in)
     3a0:	8c 81       	ldd	r24, Y+4	; 0x04
     3a2:	9d 81       	ldd	r25, Y+5	; 0x05
     3a4:	ae 81       	ldd	r26, Y+6	; 0x06
     3a6:	bf 81       	ldd	r27, Y+7	; 0x07
     3a8:	48 80       	ld	r4, Y
     3aa:	59 80       	ldd	r5, Y+1	; 0x01
     3ac:	6a 80       	ldd	r6, Y+2	; 0x02
     3ae:	7b 80       	ldd	r7, Y+3	; 0x03
     3b0:	84 15       	cp	r24, r4
     3b2:	95 05       	cpc	r25, r5
     3b4:	a6 05       	cpc	r26, r6
     3b6:	b7 05       	cpc	r27, r7
     3b8:	11 f1       	breq	.+68     	; 0x3fe <qbufferRead+0xa6>
		{
			p_node->out = (p_node->out + 1) % p_node->len;
     3ba:	bc 01       	movw	r22, r24
     3bc:	cd 01       	movw	r24, r26
     3be:	6f 5f       	subi	r22, 0xFF	; 255
     3c0:	7f 4f       	sbci	r23, 0xFF	; 255
     3c2:	8f 4f       	sbci	r24, 0xFF	; 255
     3c4:	9f 4f       	sbci	r25, 0xFF	; 255
     3c6:	28 85       	ldd	r18, Y+8	; 0x08
     3c8:	39 85       	ldd	r19, Y+9	; 0x09
     3ca:	4a 85       	ldd	r20, Y+10	; 0x0a
     3cc:	5b 85       	ldd	r21, Y+11	; 0x0b
     3ce:	32 d6       	rcall	.+3172   	; 0x1034 <__udivmodsi4>
     3d0:	6c 83       	std	Y+4, r22	; 0x04
     3d2:	7d 83       	std	Y+5, r23	; 0x05
     3d4:	8e 83       	std	Y+6, r24	; 0x06
     3d6:	9f 83       	std	Y+7, r25	; 0x07

bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;

	for (int i=0; i<length; i++)
     3d8:	ff ef       	ldi	r31, 0xFF	; 255
     3da:	ef 1a       	sub	r14, r31
     3dc:	ff 0a       	sbc	r15, r31
     3de:	0f 5f       	subi	r16, 0xFF	; 255
     3e0:	1f 4f       	sbci	r17, 0xFF	; 255
     3e2:	c7 01       	movw	r24, r14
     3e4:	0f 2c       	mov	r0, r15
     3e6:	00 0c       	add	r0, r0
     3e8:	aa 0b       	sbc	r26, r26
     3ea:	bb 0b       	sbc	r27, r27
     3ec:	88 15       	cp	r24, r8
     3ee:	99 05       	cpc	r25, r9
     3f0:	aa 05       	cpc	r26, r10
     3f2:	bb 05       	cpc	r27, r11
     3f4:	50 f2       	brcs	.-108    	; 0x38a <qbufferRead+0x32>
}


bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;
     3f6:	81 e0       	ldi	r24, 0x01	; 1
     3f8:	03 c0       	rjmp	.+6      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fa:	81 e0       	ldi	r24, 0x01	; 1
     3fc:	01 c0       	rjmp	.+2      	; 0x400 <__LOCK_REGION_LENGTH__>
		{
			p_node->out = (p_node->out + 1) % p_node->len;
		}
		else
		{
			ret = false;
     3fe:	80 e0       	ldi	r24, 0x00	; 0
			break;
		}
	}
	return ret;
}
     400:	df 91       	pop	r29
     402:	cf 91       	pop	r28
     404:	1f 91       	pop	r17
     406:	0f 91       	pop	r16
     408:	ff 90       	pop	r15
     40a:	ef 90       	pop	r14
     40c:	bf 90       	pop	r11
     40e:	af 90       	pop	r10
     410:	9f 90       	pop	r9
     412:	8f 90       	pop	r8
     414:	7f 90       	pop	r7
     416:	6f 90       	pop	r6
     418:	5f 90       	pop	r5
     41a:	4f 90       	pop	r4
     41c:	08 95       	ret

0000041e <qbufferAvailable>:

uint32_t qbufferAvailable(qbuffer_t *p_node)
{
     41e:	0f 93       	push	r16
     420:	1f 93       	push	r17
     422:	fc 01       	movw	r30, r24
	uint32_t ret;

	ret = (p_node->in - p_node->out) %p_node->len;

	return ret;
     424:	80 81       	ld	r24, Z
     426:	91 81       	ldd	r25, Z+1	; 0x01
     428:	a2 81       	ldd	r26, Z+2	; 0x02
     42a:	b3 81       	ldd	r27, Z+3	; 0x03
     42c:	04 81       	ldd	r16, Z+4	; 0x04
     42e:	15 81       	ldd	r17, Z+5	; 0x05
     430:	26 81       	ldd	r18, Z+6	; 0x06
     432:	37 81       	ldd	r19, Z+7	; 0x07
     434:	bc 01       	movw	r22, r24
     436:	cd 01       	movw	r24, r26
     438:	60 1b       	sub	r22, r16
     43a:	71 0b       	sbc	r23, r17
     43c:	82 0b       	sbc	r24, r18
     43e:	93 0b       	sbc	r25, r19
     440:	20 85       	ldd	r18, Z+8	; 0x08
     442:	31 85       	ldd	r19, Z+9	; 0x09
     444:	42 85       	ldd	r20, Z+10	; 0x0a
     446:	53 85       	ldd	r21, Z+11	; 0x0b
     448:	f5 d5       	rcall	.+3050   	; 0x1034 <__udivmodsi4>
}
     44a:	1f 91       	pop	r17
     44c:	0f 91       	pop	r16
     44e:	08 95       	ret

00000450 <gpioPinMode>:
	}
	return ret;
}

bool gpioPinMode(uint8_t ch, uint8_t mode)
{
     450:	cf 93       	push	r28
     452:	df 93       	push	r29
     454:	00 d0       	rcall	.+0      	; 0x456 <gpioPinMode+0x6>
     456:	cd b7       	in	r28, 0x3d	; 61
     458:	de b7       	in	r29, 0x3e	; 62
	bool ret = false;
	
	GPIO_InitTypeDef GPIO_InitStruct = {0};
     45a:	1a 82       	std	Y+2, r1	; 0x02
     45c:	19 82       	std	Y+1, r1	; 0x01
	
	if (ch < 0 || ch >= GPIO_MAX_CH) return ret;
     45e:	81 11       	cpse	r24, r1
     460:	0f c0       	rjmp	.+30     	; 0x480 <gpioPinMode+0x30>
	
	switch(mode)
     462:	61 30       	cpi	r22, 0x01	; 1
     464:	11 f4       	brne	.+4      	; 0x46a <gpioPinMode+0x1a>
		case _DEF_INPUT:
			GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
		break;
		
		case _DEF_OUTPUT:
			GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT;
     466:	81 e0       	ldi	r24, 0x01	; 1
     468:	8a 83       	std	Y+2, r24	; 0x02
		break;
		default:
		break;
	}
	
	GPIO_InitStruct.Pin = gpio_tbl[ch].pin;
     46a:	e0 e0       	ldi	r30, 0x00	; 0
     46c:	f1 e0       	ldi	r31, 0x01	; 1
     46e:	81 81       	ldd	r24, Z+1	; 0x01
     470:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Init(gpio_tbl[ch].port, &GPIO_InitStruct);
     472:	be 01       	movw	r22, r28
     474:	6f 5f       	subi	r22, 0xFF	; 255
     476:	7f 4f       	sbci	r23, 0xFF	; 255
     478:	80 81       	ld	r24, Z
     47a:	db d0       	rcall	.+438    	; 0x632 <GPIO_Init>
	ret = true;
	
	return ret;
     47c:	81 e0       	ldi	r24, 0x01	; 1
     47e:	01 c0       	rjmp	.+2      	; 0x482 <gpioPinMode+0x32>
{
	bool ret = false;
	
	GPIO_InitTypeDef GPIO_InitStruct = {0};
	
	if (ch < 0 || ch >= GPIO_MAX_CH) return ret;
     480:	80 e0       	ldi	r24, 0x00	; 0
	GPIO_InitStruct.Pin = gpio_tbl[ch].pin;
	GPIO_Init(gpio_tbl[ch].port, &GPIO_InitStruct);
	ret = true;
	
	return ret;
}
     482:	0f 90       	pop	r0
     484:	0f 90       	pop	r0
     486:	df 91       	pop	r29
     488:	cf 91       	pop	r28
     48a:	08 95       	ret

0000048c <gpioInit>:
{
	bool ret = true;
	
	for(int i = 0; i < GPIO_MAX_CH; i++)
	{
		gpioPinMode(i, gpio_tbl[i].mode);
     48c:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     490:	80 e0       	ldi	r24, 0x00	; 0
     492:	de df       	rcall	.-68     	; 0x450 <gpioPinMode>
	}
	return ret;
}
     494:	81 e0       	ldi	r24, 0x01	; 1
     496:	08 95       	ret

00000498 <gpioPinWrite>:
	return ret;
}

void gpioPinWrite(uint8_t ch, bool value)
{
	if (ch < 0 || ch >= GPIO_MAX_CH) return;
     498:	81 11       	cpse	r24, r1
     49a:	0f c0       	rjmp	.+30     	; 0x4ba <gpioPinWrite+0x22>
	if (value)
     49c:	66 23       	and	r22, r22
     49e:	39 f0       	breq	.+14     	; 0x4ae <gpioPinWrite+0x16>
	{
		GPIO_WritePin(gpio_tbl[ch].port, gpio_tbl[ch].pin, gpio_tbl[ch].on_state);
     4a0:	e0 e0       	ldi	r30, 0x00	; 0
     4a2:	f1 e0       	ldi	r31, 0x01	; 1
     4a4:	43 81       	ldd	r20, Z+3	; 0x03
     4a6:	61 81       	ldd	r22, Z+1	; 0x01
     4a8:	80 81       	ld	r24, Z
     4aa:	fe c0       	rjmp	.+508    	; 0x6a8 <GPIO_WritePin>
     4ac:	08 95       	ret
	}
	else
	{
		GPIO_WritePin(gpio_tbl[ch].port, gpio_tbl[ch].pin, gpio_tbl[ch].off_state);
     4ae:	e0 e0       	ldi	r30, 0x00	; 0
     4b0:	f1 e0       	ldi	r31, 0x01	; 1
     4b2:	44 81       	ldd	r20, Z+4	; 0x04
     4b4:	61 81       	ldd	r22, Z+1	; 0x01
     4b6:	80 81       	ld	r24, Z
     4b8:	f7 c0       	rjmp	.+494    	; 0x6a8 <GPIO_WritePin>
     4ba:	08 95       	ret

000004bc <uartInit>:
		case _DEF_UART0:
		baud = huart1.Init.BaudRate;
		break;
	}
	return baud;
}
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	08 95       	ret

000004c0 <uartOpen>:
     4c0:	81 11       	cpse	r24, r1
     4c2:	27 c0       	rjmp	.+78     	; 0x512 <uartOpen+0x52>
     4c4:	e1 e8       	ldi	r30, 0x81	; 129
     4c6:	f2 e0       	ldi	r31, 0x02	; 2
     4c8:	10 82       	st	Z, r1
     4ca:	41 83       	std	Z+1, r20	; 0x01
     4cc:	52 83       	std	Z+2, r21	; 0x02
     4ce:	63 83       	std	Z+3, r22	; 0x03
     4d0:	74 83       	std	Z+4, r23	; 0x04
     4d2:	16 82       	std	Z+6, r1	; 0x06
     4d4:	17 82       	std	Z+7, r1	; 0x07
     4d6:	15 82       	std	Z+5, r1	; 0x05
     4d8:	82 e0       	ldi	r24, 0x02	; 2
     4da:	80 87       	std	Z+8, r24	; 0x08
     4dc:	11 86       	std	Z+9, r1	; 0x09
     4de:	20 e0       	ldi	r18, 0x00	; 0
     4e0:	31 e0       	ldi	r19, 0x01	; 1
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	63 e7       	ldi	r22, 0x73	; 115
     4e8:	71 e0       	ldi	r23, 0x01	; 1
     4ea:	83 e7       	ldi	r24, 0x73	; 115
     4ec:	92 e0       	ldi	r25, 0x02	; 2
     4ee:	7f de       	rcall	.-770    	; 0x1ee <qbufferCreate>
     4f0:	81 e8       	ldi	r24, 0x81	; 129
     4f2:	92 e0       	ldi	r25, 0x02	; 2
     4f4:	0d d1       	rcall	.+538    	; 0x710 <UART_Init>
     4f6:	81 11       	cpse	r24, r1
     4f8:	0e c0       	rjmp	.+28     	; 0x516 <uartOpen+0x56>
     4fa:	41 e0       	ldi	r20, 0x01	; 1
     4fc:	50 e0       	ldi	r21, 0x00	; 0
     4fe:	62 e7       	ldi	r22, 0x72	; 114
     500:	71 e0       	ldi	r23, 0x01	; 1
     502:	81 e8       	ldi	r24, 0x81	; 129
     504:	92 e0       	ldi	r25, 0x02	; 2
     506:	d6 d3       	rcall	.+1964   	; 0xcb4 <UART_Receive_IT>
     508:	91 e0       	ldi	r25, 0x01	; 1
     50a:	88 23       	and	r24, r24
     50c:	29 f0       	breq	.+10     	; 0x518 <uartOpen+0x58>
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	03 c0       	rjmp	.+6      	; 0x518 <uartOpen+0x58>
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	01 c0       	rjmp	.+2      	; 0x518 <uartOpen+0x58>
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	89 2f       	mov	r24, r25
     51a:	08 95       	ret

0000051c <uartAvailable>:
     51c:	81 11       	cpse	r24, r1
     51e:	04 c0       	rjmp	.+8      	; 0x528 <uartAvailable+0xc>
     520:	83 e7       	ldi	r24, 0x73	; 115
     522:	92 e0       	ldi	r25, 0x02	; 2
     524:	7c cf       	rjmp	.-264    	; 0x41e <qbufferAvailable>
     526:	08 95       	ret
     528:	60 e0       	ldi	r22, 0x00	; 0
     52a:	70 e0       	ldi	r23, 0x00	; 0
     52c:	cb 01       	movw	r24, r22
     52e:	08 95       	ret

00000530 <uartRead>:
     530:	cf 93       	push	r28
     532:	df 93       	push	r29
     534:	1f 92       	push	r1
     536:	cd b7       	in	r28, 0x3d	; 61
     538:	de b7       	in	r29, 0x3e	; 62
     53a:	19 82       	std	Y+1, r1	; 0x01
     53c:	81 11       	cpse	r24, r1
     53e:	0e c0       	rjmp	.+28     	; 0x55c <uartRead+0x2c>
     540:	21 e0       	ldi	r18, 0x01	; 1
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	40 e0       	ldi	r20, 0x00	; 0
     546:	50 e0       	ldi	r21, 0x00	; 0
     548:	be 01       	movw	r22, r28
     54a:	6f 5f       	subi	r22, 0xFF	; 255
     54c:	7f 4f       	sbci	r23, 0xFF	; 255
     54e:	83 e7       	ldi	r24, 0x73	; 115
     550:	92 e0       	ldi	r25, 0x02	; 2
     552:	02 df       	rcall	.-508    	; 0x358 <qbufferRead>
     554:	81 11       	cpse	r24, r1
     556:	02 c0       	rjmp	.+4      	; 0x55c <uartRead+0x2c>
     558:	8f ef       	ldi	r24, 0xFF	; 255
     55a:	89 83       	std	Y+1, r24	; 0x01
     55c:	89 81       	ldd	r24, Y+1	; 0x01
     55e:	0f 90       	pop	r0
     560:	df 91       	pop	r29
     562:	cf 91       	pop	r28
     564:	08 95       	ret

00000566 <uartWrite>:
     566:	cf 92       	push	r12
     568:	df 92       	push	r13
     56a:	ef 92       	push	r14
     56c:	ff 92       	push	r15
     56e:	0f 93       	push	r16
     570:	1f 93       	push	r17
     572:	69 01       	movw	r12, r18
     574:	7a 01       	movw	r14, r20
     576:	81 11       	cpse	r24, r1
     578:	0b c0       	rjmp	.+22     	; 0x590 <uartWrite+0x2a>
     57a:	04 e6       	ldi	r16, 0x64	; 100
     57c:	10 e0       	ldi	r17, 0x00	; 0
     57e:	20 e0       	ldi	r18, 0x00	; 0
     580:	30 e0       	ldi	r19, 0x00	; 0
     582:	a6 01       	movw	r20, r12
     584:	81 e8       	ldi	r24, 0x81	; 129
     586:	92 e0       	ldi	r25, 0x02	; 2
     588:	c0 d2       	rcall	.+1408   	; 0xb0a <UART_Transmit>
     58a:	88 23       	and	r24, r24
     58c:	41 f0       	breq	.+16     	; 0x59e <uartWrite+0x38>
     58e:	04 c0       	rjmp	.+8      	; 0x598 <uartWrite+0x32>
     590:	c1 2c       	mov	r12, r1
     592:	d1 2c       	mov	r13, r1
     594:	76 01       	movw	r14, r12
     596:	03 c0       	rjmp	.+6      	; 0x59e <uartWrite+0x38>
     598:	c1 2c       	mov	r12, r1
     59a:	d1 2c       	mov	r13, r1
     59c:	76 01       	movw	r14, r12
     59e:	c7 01       	movw	r24, r14
     5a0:	b6 01       	movw	r22, r12
     5a2:	1f 91       	pop	r17
     5a4:	0f 91       	pop	r16
     5a6:	ff 90       	pop	r15
     5a8:	ef 90       	pop	r14
     5aa:	df 90       	pop	r13
     5ac:	cf 90       	pop	r12
     5ae:	08 95       	ret

000005b0 <uartPrintf>:
     5b0:	cf 93       	push	r28
     5b2:	df 93       	push	r29
     5b4:	cd b7       	in	r28, 0x3d	; 61
     5b6:	de b7       	in	r29, 0x3e	; 62
     5b8:	da 95       	dec	r29
     5ba:	0f b6       	in	r0, 0x3f	; 63
     5bc:	f8 94       	cli
     5be:	de bf       	out	0x3e, r29	; 62
     5c0:	0f be       	out	0x3f, r0	; 63
     5c2:	cd bf       	out	0x3d, r28	; 61
     5c4:	9e 01       	movw	r18, r28
     5c6:	28 5f       	subi	r18, 0xF8	; 248
     5c8:	3e 4f       	sbci	r19, 0xFE	; 254
     5ca:	ca 5f       	subi	r28, 0xFA	; 250
     5cc:	de 4f       	sbci	r29, 0xFE	; 254
     5ce:	48 81       	ld	r20, Y
     5d0:	59 81       	ldd	r21, Y+1	; 0x01
     5d2:	c6 50       	subi	r28, 0x06	; 6
     5d4:	d1 40       	sbci	r29, 0x01	; 1
     5d6:	60 e0       	ldi	r22, 0x00	; 0
     5d8:	71 e0       	ldi	r23, 0x01	; 1
     5da:	ce 01       	movw	r24, r28
     5dc:	01 96       	adiw	r24, 0x01	; 1
     5de:	4c d5       	rcall	.+2712   	; 0x1078 <vsnprintf>
     5e0:	9c 01       	movw	r18, r24
     5e2:	99 0f       	add	r25, r25
     5e4:	44 0b       	sbc	r20, r20
     5e6:	55 0b       	sbc	r21, r21
     5e8:	be 01       	movw	r22, r28
     5ea:	6f 5f       	subi	r22, 0xFF	; 255
     5ec:	7f 4f       	sbci	r23, 0xFF	; 255
     5ee:	cb 5f       	subi	r28, 0xFB	; 251
     5f0:	de 4f       	sbci	r29, 0xFE	; 254
     5f2:	88 81       	ld	r24, Y
     5f4:	c5 50       	subi	r28, 0x05	; 5
     5f6:	d1 40       	sbci	r29, 0x01	; 1
     5f8:	b6 df       	rcall	.-148    	; 0x566 <uartWrite>
     5fa:	d3 95       	inc	r29
     5fc:	0f b6       	in	r0, 0x3f	; 63
     5fe:	f8 94       	cli
     600:	de bf       	out	0x3e, r29	; 62
     602:	0f be       	out	0x3f, r0	; 63
     604:	cd bf       	out	0x3d, r28	; 61
     606:	df 91       	pop	r29
     608:	cf 91       	pop	r28
     60a:	08 95       	ret

0000060c <UART_TxCpltCallback>:


void UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
     60c:	08 95       	ret

0000060e <UART_RxCpltCallback>:
	return;
}

void UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
	switch(huart->USARTn)
     60e:	fc 01       	movw	r30, r24
     610:	20 81       	ld	r18, Z
     612:	21 11       	cpse	r18, r1
     614:	09 c0       	rjmp	.+18     	; 0x628 <UART_RxCpltCallback+0x1a>
	{
		case USART0:
		qbufferWrite(&qbuffer[_DEF_UART0], huart->pRxBuffPtr, huart->RxXferSize);
     616:	20 89       	ldd	r18, Z+16	; 0x10
     618:	31 89       	ldd	r19, Z+17	; 0x11
     61a:	40 e0       	ldi	r20, 0x00	; 0
     61c:	50 e0       	ldi	r21, 0x00	; 0
     61e:	64 85       	ldd	r22, Z+12	; 0x0c
     620:	75 85       	ldd	r23, Z+13	; 0x0d
     622:	83 e7       	ldi	r24, 0x73	; 115
     624:	92 e0       	ldi	r25, 0x02	; 2
     626:	f4 cd       	rjmp	.-1048   	; 0x210 <qbufferWrite>
     628:	08 95       	ret

0000062a <hwInit>:
ï»¿#include "hw.h"

void hwInit(void)
{
	bspInit();
     62a:	e0 dd       	rcall	.-1088   	; 0x1ec <bspInit>
	gpioInit();
     62c:	2f df       	rcall	.-418    	; 0x48c <gpioInit>
	uartInit();
     62e:	46 cf       	rjmp	.-372    	; 0x4bc <uartInit>
     630:	08 95       	ret

00000632 <GPIO_Init>:
     632:	90 e0       	ldi	r25, 0x00	; 0
	GPIO_PinState ret = 0x00;
	GPIO_TypeDef *gpio = &GPIO_descripter[port];

	ret = READB(*(gpio->PINn), pin);
	return ret;
}
     634:	db 01       	movw	r26, r22
     636:	11 96       	adiw	r26, 0x01	; 1
     638:	2c 91       	ld	r18, X
     63a:	11 97       	sbiw	r26, 0x01	; 1
     63c:	21 11       	cpse	r18, r1
     63e:	19 c0       	rjmp	.+50     	; 0x672 <GPIO_Init+0x40>
     640:	fc 01       	movw	r30, r24
     642:	ee 0f       	add	r30, r30
     644:	ff 1f       	adc	r31, r31
     646:	e8 0f       	add	r30, r24
     648:	f9 1f       	adc	r31, r25
     64a:	ee 0f       	add	r30, r30
     64c:	ff 1f       	adc	r31, r31
     64e:	eb 5f       	subi	r30, 0xFB	; 251
     650:	fe 4f       	sbci	r31, 0xFE	; 254
     652:	01 90       	ld	r0, Z+
     654:	f0 81       	ld	r31, Z
     656:	e0 2d       	mov	r30, r0
     658:	20 81       	ld	r18, Z
     65a:	81 e0       	ldi	r24, 0x01	; 1
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	0c 90       	ld	r0, X
     660:	02 c0       	rjmp	.+4      	; 0x666 <GPIO_Init+0x34>
     662:	88 0f       	add	r24, r24
     664:	99 1f       	adc	r25, r25
     666:	0a 94       	dec	r0
     668:	e2 f7       	brpl	.-8      	; 0x662 <GPIO_Init+0x30>
     66a:	80 95       	com	r24
     66c:	82 23       	and	r24, r18
     66e:	80 83       	st	Z, r24
     670:	08 95       	ret
     672:	21 30       	cpi	r18, 0x01	; 1
     674:	c1 f4       	brne	.+48     	; 0x6a6 <GPIO_Init+0x74>
     676:	fc 01       	movw	r30, r24
     678:	ee 0f       	add	r30, r30
     67a:	ff 1f       	adc	r31, r31
     67c:	e8 0f       	add	r30, r24
     67e:	f9 1f       	adc	r31, r25
     680:	ee 0f       	add	r30, r30
     682:	ff 1f       	adc	r31, r31
     684:	eb 5f       	subi	r30, 0xFB	; 251
     686:	fe 4f       	sbci	r31, 0xFE	; 254
     688:	01 90       	ld	r0, Z+
     68a:	f0 81       	ld	r31, Z
     68c:	e0 2d       	mov	r30, r0
     68e:	20 81       	ld	r18, Z
     690:	81 e0       	ldi	r24, 0x01	; 1
     692:	90 e0       	ldi	r25, 0x00	; 0
     694:	db 01       	movw	r26, r22
     696:	0c 90       	ld	r0, X
     698:	02 c0       	rjmp	.+4      	; 0x69e <GPIO_Init+0x6c>
     69a:	88 0f       	add	r24, r24
     69c:	99 1f       	adc	r25, r25
     69e:	0a 94       	dec	r0
     6a0:	e2 f7       	brpl	.-8      	; 0x69a <GPIO_Init+0x68>
     6a2:	82 2b       	or	r24, r18
     6a4:	80 83       	st	Z, r24
     6a6:	08 95       	ret

000006a8 <GPIO_WritePin>:

void GPIO_WritePin(uint8_t port, uint8_t pin, GPIO_PinState pinState)
{
	GPIO_TypeDef *gpio = &GPIO_descripter[port];
     6a8:	90 e0       	ldi	r25, 0x00	; 0
	
	if(pinState == PIN_RESET)
     6aa:	41 11       	cpse	r20, r1
     6ac:	18 c0       	rjmp	.+48     	; 0x6de <GPIO_WritePin+0x36>
	{
		CLRB(*(gpio->PORTn), pin);
     6ae:	fc 01       	movw	r30, r24
     6b0:	ee 0f       	add	r30, r30
     6b2:	ff 1f       	adc	r31, r31
     6b4:	e8 0f       	add	r30, r24
     6b6:	f9 1f       	adc	r31, r25
     6b8:	ee 0f       	add	r30, r30
     6ba:	ff 1f       	adc	r31, r31
     6bc:	eb 5f       	subi	r30, 0xFB	; 251
     6be:	fe 4f       	sbci	r31, 0xFE	; 254
     6c0:	02 80       	ldd	r0, Z+2	; 0x02
     6c2:	f3 81       	ldd	r31, Z+3	; 0x03
     6c4:	e0 2d       	mov	r30, r0
     6c6:	20 81       	ld	r18, Z
     6c8:	81 e0       	ldi	r24, 0x01	; 1
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	02 c0       	rjmp	.+4      	; 0x6d2 <GPIO_WritePin+0x2a>
     6ce:	88 0f       	add	r24, r24
     6d0:	99 1f       	adc	r25, r25
     6d2:	6a 95       	dec	r22
     6d4:	e2 f7       	brpl	.-8      	; 0x6ce <GPIO_WritePin+0x26>
     6d6:	80 95       	com	r24
     6d8:	82 23       	and	r24, r18
     6da:	80 83       	st	Z, r24
     6dc:	08 95       	ret
	}
	else if(pinState == PIN_SET)
     6de:	41 30       	cpi	r20, 0x01	; 1
     6e0:	b1 f4       	brne	.+44     	; 0x70e <GPIO_WritePin+0x66>
	{
		SETB(*(gpio->PORTn), pin);
     6e2:	fc 01       	movw	r30, r24
     6e4:	ee 0f       	add	r30, r30
     6e6:	ff 1f       	adc	r31, r31
     6e8:	e8 0f       	add	r30, r24
     6ea:	f9 1f       	adc	r31, r25
     6ec:	ee 0f       	add	r30, r30
     6ee:	ff 1f       	adc	r31, r31
     6f0:	eb 5f       	subi	r30, 0xFB	; 251
     6f2:	fe 4f       	sbci	r31, 0xFE	; 254
     6f4:	02 80       	ldd	r0, Z+2	; 0x02
     6f6:	f3 81       	ldd	r31, Z+3	; 0x03
     6f8:	e0 2d       	mov	r30, r0
     6fa:	20 81       	ld	r18, Z
     6fc:	81 e0       	ldi	r24, 0x01	; 1
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	02 c0       	rjmp	.+4      	; 0x706 <GPIO_WritePin+0x5e>
     702:	88 0f       	add	r24, r24
     704:	99 1f       	adc	r25, r25
     706:	6a 95       	dec	r22
     708:	e2 f7       	brpl	.-8      	; 0x702 <GPIO_WritePin+0x5a>
     70a:	82 2b       	or	r24, r18
     70c:	80 83       	st	Z, r24
     70e:	08 95       	ret

00000710 <UART_Init>:
{
	return;
}

__attribute__((weak)) void UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
     710:	cf 92       	push	r12
     712:	df 92       	push	r13
     714:	ef 92       	push	r14
     716:	ff 92       	push	r15
     718:	0f 93       	push	r16
     71a:	1f 93       	push	r17
     71c:	cf 93       	push	r28
     71e:	df 93       	push	r29
     720:	fc 01       	movw	r30, r24
     722:	c0 81       	ld	r28, Z
     724:	d0 e0       	ldi	r29, 0x00	; 0
     726:	00 97       	sbiw	r24, 0x00	; 0
     728:	09 f4       	brne	.+2      	; 0x72c <UART_Init+0x1c>
     72a:	e3 c1       	rjmp	.+966    	; 0xaf2 <UART_Init+0x3e2>
     72c:	8c 01       	movw	r16, r24
     72e:	81 85       	ldd	r24, Z+9	; 0x09
     730:	88 23       	and	r24, r24
     732:	21 f0       	breq	.+8      	; 0x73c <UART_Init+0x2c>
     734:	81 30       	cpi	r24, 0x01	; 1
     736:	09 f4       	brne	.+2      	; 0x73a <UART_Init+0x2a>
     738:	41 c0       	rjmp	.+130    	; 0x7bc <UART_Init+0xac>
     73a:	7b c0       	rjmp	.+246    	; 0x832 <UART_Init+0x122>
     73c:	81 81       	ldd	r24, Z+1	; 0x01
     73e:	92 81       	ldd	r25, Z+2	; 0x02
     740:	a3 81       	ldd	r26, Z+3	; 0x03
     742:	b4 81       	ldd	r27, Z+4	; 0x04
     744:	88 0f       	add	r24, r24
     746:	99 1f       	adc	r25, r25
     748:	aa 1f       	adc	r26, r26
     74a:	bb 1f       	adc	r27, r27
     74c:	88 0f       	add	r24, r24
     74e:	99 1f       	adc	r25, r25
     750:	aa 1f       	adc	r26, r26
     752:	bb 1f       	adc	r27, r27
     754:	bc 01       	movw	r22, r24
     756:	cd 01       	movw	r24, r26
     758:	66 0f       	add	r22, r22
     75a:	77 1f       	adc	r23, r23
     75c:	88 1f       	adc	r24, r24
     75e:	99 1f       	adc	r25, r25
     760:	66 0f       	add	r22, r22
     762:	77 1f       	adc	r23, r23
     764:	88 1f       	adc	r24, r24
     766:	99 1f       	adc	r25, r25
     768:	d7 d3       	rcall	.+1966   	; 0xf18 <__floatunsisf>
     76a:	9b 01       	movw	r18, r22
     76c:	ac 01       	movw	r20, r24
     76e:	60 e0       	ldi	r22, 0x00	; 0
     770:	74 e2       	ldi	r23, 0x24	; 36
     772:	84 e7       	ldi	r24, 0x74	; 116
     774:	9b e4       	ldi	r25, 0x4B	; 75
     776:	3c d3       	rcall	.+1656   	; 0xdf0 <__divsf3>
     778:	20 e0       	ldi	r18, 0x00	; 0
     77a:	30 e0       	ldi	r19, 0x00	; 0
     77c:	40 e0       	ldi	r20, 0x00	; 0
     77e:	5f e3       	ldi	r21, 0x3F	; 63
     780:	d2 d2       	rcall	.+1444   	; 0xd26 <__subsf3>
     782:	9e d3       	rcall	.+1852   	; 0xec0 <__fixunssfsi>
     784:	fe 01       	movw	r30, r28
     786:	ee 0f       	add	r30, r30
     788:	ff 1f       	adc	r31, r31
     78a:	ec 0f       	add	r30, r28
     78c:	fd 1f       	adc	r31, r29
     78e:	ee 0f       	add	r30, r30
     790:	ff 1f       	adc	r31, r31
     792:	ee 0f       	add	r30, r30
     794:	ff 1f       	adc	r31, r31
     796:	e1 5d       	subi	r30, 0xD1	; 209
     798:	fe 4f       	sbci	r31, 0xFE	; 254
     79a:	a0 85       	ldd	r26, Z+8	; 0x08
     79c:	b1 85       	ldd	r27, Z+9	; 0x09
     79e:	c7 2e       	mov	r12, r23
     7a0:	d8 2e       	mov	r13, r24
     7a2:	e9 2e       	mov	r14, r25
     7a4:	ff 24       	eor	r15, r15
     7a6:	cc 92       	st	X, r12
     7a8:	a2 85       	ldd	r26, Z+10	; 0x0a
     7aa:	b3 85       	ldd	r27, Z+11	; 0x0b
     7ac:	6c 93       	st	X, r22
     7ae:	02 80       	ldd	r0, Z+2	; 0x02
     7b0:	f3 81       	ldd	r31, Z+3	; 0x03
     7b2:	e0 2d       	mov	r30, r0
     7b4:	80 81       	ld	r24, Z
     7b6:	8d 7f       	andi	r24, 0xFD	; 253
     7b8:	80 83       	st	Z, r24
     7ba:	3b c0       	rjmp	.+118    	; 0x832 <UART_Init+0x122>
     7bc:	81 81       	ldd	r24, Z+1	; 0x01
     7be:	92 81       	ldd	r25, Z+2	; 0x02
     7c0:	a3 81       	ldd	r26, Z+3	; 0x03
     7c2:	b4 81       	ldd	r27, Z+4	; 0x04
     7c4:	88 0f       	add	r24, r24
     7c6:	99 1f       	adc	r25, r25
     7c8:	aa 1f       	adc	r26, r26
     7ca:	bb 1f       	adc	r27, r27
     7cc:	88 0f       	add	r24, r24
     7ce:	99 1f       	adc	r25, r25
     7d0:	aa 1f       	adc	r26, r26
     7d2:	bb 1f       	adc	r27, r27
     7d4:	bc 01       	movw	r22, r24
     7d6:	cd 01       	movw	r24, r26
     7d8:	66 0f       	add	r22, r22
     7da:	77 1f       	adc	r23, r23
     7dc:	88 1f       	adc	r24, r24
     7de:	99 1f       	adc	r25, r25
     7e0:	9b d3       	rcall	.+1846   	; 0xf18 <__floatunsisf>
     7e2:	9b 01       	movw	r18, r22
     7e4:	ac 01       	movw	r20, r24
     7e6:	60 e0       	ldi	r22, 0x00	; 0
     7e8:	74 e2       	ldi	r23, 0x24	; 36
     7ea:	84 e7       	ldi	r24, 0x74	; 116
     7ec:	9b e4       	ldi	r25, 0x4B	; 75
     7ee:	00 d3       	rcall	.+1536   	; 0xdf0 <__divsf3>
     7f0:	20 e0       	ldi	r18, 0x00	; 0
     7f2:	30 e0       	ldi	r19, 0x00	; 0
     7f4:	40 e0       	ldi	r20, 0x00	; 0
     7f6:	5f e3       	ldi	r21, 0x3F	; 63
     7f8:	96 d2       	rcall	.+1324   	; 0xd26 <__subsf3>
     7fa:	62 d3       	rcall	.+1732   	; 0xec0 <__fixunssfsi>
     7fc:	fe 01       	movw	r30, r28
     7fe:	ee 0f       	add	r30, r30
     800:	ff 1f       	adc	r31, r31
     802:	ec 0f       	add	r30, r28
     804:	fd 1f       	adc	r31, r29
     806:	ee 0f       	add	r30, r30
     808:	ff 1f       	adc	r31, r31
     80a:	ee 0f       	add	r30, r30
     80c:	ff 1f       	adc	r31, r31
     80e:	e1 5d       	subi	r30, 0xD1	; 209
     810:	fe 4f       	sbci	r31, 0xFE	; 254
     812:	a0 85       	ldd	r26, Z+8	; 0x08
     814:	b1 85       	ldd	r27, Z+9	; 0x09
     816:	c7 2e       	mov	r12, r23
     818:	d8 2e       	mov	r13, r24
     81a:	e9 2e       	mov	r14, r25
     81c:	ff 24       	eor	r15, r15
     81e:	cc 92       	st	X, r12
     820:	a2 85       	ldd	r26, Z+10	; 0x0a
     822:	b3 85       	ldd	r27, Z+11	; 0x0b
     824:	6c 93       	st	X, r22
     826:	02 80       	ldd	r0, Z+2	; 0x02
     828:	f3 81       	ldd	r31, Z+3	; 0x03
     82a:	e0 2d       	mov	r30, r0
     82c:	80 81       	ld	r24, Z
     82e:	82 60       	ori	r24, 0x02	; 2
     830:	80 83       	st	Z, r24
     832:	f8 01       	movw	r30, r16
     834:	85 81       	ldd	r24, Z+5	; 0x05
     836:	82 30       	cpi	r24, 0x02	; 2
     838:	09 f4       	brne	.+2      	; 0x83c <UART_Init+0x12c>
     83a:	45 c0       	rjmp	.+138    	; 0x8c6 <UART_Init+0x1b6>
     83c:	28 f4       	brcc	.+10     	; 0x848 <UART_Init+0x138>
     83e:	88 23       	and	r24, r24
     840:	51 f0       	breq	.+20     	; 0x856 <UART_Init+0x146>
     842:	81 30       	cpi	r24, 0x01	; 1
     844:	21 f1       	breq	.+72     	; 0x88e <UART_Init+0x17e>
     846:	92 c0       	rjmp	.+292    	; 0x96c <UART_Init+0x25c>
     848:	83 30       	cpi	r24, 0x03	; 3
     84a:	09 f4       	brne	.+2      	; 0x84e <UART_Init+0x13e>
     84c:	58 c0       	rjmp	.+176    	; 0x8fe <UART_Init+0x1ee>
     84e:	84 30       	cpi	r24, 0x04	; 4
     850:	09 f4       	brne	.+2      	; 0x854 <UART_Init+0x144>
     852:	71 c0       	rjmp	.+226    	; 0x936 <UART_Init+0x226>
     854:	8b c0       	rjmp	.+278    	; 0x96c <UART_Init+0x25c>
     856:	fe 01       	movw	r30, r28
     858:	ee 0f       	add	r30, r30
     85a:	ff 1f       	adc	r31, r31
     85c:	ec 0f       	add	r30, r28
     85e:	fd 1f       	adc	r31, r29
     860:	ee 0f       	add	r30, r30
     862:	ff 1f       	adc	r31, r31
     864:	ee 0f       	add	r30, r30
     866:	ff 1f       	adc	r31, r31
     868:	e1 5d       	subi	r30, 0xD1	; 209
     86a:	fe 4f       	sbci	r31, 0xFE	; 254
     86c:	a4 81       	ldd	r26, Z+4	; 0x04
     86e:	b5 81       	ldd	r27, Z+5	; 0x05
     870:	8c 91       	ld	r24, X
     872:	8b 7f       	andi	r24, 0xFB	; 251
     874:	8c 93       	st	X, r24
     876:	a6 81       	ldd	r26, Z+6	; 0x06
     878:	b7 81       	ldd	r27, Z+7	; 0x07
     87a:	8c 91       	ld	r24, X
     87c:	84 60       	ori	r24, 0x04	; 4
     87e:	8c 93       	st	X, r24
     880:	06 80       	ldd	r0, Z+6	; 0x06
     882:	f7 81       	ldd	r31, Z+7	; 0x07
     884:	e0 2d       	mov	r30, r0
     886:	80 81       	ld	r24, Z
     888:	82 60       	ori	r24, 0x02	; 2
     88a:	80 83       	st	Z, r24
     88c:	6f c0       	rjmp	.+222    	; 0x96c <UART_Init+0x25c>
     88e:	fe 01       	movw	r30, r28
     890:	ee 0f       	add	r30, r30
     892:	ff 1f       	adc	r31, r31
     894:	ec 0f       	add	r30, r28
     896:	fd 1f       	adc	r31, r29
     898:	ee 0f       	add	r30, r30
     89a:	ff 1f       	adc	r31, r31
     89c:	ee 0f       	add	r30, r30
     89e:	ff 1f       	adc	r31, r31
     8a0:	e1 5d       	subi	r30, 0xD1	; 209
     8a2:	fe 4f       	sbci	r31, 0xFE	; 254
     8a4:	a4 81       	ldd	r26, Z+4	; 0x04
     8a6:	b5 81       	ldd	r27, Z+5	; 0x05
     8a8:	8c 91       	ld	r24, X
     8aa:	8b 7f       	andi	r24, 0xFB	; 251
     8ac:	8c 93       	st	X, r24
     8ae:	a6 81       	ldd	r26, Z+6	; 0x06
     8b0:	b7 81       	ldd	r27, Z+7	; 0x07
     8b2:	8c 91       	ld	r24, X
     8b4:	8b 7f       	andi	r24, 0xFB	; 251
     8b6:	8c 93       	st	X, r24
     8b8:	06 80       	ldd	r0, Z+6	; 0x06
     8ba:	f7 81       	ldd	r31, Z+7	; 0x07
     8bc:	e0 2d       	mov	r30, r0
     8be:	80 81       	ld	r24, Z
     8c0:	8d 7f       	andi	r24, 0xFD	; 253
     8c2:	80 83       	st	Z, r24
     8c4:	53 c0       	rjmp	.+166    	; 0x96c <UART_Init+0x25c>
     8c6:	fe 01       	movw	r30, r28
     8c8:	ee 0f       	add	r30, r30
     8ca:	ff 1f       	adc	r31, r31
     8cc:	ec 0f       	add	r30, r28
     8ce:	fd 1f       	adc	r31, r29
     8d0:	ee 0f       	add	r30, r30
     8d2:	ff 1f       	adc	r31, r31
     8d4:	ee 0f       	add	r30, r30
     8d6:	ff 1f       	adc	r31, r31
     8d8:	e1 5d       	subi	r30, 0xD1	; 209
     8da:	fe 4f       	sbci	r31, 0xFE	; 254
     8dc:	a4 81       	ldd	r26, Z+4	; 0x04
     8de:	b5 81       	ldd	r27, Z+5	; 0x05
     8e0:	8c 91       	ld	r24, X
     8e2:	8b 7f       	andi	r24, 0xFB	; 251
     8e4:	8c 93       	st	X, r24
     8e6:	a6 81       	ldd	r26, Z+6	; 0x06
     8e8:	b7 81       	ldd	r27, Z+7	; 0x07
     8ea:	8c 91       	ld	r24, X
     8ec:	8b 7f       	andi	r24, 0xFB	; 251
     8ee:	8c 93       	st	X, r24
     8f0:	06 80       	ldd	r0, Z+6	; 0x06
     8f2:	f7 81       	ldd	r31, Z+7	; 0x07
     8f4:	e0 2d       	mov	r30, r0
     8f6:	80 81       	ld	r24, Z
     8f8:	82 60       	ori	r24, 0x02	; 2
     8fa:	80 83       	st	Z, r24
     8fc:	37 c0       	rjmp	.+110    	; 0x96c <UART_Init+0x25c>
     8fe:	fe 01       	movw	r30, r28
     900:	ee 0f       	add	r30, r30
     902:	ff 1f       	adc	r31, r31
     904:	ec 0f       	add	r30, r28
     906:	fd 1f       	adc	r31, r29
     908:	ee 0f       	add	r30, r30
     90a:	ff 1f       	adc	r31, r31
     90c:	ee 0f       	add	r30, r30
     90e:	ff 1f       	adc	r31, r31
     910:	e1 5d       	subi	r30, 0xD1	; 209
     912:	fe 4f       	sbci	r31, 0xFE	; 254
     914:	a4 81       	ldd	r26, Z+4	; 0x04
     916:	b5 81       	ldd	r27, Z+5	; 0x05
     918:	8c 91       	ld	r24, X
     91a:	8b 7f       	andi	r24, 0xFB	; 251
     91c:	8c 93       	st	X, r24
     91e:	a6 81       	ldd	r26, Z+6	; 0x06
     920:	b7 81       	ldd	r27, Z+7	; 0x07
     922:	8c 91       	ld	r24, X
     924:	84 60       	ori	r24, 0x04	; 4
     926:	8c 93       	st	X, r24
     928:	06 80       	ldd	r0, Z+6	; 0x06
     92a:	f7 81       	ldd	r31, Z+7	; 0x07
     92c:	e0 2d       	mov	r30, r0
     92e:	80 81       	ld	r24, Z
     930:	8d 7f       	andi	r24, 0xFD	; 253
     932:	80 83       	st	Z, r24
     934:	1b c0       	rjmp	.+54     	; 0x96c <UART_Init+0x25c>
     936:	fe 01       	movw	r30, r28
     938:	ee 0f       	add	r30, r30
     93a:	ff 1f       	adc	r31, r31
     93c:	ec 0f       	add	r30, r28
     93e:	fd 1f       	adc	r31, r29
     940:	ee 0f       	add	r30, r30
     942:	ff 1f       	adc	r31, r31
     944:	ee 0f       	add	r30, r30
     946:	ff 1f       	adc	r31, r31
     948:	e1 5d       	subi	r30, 0xD1	; 209
     94a:	fe 4f       	sbci	r31, 0xFE	; 254
     94c:	a4 81       	ldd	r26, Z+4	; 0x04
     94e:	b5 81       	ldd	r27, Z+5	; 0x05
     950:	8c 91       	ld	r24, X
     952:	84 60       	ori	r24, 0x04	; 4
     954:	8c 93       	st	X, r24
     956:	a6 81       	ldd	r26, Z+6	; 0x06
     958:	b7 81       	ldd	r27, Z+7	; 0x07
     95a:	8c 91       	ld	r24, X
     95c:	84 60       	ori	r24, 0x04	; 4
     95e:	8c 93       	st	X, r24
     960:	06 80       	ldd	r0, Z+6	; 0x06
     962:	f7 81       	ldd	r31, Z+7	; 0x07
     964:	e0 2d       	mov	r30, r0
     966:	80 81       	ld	r24, Z
     968:	82 60       	ori	r24, 0x02	; 2
     96a:	80 83       	st	Z, r24
     96c:	f8 01       	movw	r30, r16
     96e:	86 81       	ldd	r24, Z+6	; 0x06
     970:	88 23       	and	r24, r24
     972:	19 f0       	breq	.+6      	; 0x97a <UART_Init+0x26a>
     974:	81 30       	cpi	r24, 0x01	; 1
     976:	99 f0       	breq	.+38     	; 0x99e <UART_Init+0x28e>
     978:	23 c0       	rjmp	.+70     	; 0x9c0 <UART_Init+0x2b0>
     97a:	fe 01       	movw	r30, r28
     97c:	ee 0f       	add	r30, r30
     97e:	ff 1f       	adc	r31, r31
     980:	ec 0f       	add	r30, r28
     982:	fd 1f       	adc	r31, r29
     984:	ee 0f       	add	r30, r30
     986:	ff 1f       	adc	r31, r31
     988:	ee 0f       	add	r30, r30
     98a:	ff 1f       	adc	r31, r31
     98c:	e1 5d       	subi	r30, 0xD1	; 209
     98e:	fe 4f       	sbci	r31, 0xFE	; 254
     990:	06 80       	ldd	r0, Z+6	; 0x06
     992:	f7 81       	ldd	r31, Z+7	; 0x07
     994:	e0 2d       	mov	r30, r0
     996:	80 81       	ld	r24, Z
     998:	8f 7e       	andi	r24, 0xEF	; 239
     99a:	80 83       	st	Z, r24
     99c:	11 c0       	rjmp	.+34     	; 0x9c0 <UART_Init+0x2b0>
     99e:	fe 01       	movw	r30, r28
     9a0:	ee 0f       	add	r30, r30
     9a2:	ff 1f       	adc	r31, r31
     9a4:	ec 0f       	add	r30, r28
     9a6:	fd 1f       	adc	r31, r29
     9a8:	ee 0f       	add	r30, r30
     9aa:	ff 1f       	adc	r31, r31
     9ac:	ee 0f       	add	r30, r30
     9ae:	ff 1f       	adc	r31, r31
     9b0:	e1 5d       	subi	r30, 0xD1	; 209
     9b2:	fe 4f       	sbci	r31, 0xFE	; 254
     9b4:	06 80       	ldd	r0, Z+6	; 0x06
     9b6:	f7 81       	ldd	r31, Z+7	; 0x07
     9b8:	e0 2d       	mov	r30, r0
     9ba:	80 81       	ld	r24, Z
     9bc:	80 61       	ori	r24, 0x10	; 16
     9be:	80 83       	st	Z, r24
     9c0:	f8 01       	movw	r30, r16
     9c2:	87 81       	ldd	r24, Z+7	; 0x07
     9c4:	81 30       	cpi	r24, 0x01	; 1
     9c6:	d9 f0       	breq	.+54     	; 0x9fe <UART_Init+0x2ee>
     9c8:	18 f0       	brcs	.+6      	; 0x9d0 <UART_Init+0x2c0>
     9ca:	82 30       	cpi	r24, 0x02	; 2
     9cc:	79 f1       	breq	.+94     	; 0xa2c <UART_Init+0x31c>
     9ce:	44 c0       	rjmp	.+136    	; 0xa58 <UART_Init+0x348>
     9d0:	fe 01       	movw	r30, r28
     9d2:	ee 0f       	add	r30, r30
     9d4:	ff 1f       	adc	r31, r31
     9d6:	ec 0f       	add	r30, r28
     9d8:	fd 1f       	adc	r31, r29
     9da:	ee 0f       	add	r30, r30
     9dc:	ff 1f       	adc	r31, r31
     9de:	ee 0f       	add	r30, r30
     9e0:	ff 1f       	adc	r31, r31
     9e2:	e1 5d       	subi	r30, 0xD1	; 209
     9e4:	fe 4f       	sbci	r31, 0xFE	; 254
     9e6:	a6 81       	ldd	r26, Z+6	; 0x06
     9e8:	b7 81       	ldd	r27, Z+7	; 0x07
     9ea:	8c 91       	ld	r24, X
     9ec:	8f 7b       	andi	r24, 0xBF	; 191
     9ee:	8c 93       	st	X, r24
     9f0:	06 80       	ldd	r0, Z+6	; 0x06
     9f2:	f7 81       	ldd	r31, Z+7	; 0x07
     9f4:	e0 2d       	mov	r30, r0
     9f6:	80 81       	ld	r24, Z
     9f8:	8f 7d       	andi	r24, 0xDF	; 223
     9fa:	80 83       	st	Z, r24
     9fc:	2d c0       	rjmp	.+90     	; 0xa58 <UART_Init+0x348>
     9fe:	fe 01       	movw	r30, r28
     a00:	ee 0f       	add	r30, r30
     a02:	ff 1f       	adc	r31, r31
     a04:	ec 0f       	add	r30, r28
     a06:	fd 1f       	adc	r31, r29
     a08:	ee 0f       	add	r30, r30
     a0a:	ff 1f       	adc	r31, r31
     a0c:	ee 0f       	add	r30, r30
     a0e:	ff 1f       	adc	r31, r31
     a10:	e1 5d       	subi	r30, 0xD1	; 209
     a12:	fe 4f       	sbci	r31, 0xFE	; 254
     a14:	a6 81       	ldd	r26, Z+6	; 0x06
     a16:	b7 81       	ldd	r27, Z+7	; 0x07
     a18:	8c 91       	ld	r24, X
     a1a:	80 64       	ori	r24, 0x40	; 64
     a1c:	8c 93       	st	X, r24
     a1e:	06 80       	ldd	r0, Z+6	; 0x06
     a20:	f7 81       	ldd	r31, Z+7	; 0x07
     a22:	e0 2d       	mov	r30, r0
     a24:	80 81       	ld	r24, Z
     a26:	8f 7d       	andi	r24, 0xDF	; 223
     a28:	80 83       	st	Z, r24
     a2a:	16 c0       	rjmp	.+44     	; 0xa58 <UART_Init+0x348>
     a2c:	fe 01       	movw	r30, r28
     a2e:	ee 0f       	add	r30, r30
     a30:	ff 1f       	adc	r31, r31
     a32:	ec 0f       	add	r30, r28
     a34:	fd 1f       	adc	r31, r29
     a36:	ee 0f       	add	r30, r30
     a38:	ff 1f       	adc	r31, r31
     a3a:	ee 0f       	add	r30, r30
     a3c:	ff 1f       	adc	r31, r31
     a3e:	e1 5d       	subi	r30, 0xD1	; 209
     a40:	fe 4f       	sbci	r31, 0xFE	; 254
     a42:	a6 81       	ldd	r26, Z+6	; 0x06
     a44:	b7 81       	ldd	r27, Z+7	; 0x07
     a46:	8c 91       	ld	r24, X
     a48:	80 64       	ori	r24, 0x40	; 64
     a4a:	8c 93       	st	X, r24
     a4c:	06 80       	ldd	r0, Z+6	; 0x06
     a4e:	f7 81       	ldd	r31, Z+7	; 0x07
     a50:	e0 2d       	mov	r30, r0
     a52:	80 81       	ld	r24, Z
     a54:	80 62       	ori	r24, 0x20	; 32
     a56:	80 83       	st	Z, r24
     a58:	f8 01       	movw	r30, r16
     a5a:	80 85       	ldd	r24, Z+8	; 0x08
     a5c:	81 30       	cpi	r24, 0x01	; 1
     a5e:	b1 f0       	breq	.+44     	; 0xa8c <UART_Init+0x37c>
     a60:	18 f0       	brcs	.+6      	; 0xa68 <UART_Init+0x358>
     a62:	82 30       	cpi	r24, 0x02	; 2
     a64:	29 f1       	breq	.+74     	; 0xab0 <UART_Init+0x3a0>
     a66:	47 c0       	rjmp	.+142    	; 0xaf6 <UART_Init+0x3e6>
     a68:	ce 01       	movw	r24, r28
     a6a:	88 0f       	add	r24, r24
     a6c:	99 1f       	adc	r25, r25
     a6e:	c8 0f       	add	r28, r24
     a70:	d9 1f       	adc	r29, r25
     a72:	cc 0f       	add	r28, r28
     a74:	dd 1f       	adc	r29, r29
     a76:	cc 0f       	add	r28, r28
     a78:	dd 1f       	adc	r29, r29
     a7a:	c1 5d       	subi	r28, 0xD1	; 209
     a7c:	de 4f       	sbci	r29, 0xFE	; 254
     a7e:	ec 81       	ldd	r30, Y+4	; 0x04
     a80:	fd 81       	ldd	r31, Y+5	; 0x05
     a82:	80 81       	ld	r24, Z
     a84:	80 61       	ori	r24, 0x10	; 16
     a86:	80 83       	st	Z, r24
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	36 c0       	rjmp	.+108    	; 0xaf8 <UART_Init+0x3e8>
     a8c:	ce 01       	movw	r24, r28
     a8e:	88 0f       	add	r24, r24
     a90:	99 1f       	adc	r25, r25
     a92:	c8 0f       	add	r28, r24
     a94:	d9 1f       	adc	r29, r25
     a96:	cc 0f       	add	r28, r28
     a98:	dd 1f       	adc	r29, r29
     a9a:	cc 0f       	add	r28, r28
     a9c:	dd 1f       	adc	r29, r29
     a9e:	c1 5d       	subi	r28, 0xD1	; 209
     aa0:	de 4f       	sbci	r29, 0xFE	; 254
     aa2:	ec 81       	ldd	r30, Y+4	; 0x04
     aa4:	fd 81       	ldd	r31, Y+5	; 0x05
     aa6:	80 81       	ld	r24, Z
     aa8:	88 60       	ori	r24, 0x08	; 8
     aaa:	80 83       	st	Z, r24
     aac:	80 e0       	ldi	r24, 0x00	; 0
     aae:	24 c0       	rjmp	.+72     	; 0xaf8 <UART_Init+0x3e8>
     ab0:	9e 01       	movw	r18, r28
     ab2:	22 0f       	add	r18, r18
     ab4:	33 1f       	adc	r19, r19
     ab6:	f9 01       	movw	r30, r18
     ab8:	ec 0f       	add	r30, r28
     aba:	fd 1f       	adc	r31, r29
     abc:	ee 0f       	add	r30, r30
     abe:	ff 1f       	adc	r31, r31
     ac0:	ee 0f       	add	r30, r30
     ac2:	ff 1f       	adc	r31, r31
     ac4:	e1 5d       	subi	r30, 0xD1	; 209
     ac6:	fe 4f       	sbci	r31, 0xFE	; 254
     ac8:	04 80       	ldd	r0, Z+4	; 0x04
     aca:	f5 81       	ldd	r31, Z+5	; 0x05
     acc:	e0 2d       	mov	r30, r0
     ace:	80 81       	ld	r24, Z
     ad0:	88 60       	ori	r24, 0x08	; 8
     ad2:	80 83       	st	Z, r24
     ad4:	c2 0f       	add	r28, r18
     ad6:	d3 1f       	adc	r29, r19
     ad8:	cc 0f       	add	r28, r28
     ada:	dd 1f       	adc	r29, r29
     adc:	cc 0f       	add	r28, r28
     ade:	dd 1f       	adc	r29, r29
     ae0:	c1 5d       	subi	r28, 0xD1	; 209
     ae2:	de 4f       	sbci	r29, 0xFE	; 254
     ae4:	ec 81       	ldd	r30, Y+4	; 0x04
     ae6:	fd 81       	ldd	r31, Y+5	; 0x05
     ae8:	80 81       	ld	r24, Z
     aea:	80 61       	ori	r24, 0x10	; 16
     aec:	80 83       	st	Z, r24
     aee:	80 e0       	ldi	r24, 0x00	; 0
     af0:	03 c0       	rjmp	.+6      	; 0xaf8 <UART_Init+0x3e8>
     af2:	81 e0       	ldi	r24, 0x01	; 1
     af4:	01 c0       	rjmp	.+2      	; 0xaf8 <UART_Init+0x3e8>
     af6:	80 e0       	ldi	r24, 0x00	; 0
     af8:	df 91       	pop	r29
     afa:	cf 91       	pop	r28
     afc:	1f 91       	pop	r17
     afe:	0f 91       	pop	r16
     b00:	ff 90       	pop	r15
     b02:	ef 90       	pop	r14
     b04:	df 90       	pop	r13
     b06:	cf 90       	pop	r12
     b08:	08 95       	ret

00000b0a <UART_Transmit>:
     b0a:	af 92       	push	r10
     b0c:	bf 92       	push	r11
     b0e:	cf 92       	push	r12
     b10:	df 92       	push	r13
     b12:	ef 92       	push	r14
     b14:	ff 92       	push	r15
     b16:	0f 93       	push	r16
     b18:	1f 93       	push	r17
     b1a:	cf 93       	push	r28
     b1c:	df 93       	push	r29
     b1e:	8c 01       	movw	r16, r24
     b20:	ec 01       	movw	r28, r24
     b22:	88 81       	ld	r24, Y
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	1e 8a       	std	Y+22, r1	; 0x16
     b28:	5f 87       	std	Y+15, r21	; 0x0f
     b2a:	4e 87       	std	Y+14, r20	; 0x0e
     b2c:	5b 8b       	std	Y+19, r21	; 0x13
     b2e:	4a 8b       	std	Y+18, r20	; 0x12
     b30:	2d 81       	ldd	r18, Y+5	; 0x05
     b32:	24 30       	cpi	r18, 0x04	; 4
     b34:	41 f4       	brne	.+16     	; 0xb46 <UART_Transmit+0x3c>
     b36:	2f 81       	ldd	r18, Y+7	; 0x07
     b38:	21 11       	cpse	r18, r1
     b3a:	08 c0       	rjmp	.+16     	; 0xb4c <UART_Transmit+0x42>
     b3c:	e6 2e       	mov	r14, r22
     b3e:	f7 2e       	mov	r15, r23
     b40:	60 e0       	ldi	r22, 0x00	; 0
     b42:	70 e0       	ldi	r23, 0x00	; 0
     b44:	05 c0       	rjmp	.+10     	; 0xb50 <UART_Transmit+0x46>
     b46:	e1 2c       	mov	r14, r1
     b48:	f1 2c       	mov	r15, r1
     b4a:	02 c0       	rjmp	.+4      	; 0xb50 <UART_Transmit+0x46>
     b4c:	e1 2c       	mov	r14, r1
     b4e:	f1 2c       	mov	r15, r1
     b50:	45 2b       	or	r20, r21
     b52:	a9 f1       	breq	.+106    	; 0xbbe <UART_Transmit+0xb4>
     b54:	a6 2e       	mov	r10, r22
     b56:	b7 2e       	mov	r11, r23
     b58:	d7 01       	movw	r26, r14
     b5a:	20 e0       	ldi	r18, 0x00	; 0
     b5c:	30 e0       	ldi	r19, 0x00	; 0
     b5e:	bc 01       	movw	r22, r24
     b60:	66 0f       	add	r22, r22
     b62:	77 1f       	adc	r23, r23
     b64:	68 0f       	add	r22, r24
     b66:	79 1f       	adc	r23, r25
     b68:	66 0f       	add	r22, r22
     b6a:	77 1f       	adc	r23, r23
     b6c:	66 0f       	add	r22, r22
     b6e:	77 1f       	adc	r23, r23
     b70:	61 5d       	subi	r22, 0xD1	; 209
     b72:	7e 4f       	sbci	r23, 0xFE	; 254
     b74:	6b 01       	movw	r12, r22
     b76:	d2 e0       	ldi	r29, 0x02	; 2
     b78:	cd 0e       	add	r12, r29
     b7a:	d1 1c       	adc	r13, r1
     b7c:	e6 01       	movw	r28, r12
     b7e:	e8 81       	ld	r30, Y
     b80:	f9 81       	ldd	r31, Y+1	; 0x01
     b82:	90 81       	ld	r25, Z
     b84:	95 ff       	sbrs	r25, 5
     b86:	fd cf       	rjmp	.-6      	; 0xb82 <UART_Transmit+0x78>
     b88:	e1 14       	cp	r14, r1
     b8a:	f1 04       	cpc	r15, r1
     b8c:	39 f4       	brne	.+14     	; 0xb9c <UART_Transmit+0x92>
     b8e:	eb 01       	movw	r28, r22
     b90:	e8 81       	ld	r30, Y
     b92:	f9 81       	ldd	r31, Y+1	; 0x01
     b94:	e5 01       	movw	r28, r10
     b96:	88 81       	ld	r24, Y
     b98:	80 83       	st	Z, r24
     b9a:	05 c0       	rjmp	.+10     	; 0xba6 <UART_Transmit+0x9c>
     b9c:	eb 01       	movw	r28, r22
     b9e:	e8 81       	ld	r30, Y
     ba0:	f9 81       	ldd	r31, Y+1	; 0x01
     ba2:	8c 91       	ld	r24, X
     ba4:	80 83       	st	Z, r24
     ba6:	2f 5f       	subi	r18, 0xFF	; 255
     ba8:	3f 4f       	sbci	r19, 0xFF	; 255
     baa:	df ef       	ldi	r29, 0xFF	; 255
     bac:	ad 1a       	sub	r10, r29
     bae:	bd 0a       	sbc	r11, r29
     bb0:	12 96       	adiw	r26, 0x02	; 2
     bb2:	f8 01       	movw	r30, r16
     bb4:	42 89       	ldd	r20, Z+18	; 0x12
     bb6:	53 89       	ldd	r21, Z+19	; 0x13
     bb8:	24 17       	cp	r18, r20
     bba:	35 07       	cpc	r19, r21
     bbc:	f8 f2       	brcs	.-66     	; 0xb7c <UART_Transmit+0x72>
     bbe:	80 e0       	ldi	r24, 0x00	; 0
     bc0:	df 91       	pop	r29
     bc2:	cf 91       	pop	r28
     bc4:	1f 91       	pop	r17
     bc6:	0f 91       	pop	r16
     bc8:	ff 90       	pop	r15
     bca:	ef 90       	pop	r14
     bcc:	df 90       	pop	r13
     bce:	cf 90       	pop	r12
     bd0:	bf 90       	pop	r11
     bd2:	af 90       	pop	r10
     bd4:	08 95       	ret

00000bd6 <UART_Receive>:
     bd6:	af 92       	push	r10
     bd8:	bf 92       	push	r11
     bda:	cf 92       	push	r12
     bdc:	df 92       	push	r13
     bde:	ef 92       	push	r14
     be0:	ff 92       	push	r15
     be2:	0f 93       	push	r16
     be4:	1f 93       	push	r17
     be6:	cf 93       	push	r28
     be8:	df 93       	push	r29
     bea:	8c 01       	movw	r16, r24
     bec:	ec 01       	movw	r28, r24
     bee:	88 81       	ld	r24, Y
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	1e 8a       	std	Y+22, r1	; 0x16
     bf4:	59 8b       	std	Y+17, r21	; 0x11
     bf6:	48 8b       	std	Y+16, r20	; 0x10
     bf8:	5d 8b       	std	Y+21, r21	; 0x15
     bfa:	4c 8b       	std	Y+20, r20	; 0x14
     bfc:	2d 81       	ldd	r18, Y+5	; 0x05
     bfe:	24 30       	cpi	r18, 0x04	; 4
     c00:	41 f4       	brne	.+16     	; 0xc12 <UART_Receive+0x3c>
     c02:	2f 81       	ldd	r18, Y+7	; 0x07
     c04:	21 11       	cpse	r18, r1
     c06:	08 c0       	rjmp	.+16     	; 0xc18 <UART_Receive+0x42>
     c08:	e6 2e       	mov	r14, r22
     c0a:	f7 2e       	mov	r15, r23
     c0c:	60 e0       	ldi	r22, 0x00	; 0
     c0e:	70 e0       	ldi	r23, 0x00	; 0
     c10:	05 c0       	rjmp	.+10     	; 0xc1c <UART_Receive+0x46>
     c12:	e1 2c       	mov	r14, r1
     c14:	f1 2c       	mov	r15, r1
     c16:	02 c0       	rjmp	.+4      	; 0xc1c <UART_Receive+0x46>
     c18:	e1 2c       	mov	r14, r1
     c1a:	f1 2c       	mov	r15, r1
     c1c:	f8 01       	movw	r30, r16
     c1e:	22 89       	ldd	r18, Z+18	; 0x12
     c20:	33 89       	ldd	r19, Z+19	; 0x13
     c22:	23 2b       	or	r18, r19
     c24:	d9 f1       	breq	.+118    	; 0xc9c <UART_Receive+0xc6>
     c26:	a6 2e       	mov	r10, r22
     c28:	b7 2e       	mov	r11, r23
     c2a:	d7 01       	movw	r26, r14
     c2c:	40 e0       	ldi	r20, 0x00	; 0
     c2e:	50 e0       	ldi	r21, 0x00	; 0
     c30:	bc 01       	movw	r22, r24
     c32:	66 0f       	add	r22, r22
     c34:	77 1f       	adc	r23, r23
     c36:	68 0f       	add	r22, r24
     c38:	79 1f       	adc	r23, r25
     c3a:	66 0f       	add	r22, r22
     c3c:	77 1f       	adc	r23, r23
     c3e:	66 0f       	add	r22, r22
     c40:	77 1f       	adc	r23, r23
     c42:	61 5d       	subi	r22, 0xD1	; 209
     c44:	7e 4f       	sbci	r23, 0xFE	; 254
     c46:	6b 01       	movw	r12, r22
     c48:	f2 e0       	ldi	r31, 0x02	; 2
     c4a:	cf 0e       	add	r12, r31
     c4c:	d1 1c       	adc	r13, r1
     c4e:	e6 01       	movw	r28, r12
     c50:	e8 81       	ld	r30, Y
     c52:	f9 81       	ldd	r31, Y+1	; 0x01
     c54:	90 81       	ld	r25, Z
     c56:	99 23       	and	r25, r25
     c58:	1c f0       	brlt	.+6      	; 0xc60 <UART_Receive+0x8a>
     c5a:	90 81       	ld	r25, Z
     c5c:	95 ff       	sbrs	r25, 5
     c5e:	fa cf       	rjmp	.-12     	; 0xc54 <UART_Receive+0x7e>
     c60:	e1 14       	cp	r14, r1
     c62:	f1 04       	cpc	r15, r1
     c64:	39 f4       	brne	.+14     	; 0xc74 <UART_Receive+0x9e>
     c66:	eb 01       	movw	r28, r22
     c68:	e8 81       	ld	r30, Y
     c6a:	f9 81       	ldd	r31, Y+1	; 0x01
     c6c:	80 81       	ld	r24, Z
     c6e:	f5 01       	movw	r30, r10
     c70:	80 83       	st	Z, r24
     c72:	08 c0       	rjmp	.+16     	; 0xc84 <UART_Receive+0xae>
     c74:	eb 01       	movw	r28, r22
     c76:	e8 81       	ld	r30, Y
     c78:	f9 81       	ldd	r31, Y+1	; 0x01
     c7a:	20 81       	ld	r18, Z
     c7c:	30 e0       	ldi	r19, 0x00	; 0
     c7e:	11 96       	adiw	r26, 0x01	; 1
     c80:	3c 93       	st	X, r19
     c82:	2e 93       	st	-X, r18
     c84:	4f 5f       	subi	r20, 0xFF	; 255
     c86:	5f 4f       	sbci	r21, 0xFF	; 255
     c88:	df ef       	ldi	r29, 0xFF	; 255
     c8a:	ad 1a       	sub	r10, r29
     c8c:	bd 0a       	sbc	r11, r29
     c8e:	12 96       	adiw	r26, 0x02	; 2
     c90:	f8 01       	movw	r30, r16
     c92:	82 89       	ldd	r24, Z+18	; 0x12
     c94:	93 89       	ldd	r25, Z+19	; 0x13
     c96:	48 17       	cp	r20, r24
     c98:	59 07       	cpc	r21, r25
     c9a:	c8 f2       	brcs	.-78     	; 0xc4e <UART_Receive+0x78>
     c9c:	80 e0       	ldi	r24, 0x00	; 0
     c9e:	df 91       	pop	r29
     ca0:	cf 91       	pop	r28
     ca2:	1f 91       	pop	r17
     ca4:	0f 91       	pop	r16
     ca6:	ff 90       	pop	r15
     ca8:	ef 90       	pop	r14
     caa:	df 90       	pop	r13
     cac:	cf 90       	pop	r12
     cae:	bf 90       	pop	r11
     cb0:	af 90       	pop	r10
     cb2:	08 95       	ret

00000cb4 <UART_Receive_IT>:
     cb4:	fc 01       	movw	r30, r24
     cb6:	20 81       	ld	r18, Z
     cb8:	30 e0       	ldi	r19, 0x00	; 0
     cba:	75 87       	std	Z+13, r23	; 0x0d
     cbc:	64 87       	std	Z+12, r22	; 0x0c
     cbe:	51 8b       	std	Z+17, r21	; 0x11
     cc0:	40 8b       	std	Z+16, r20	; 0x10
     cc2:	55 8b       	std	Z+21, r21	; 0x15
     cc4:	44 8b       	std	Z+20, r20	; 0x14
     cc6:	f9 01       	movw	r30, r18
     cc8:	ee 0f       	add	r30, r30
     cca:	ff 1f       	adc	r31, r31
     ccc:	e2 0f       	add	r30, r18
     cce:	f3 1f       	adc	r31, r19
     cd0:	ee 0f       	add	r30, r30
     cd2:	ff 1f       	adc	r31, r31
     cd4:	ee 0f       	add	r30, r30
     cd6:	ff 1f       	adc	r31, r31
     cd8:	e1 5d       	subi	r30, 0xD1	; 209
     cda:	fe 4f       	sbci	r31, 0xFE	; 254
     cdc:	04 80       	ldd	r0, Z+4	; 0x04
     cde:	f5 81       	ldd	r31, Z+5	; 0x05
     ce0:	e0 2d       	mov	r30, r0
     ce2:	80 81       	ld	r24, Z
     ce4:	80 68       	ori	r24, 0x80	; 128
     ce6:	80 83       	st	Z, r24
     ce8:	80 e0       	ldi	r24, 0x00	; 0
     cea:	08 95       	ret

00000cec <UART_TxIRQHandler>:
     cec:	8f cc       	rjmp	.-1762   	; 0x60c <UART_TxCpltCallback>
     cee:	08 95       	ret

00000cf0 <UART_RxIRQHandler>:
{
	UART_TxCpltCallback(huart);
}

void UART_RxIRQHandler(UART_HandleTypeDef *huart)
{
     cf0:	0f 93       	push	r16
     cf2:	1f 93       	push	r17
     cf4:	cf 93       	push	r28
     cf6:	df 93       	push	r29
     cf8:	ec 01       	movw	r28, r24
	UART_Receive(huart, huart->pRxBuffPtr, huart->RxXferSize, 100);
     cfa:	48 89       	ldd	r20, Y+16	; 0x10
     cfc:	59 89       	ldd	r21, Y+17	; 0x11
     cfe:	6c 85       	ldd	r22, Y+12	; 0x0c
     d00:	7d 85       	ldd	r23, Y+13	; 0x0d
     d02:	04 e6       	ldi	r16, 0x64	; 100
     d04:	10 e0       	ldi	r17, 0x00	; 0
     d06:	20 e0       	ldi	r18, 0x00	; 0
     d08:	30 e0       	ldi	r19, 0x00	; 0
     d0a:	65 df       	rcall	.-310    	; 0xbd6 <UART_Receive>
	UART_RxCpltCallback(huart);
     d0c:	ce 01       	movw	r24, r28
     d0e:	7f dc       	rcall	.-1794   	; 0x60e <UART_RxCpltCallback>
}
     d10:	df 91       	pop	r29
     d12:	cf 91       	pop	r28
     d14:	1f 91       	pop	r17
     d16:	0f 91       	pop	r16
     d18:	08 95       	ret

00000d1a <main>:
#include "main.h"


int main(void)
{
    hwInit();
     d1a:	87 dc       	rcall	.-1778   	; 0x62a <hwInit>
	apInit();
     d1c:	d6 d9       	rcall	.-3156   	; 0xca <apInit>
	
	apMain();
     d1e:	dd d9       	rcall	.-3142   	; 0xda <apMain>
     d20:	80 e0       	ldi	r24, 0x00	; 0
}
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	08 95       	ret

00000d26 <__subsf3>:
     d26:	50 58       	subi	r21, 0x80	; 128

00000d28 <__addsf3>:
     d28:	bb 27       	eor	r27, r27
     d2a:	aa 27       	eor	r26, r26
     d2c:	0e d0       	rcall	.+28     	; 0xd4a <__addsf3x>
     d2e:	48 c1       	rjmp	.+656    	; 0xfc0 <__fp_round>
     d30:	39 d1       	rcall	.+626    	; 0xfa4 <__fp_pscA>
     d32:	30 f0       	brcs	.+12     	; 0xd40 <__addsf3+0x18>
     d34:	3e d1       	rcall	.+636    	; 0xfb2 <__fp_pscB>
     d36:	20 f0       	brcs	.+8      	; 0xd40 <__addsf3+0x18>
     d38:	31 f4       	brne	.+12     	; 0xd46 <__addsf3+0x1e>
     d3a:	9f 3f       	cpi	r25, 0xFF	; 255
     d3c:	11 f4       	brne	.+4      	; 0xd42 <__addsf3+0x1a>
     d3e:	1e f4       	brtc	.+6      	; 0xd46 <__addsf3+0x1e>
     d40:	2e c1       	rjmp	.+604    	; 0xf9e <__fp_nan>
     d42:	0e f4       	brtc	.+2      	; 0xd46 <__addsf3+0x1e>
     d44:	e0 95       	com	r30
     d46:	e7 fb       	bst	r30, 7
     d48:	24 c1       	rjmp	.+584    	; 0xf92 <__fp_inf>

00000d4a <__addsf3x>:
     d4a:	e9 2f       	mov	r30, r25
     d4c:	4a d1       	rcall	.+660    	; 0xfe2 <__fp_split3>
     d4e:	80 f3       	brcs	.-32     	; 0xd30 <__addsf3+0x8>
     d50:	ba 17       	cp	r27, r26
     d52:	62 07       	cpc	r22, r18
     d54:	73 07       	cpc	r23, r19
     d56:	84 07       	cpc	r24, r20
     d58:	95 07       	cpc	r25, r21
     d5a:	18 f0       	brcs	.+6      	; 0xd62 <__addsf3x+0x18>
     d5c:	71 f4       	brne	.+28     	; 0xd7a <__addsf3x+0x30>
     d5e:	9e f5       	brtc	.+102    	; 0xdc6 <__addsf3x+0x7c>
     d60:	62 c1       	rjmp	.+708    	; 0x1026 <__fp_zero>
     d62:	0e f4       	brtc	.+2      	; 0xd66 <__addsf3x+0x1c>
     d64:	e0 95       	com	r30
     d66:	0b 2e       	mov	r0, r27
     d68:	ba 2f       	mov	r27, r26
     d6a:	a0 2d       	mov	r26, r0
     d6c:	0b 01       	movw	r0, r22
     d6e:	b9 01       	movw	r22, r18
     d70:	90 01       	movw	r18, r0
     d72:	0c 01       	movw	r0, r24
     d74:	ca 01       	movw	r24, r20
     d76:	a0 01       	movw	r20, r0
     d78:	11 24       	eor	r1, r1
     d7a:	ff 27       	eor	r31, r31
     d7c:	59 1b       	sub	r21, r25
     d7e:	99 f0       	breq	.+38     	; 0xda6 <__addsf3x+0x5c>
     d80:	59 3f       	cpi	r21, 0xF9	; 249
     d82:	50 f4       	brcc	.+20     	; 0xd98 <__addsf3x+0x4e>
     d84:	50 3e       	cpi	r21, 0xE0	; 224
     d86:	68 f1       	brcs	.+90     	; 0xde2 <__addsf3x+0x98>
     d88:	1a 16       	cp	r1, r26
     d8a:	f0 40       	sbci	r31, 0x00	; 0
     d8c:	a2 2f       	mov	r26, r18
     d8e:	23 2f       	mov	r18, r19
     d90:	34 2f       	mov	r19, r20
     d92:	44 27       	eor	r20, r20
     d94:	58 5f       	subi	r21, 0xF8	; 248
     d96:	f3 cf       	rjmp	.-26     	; 0xd7e <__addsf3x+0x34>
     d98:	46 95       	lsr	r20
     d9a:	37 95       	ror	r19
     d9c:	27 95       	ror	r18
     d9e:	a7 95       	ror	r26
     da0:	f0 40       	sbci	r31, 0x00	; 0
     da2:	53 95       	inc	r21
     da4:	c9 f7       	brne	.-14     	; 0xd98 <__addsf3x+0x4e>
     da6:	7e f4       	brtc	.+30     	; 0xdc6 <__addsf3x+0x7c>
     da8:	1f 16       	cp	r1, r31
     daa:	ba 0b       	sbc	r27, r26
     dac:	62 0b       	sbc	r22, r18
     dae:	73 0b       	sbc	r23, r19
     db0:	84 0b       	sbc	r24, r20
     db2:	ba f0       	brmi	.+46     	; 0xde2 <__addsf3x+0x98>
     db4:	91 50       	subi	r25, 0x01	; 1
     db6:	a1 f0       	breq	.+40     	; 0xde0 <__addsf3x+0x96>
     db8:	ff 0f       	add	r31, r31
     dba:	bb 1f       	adc	r27, r27
     dbc:	66 1f       	adc	r22, r22
     dbe:	77 1f       	adc	r23, r23
     dc0:	88 1f       	adc	r24, r24
     dc2:	c2 f7       	brpl	.-16     	; 0xdb4 <__addsf3x+0x6a>
     dc4:	0e c0       	rjmp	.+28     	; 0xde2 <__addsf3x+0x98>
     dc6:	ba 0f       	add	r27, r26
     dc8:	62 1f       	adc	r22, r18
     dca:	73 1f       	adc	r23, r19
     dcc:	84 1f       	adc	r24, r20
     dce:	48 f4       	brcc	.+18     	; 0xde2 <__addsf3x+0x98>
     dd0:	87 95       	ror	r24
     dd2:	77 95       	ror	r23
     dd4:	67 95       	ror	r22
     dd6:	b7 95       	ror	r27
     dd8:	f7 95       	ror	r31
     dda:	9e 3f       	cpi	r25, 0xFE	; 254
     ddc:	08 f0       	brcs	.+2      	; 0xde0 <__addsf3x+0x96>
     dde:	b3 cf       	rjmp	.-154    	; 0xd46 <__addsf3+0x1e>
     de0:	93 95       	inc	r25
     de2:	88 0f       	add	r24, r24
     de4:	08 f0       	brcs	.+2      	; 0xde8 <__addsf3x+0x9e>
     de6:	99 27       	eor	r25, r25
     de8:	ee 0f       	add	r30, r30
     dea:	97 95       	ror	r25
     dec:	87 95       	ror	r24
     dee:	08 95       	ret

00000df0 <__divsf3>:
     df0:	0c d0       	rcall	.+24     	; 0xe0a <__divsf3x>
     df2:	e6 c0       	rjmp	.+460    	; 0xfc0 <__fp_round>
     df4:	de d0       	rcall	.+444    	; 0xfb2 <__fp_pscB>
     df6:	40 f0       	brcs	.+16     	; 0xe08 <__divsf3+0x18>
     df8:	d5 d0       	rcall	.+426    	; 0xfa4 <__fp_pscA>
     dfa:	30 f0       	brcs	.+12     	; 0xe08 <__divsf3+0x18>
     dfc:	21 f4       	brne	.+8      	; 0xe06 <__divsf3+0x16>
     dfe:	5f 3f       	cpi	r21, 0xFF	; 255
     e00:	19 f0       	breq	.+6      	; 0xe08 <__divsf3+0x18>
     e02:	c7 c0       	rjmp	.+398    	; 0xf92 <__fp_inf>
     e04:	51 11       	cpse	r21, r1
     e06:	10 c1       	rjmp	.+544    	; 0x1028 <__fp_szero>
     e08:	ca c0       	rjmp	.+404    	; 0xf9e <__fp_nan>

00000e0a <__divsf3x>:
     e0a:	eb d0       	rcall	.+470    	; 0xfe2 <__fp_split3>
     e0c:	98 f3       	brcs	.-26     	; 0xdf4 <__divsf3+0x4>

00000e0e <__divsf3_pse>:
     e0e:	99 23       	and	r25, r25
     e10:	c9 f3       	breq	.-14     	; 0xe04 <__divsf3+0x14>
     e12:	55 23       	and	r21, r21
     e14:	b1 f3       	breq	.-20     	; 0xe02 <__divsf3+0x12>
     e16:	95 1b       	sub	r25, r21
     e18:	55 0b       	sbc	r21, r21
     e1a:	bb 27       	eor	r27, r27
     e1c:	aa 27       	eor	r26, r26
     e1e:	62 17       	cp	r22, r18
     e20:	73 07       	cpc	r23, r19
     e22:	84 07       	cpc	r24, r20
     e24:	38 f0       	brcs	.+14     	; 0xe34 <__divsf3_pse+0x26>
     e26:	9f 5f       	subi	r25, 0xFF	; 255
     e28:	5f 4f       	sbci	r21, 0xFF	; 255
     e2a:	22 0f       	add	r18, r18
     e2c:	33 1f       	adc	r19, r19
     e2e:	44 1f       	adc	r20, r20
     e30:	aa 1f       	adc	r26, r26
     e32:	a9 f3       	breq	.-22     	; 0xe1e <__divsf3_pse+0x10>
     e34:	33 d0       	rcall	.+102    	; 0xe9c <__divsf3_pse+0x8e>
     e36:	0e 2e       	mov	r0, r30
     e38:	3a f0       	brmi	.+14     	; 0xe48 <__divsf3_pse+0x3a>
     e3a:	e0 e8       	ldi	r30, 0x80	; 128
     e3c:	30 d0       	rcall	.+96     	; 0xe9e <__divsf3_pse+0x90>
     e3e:	91 50       	subi	r25, 0x01	; 1
     e40:	50 40       	sbci	r21, 0x00	; 0
     e42:	e6 95       	lsr	r30
     e44:	00 1c       	adc	r0, r0
     e46:	ca f7       	brpl	.-14     	; 0xe3a <__divsf3_pse+0x2c>
     e48:	29 d0       	rcall	.+82     	; 0xe9c <__divsf3_pse+0x8e>
     e4a:	fe 2f       	mov	r31, r30
     e4c:	27 d0       	rcall	.+78     	; 0xe9c <__divsf3_pse+0x8e>
     e4e:	66 0f       	add	r22, r22
     e50:	77 1f       	adc	r23, r23
     e52:	88 1f       	adc	r24, r24
     e54:	bb 1f       	adc	r27, r27
     e56:	26 17       	cp	r18, r22
     e58:	37 07       	cpc	r19, r23
     e5a:	48 07       	cpc	r20, r24
     e5c:	ab 07       	cpc	r26, r27
     e5e:	b0 e8       	ldi	r27, 0x80	; 128
     e60:	09 f0       	breq	.+2      	; 0xe64 <__divsf3_pse+0x56>
     e62:	bb 0b       	sbc	r27, r27
     e64:	80 2d       	mov	r24, r0
     e66:	bf 01       	movw	r22, r30
     e68:	ff 27       	eor	r31, r31
     e6a:	93 58       	subi	r25, 0x83	; 131
     e6c:	5f 4f       	sbci	r21, 0xFF	; 255
     e6e:	2a f0       	brmi	.+10     	; 0xe7a <__divsf3_pse+0x6c>
     e70:	9e 3f       	cpi	r25, 0xFE	; 254
     e72:	51 05       	cpc	r21, r1
     e74:	68 f0       	brcs	.+26     	; 0xe90 <__divsf3_pse+0x82>
     e76:	8d c0       	rjmp	.+282    	; 0xf92 <__fp_inf>
     e78:	d7 c0       	rjmp	.+430    	; 0x1028 <__fp_szero>
     e7a:	5f 3f       	cpi	r21, 0xFF	; 255
     e7c:	ec f3       	brlt	.-6      	; 0xe78 <__divsf3_pse+0x6a>
     e7e:	98 3e       	cpi	r25, 0xE8	; 232
     e80:	dc f3       	brlt	.-10     	; 0xe78 <__divsf3_pse+0x6a>
     e82:	86 95       	lsr	r24
     e84:	77 95       	ror	r23
     e86:	67 95       	ror	r22
     e88:	b7 95       	ror	r27
     e8a:	f7 95       	ror	r31
     e8c:	9f 5f       	subi	r25, 0xFF	; 255
     e8e:	c9 f7       	brne	.-14     	; 0xe82 <__divsf3_pse+0x74>
     e90:	88 0f       	add	r24, r24
     e92:	91 1d       	adc	r25, r1
     e94:	96 95       	lsr	r25
     e96:	87 95       	ror	r24
     e98:	97 f9       	bld	r25, 7
     e9a:	08 95       	ret
     e9c:	e1 e0       	ldi	r30, 0x01	; 1
     e9e:	66 0f       	add	r22, r22
     ea0:	77 1f       	adc	r23, r23
     ea2:	88 1f       	adc	r24, r24
     ea4:	bb 1f       	adc	r27, r27
     ea6:	62 17       	cp	r22, r18
     ea8:	73 07       	cpc	r23, r19
     eaa:	84 07       	cpc	r24, r20
     eac:	ba 07       	cpc	r27, r26
     eae:	20 f0       	brcs	.+8      	; 0xeb8 <__divsf3_pse+0xaa>
     eb0:	62 1b       	sub	r22, r18
     eb2:	73 0b       	sbc	r23, r19
     eb4:	84 0b       	sbc	r24, r20
     eb6:	ba 0b       	sbc	r27, r26
     eb8:	ee 1f       	adc	r30, r30
     eba:	88 f7       	brcc	.-30     	; 0xe9e <__divsf3_pse+0x90>
     ebc:	e0 95       	com	r30
     ebe:	08 95       	ret

00000ec0 <__fixunssfsi>:
     ec0:	98 d0       	rcall	.+304    	; 0xff2 <__fp_splitA>
     ec2:	88 f0       	brcs	.+34     	; 0xee6 <__fixunssfsi+0x26>
     ec4:	9f 57       	subi	r25, 0x7F	; 127
     ec6:	90 f0       	brcs	.+36     	; 0xeec <__fixunssfsi+0x2c>
     ec8:	b9 2f       	mov	r27, r25
     eca:	99 27       	eor	r25, r25
     ecc:	b7 51       	subi	r27, 0x17	; 23
     ece:	a0 f0       	brcs	.+40     	; 0xef8 <__fixunssfsi+0x38>
     ed0:	d1 f0       	breq	.+52     	; 0xf06 <__fixunssfsi+0x46>
     ed2:	66 0f       	add	r22, r22
     ed4:	77 1f       	adc	r23, r23
     ed6:	88 1f       	adc	r24, r24
     ed8:	99 1f       	adc	r25, r25
     eda:	1a f0       	brmi	.+6      	; 0xee2 <__fixunssfsi+0x22>
     edc:	ba 95       	dec	r27
     ede:	c9 f7       	brne	.-14     	; 0xed2 <__fixunssfsi+0x12>
     ee0:	12 c0       	rjmp	.+36     	; 0xf06 <__fixunssfsi+0x46>
     ee2:	b1 30       	cpi	r27, 0x01	; 1
     ee4:	81 f0       	breq	.+32     	; 0xf06 <__fixunssfsi+0x46>
     ee6:	9f d0       	rcall	.+318    	; 0x1026 <__fp_zero>
     ee8:	b1 e0       	ldi	r27, 0x01	; 1
     eea:	08 95       	ret
     eec:	9c c0       	rjmp	.+312    	; 0x1026 <__fp_zero>
     eee:	67 2f       	mov	r22, r23
     ef0:	78 2f       	mov	r23, r24
     ef2:	88 27       	eor	r24, r24
     ef4:	b8 5f       	subi	r27, 0xF8	; 248
     ef6:	39 f0       	breq	.+14     	; 0xf06 <__fixunssfsi+0x46>
     ef8:	b9 3f       	cpi	r27, 0xF9	; 249
     efa:	cc f3       	brlt	.-14     	; 0xeee <__fixunssfsi+0x2e>
     efc:	86 95       	lsr	r24
     efe:	77 95       	ror	r23
     f00:	67 95       	ror	r22
     f02:	b3 95       	inc	r27
     f04:	d9 f7       	brne	.-10     	; 0xefc <__fixunssfsi+0x3c>
     f06:	3e f4       	brtc	.+14     	; 0xf16 <__fixunssfsi+0x56>
     f08:	90 95       	com	r25
     f0a:	80 95       	com	r24
     f0c:	70 95       	com	r23
     f0e:	61 95       	neg	r22
     f10:	7f 4f       	sbci	r23, 0xFF	; 255
     f12:	8f 4f       	sbci	r24, 0xFF	; 255
     f14:	9f 4f       	sbci	r25, 0xFF	; 255
     f16:	08 95       	ret

00000f18 <__floatunsisf>:
     f18:	e8 94       	clt
     f1a:	09 c0       	rjmp	.+18     	; 0xf2e <__floatsisf+0x12>

00000f1c <__floatsisf>:
     f1c:	97 fb       	bst	r25, 7
     f1e:	3e f4       	brtc	.+14     	; 0xf2e <__floatsisf+0x12>
     f20:	90 95       	com	r25
     f22:	80 95       	com	r24
     f24:	70 95       	com	r23
     f26:	61 95       	neg	r22
     f28:	7f 4f       	sbci	r23, 0xFF	; 255
     f2a:	8f 4f       	sbci	r24, 0xFF	; 255
     f2c:	9f 4f       	sbci	r25, 0xFF	; 255
     f2e:	99 23       	and	r25, r25
     f30:	a9 f0       	breq	.+42     	; 0xf5c <__floatsisf+0x40>
     f32:	f9 2f       	mov	r31, r25
     f34:	96 e9       	ldi	r25, 0x96	; 150
     f36:	bb 27       	eor	r27, r27
     f38:	93 95       	inc	r25
     f3a:	f6 95       	lsr	r31
     f3c:	87 95       	ror	r24
     f3e:	77 95       	ror	r23
     f40:	67 95       	ror	r22
     f42:	b7 95       	ror	r27
     f44:	f1 11       	cpse	r31, r1
     f46:	f8 cf       	rjmp	.-16     	; 0xf38 <__floatsisf+0x1c>
     f48:	fa f4       	brpl	.+62     	; 0xf88 <__floatsisf+0x6c>
     f4a:	bb 0f       	add	r27, r27
     f4c:	11 f4       	brne	.+4      	; 0xf52 <__floatsisf+0x36>
     f4e:	60 ff       	sbrs	r22, 0
     f50:	1b c0       	rjmp	.+54     	; 0xf88 <__floatsisf+0x6c>
     f52:	6f 5f       	subi	r22, 0xFF	; 255
     f54:	7f 4f       	sbci	r23, 0xFF	; 255
     f56:	8f 4f       	sbci	r24, 0xFF	; 255
     f58:	9f 4f       	sbci	r25, 0xFF	; 255
     f5a:	16 c0       	rjmp	.+44     	; 0xf88 <__floatsisf+0x6c>
     f5c:	88 23       	and	r24, r24
     f5e:	11 f0       	breq	.+4      	; 0xf64 <__floatsisf+0x48>
     f60:	96 e9       	ldi	r25, 0x96	; 150
     f62:	11 c0       	rjmp	.+34     	; 0xf86 <__floatsisf+0x6a>
     f64:	77 23       	and	r23, r23
     f66:	21 f0       	breq	.+8      	; 0xf70 <__floatsisf+0x54>
     f68:	9e e8       	ldi	r25, 0x8E	; 142
     f6a:	87 2f       	mov	r24, r23
     f6c:	76 2f       	mov	r23, r22
     f6e:	05 c0       	rjmp	.+10     	; 0xf7a <__floatsisf+0x5e>
     f70:	66 23       	and	r22, r22
     f72:	71 f0       	breq	.+28     	; 0xf90 <__floatsisf+0x74>
     f74:	96 e8       	ldi	r25, 0x86	; 134
     f76:	86 2f       	mov	r24, r22
     f78:	70 e0       	ldi	r23, 0x00	; 0
     f7a:	60 e0       	ldi	r22, 0x00	; 0
     f7c:	2a f0       	brmi	.+10     	; 0xf88 <__floatsisf+0x6c>
     f7e:	9a 95       	dec	r25
     f80:	66 0f       	add	r22, r22
     f82:	77 1f       	adc	r23, r23
     f84:	88 1f       	adc	r24, r24
     f86:	da f7       	brpl	.-10     	; 0xf7e <__floatsisf+0x62>
     f88:	88 0f       	add	r24, r24
     f8a:	96 95       	lsr	r25
     f8c:	87 95       	ror	r24
     f8e:	97 f9       	bld	r25, 7
     f90:	08 95       	ret

00000f92 <__fp_inf>:
     f92:	97 f9       	bld	r25, 7
     f94:	9f 67       	ori	r25, 0x7F	; 127
     f96:	80 e8       	ldi	r24, 0x80	; 128
     f98:	70 e0       	ldi	r23, 0x00	; 0
     f9a:	60 e0       	ldi	r22, 0x00	; 0
     f9c:	08 95       	ret

00000f9e <__fp_nan>:
     f9e:	9f ef       	ldi	r25, 0xFF	; 255
     fa0:	80 ec       	ldi	r24, 0xC0	; 192
     fa2:	08 95       	ret

00000fa4 <__fp_pscA>:
     fa4:	00 24       	eor	r0, r0
     fa6:	0a 94       	dec	r0
     fa8:	16 16       	cp	r1, r22
     faa:	17 06       	cpc	r1, r23
     fac:	18 06       	cpc	r1, r24
     fae:	09 06       	cpc	r0, r25
     fb0:	08 95       	ret

00000fb2 <__fp_pscB>:
     fb2:	00 24       	eor	r0, r0
     fb4:	0a 94       	dec	r0
     fb6:	12 16       	cp	r1, r18
     fb8:	13 06       	cpc	r1, r19
     fba:	14 06       	cpc	r1, r20
     fbc:	05 06       	cpc	r0, r21
     fbe:	08 95       	ret

00000fc0 <__fp_round>:
     fc0:	09 2e       	mov	r0, r25
     fc2:	03 94       	inc	r0
     fc4:	00 0c       	add	r0, r0
     fc6:	11 f4       	brne	.+4      	; 0xfcc <__fp_round+0xc>
     fc8:	88 23       	and	r24, r24
     fca:	52 f0       	brmi	.+20     	; 0xfe0 <__fp_round+0x20>
     fcc:	bb 0f       	add	r27, r27
     fce:	40 f4       	brcc	.+16     	; 0xfe0 <__fp_round+0x20>
     fd0:	bf 2b       	or	r27, r31
     fd2:	11 f4       	brne	.+4      	; 0xfd8 <__fp_round+0x18>
     fd4:	60 ff       	sbrs	r22, 0
     fd6:	04 c0       	rjmp	.+8      	; 0xfe0 <__fp_round+0x20>
     fd8:	6f 5f       	subi	r22, 0xFF	; 255
     fda:	7f 4f       	sbci	r23, 0xFF	; 255
     fdc:	8f 4f       	sbci	r24, 0xFF	; 255
     fde:	9f 4f       	sbci	r25, 0xFF	; 255
     fe0:	08 95       	ret

00000fe2 <__fp_split3>:
     fe2:	57 fd       	sbrc	r21, 7
     fe4:	90 58       	subi	r25, 0x80	; 128
     fe6:	44 0f       	add	r20, r20
     fe8:	55 1f       	adc	r21, r21
     fea:	59 f0       	breq	.+22     	; 0x1002 <__fp_splitA+0x10>
     fec:	5f 3f       	cpi	r21, 0xFF	; 255
     fee:	71 f0       	breq	.+28     	; 0x100c <__fp_splitA+0x1a>
     ff0:	47 95       	ror	r20

00000ff2 <__fp_splitA>:
     ff2:	88 0f       	add	r24, r24
     ff4:	97 fb       	bst	r25, 7
     ff6:	99 1f       	adc	r25, r25
     ff8:	61 f0       	breq	.+24     	; 0x1012 <__fp_splitA+0x20>
     ffa:	9f 3f       	cpi	r25, 0xFF	; 255
     ffc:	79 f0       	breq	.+30     	; 0x101c <__fp_splitA+0x2a>
     ffe:	87 95       	ror	r24
    1000:	08 95       	ret
    1002:	12 16       	cp	r1, r18
    1004:	13 06       	cpc	r1, r19
    1006:	14 06       	cpc	r1, r20
    1008:	55 1f       	adc	r21, r21
    100a:	f2 cf       	rjmp	.-28     	; 0xff0 <__fp_split3+0xe>
    100c:	46 95       	lsr	r20
    100e:	f1 df       	rcall	.-30     	; 0xff2 <__fp_splitA>
    1010:	08 c0       	rjmp	.+16     	; 0x1022 <__fp_splitA+0x30>
    1012:	16 16       	cp	r1, r22
    1014:	17 06       	cpc	r1, r23
    1016:	18 06       	cpc	r1, r24
    1018:	99 1f       	adc	r25, r25
    101a:	f1 cf       	rjmp	.-30     	; 0xffe <__fp_splitA+0xc>
    101c:	86 95       	lsr	r24
    101e:	71 05       	cpc	r23, r1
    1020:	61 05       	cpc	r22, r1
    1022:	08 94       	sec
    1024:	08 95       	ret

00001026 <__fp_zero>:
    1026:	e8 94       	clt

00001028 <__fp_szero>:
    1028:	bb 27       	eor	r27, r27
    102a:	66 27       	eor	r22, r22
    102c:	77 27       	eor	r23, r23
    102e:	cb 01       	movw	r24, r22
    1030:	97 f9       	bld	r25, 7
    1032:	08 95       	ret

00001034 <__udivmodsi4>:
    1034:	a1 e2       	ldi	r26, 0x21	; 33
    1036:	1a 2e       	mov	r1, r26
    1038:	aa 1b       	sub	r26, r26
    103a:	bb 1b       	sub	r27, r27
    103c:	fd 01       	movw	r30, r26
    103e:	0d c0       	rjmp	.+26     	; 0x105a <__udivmodsi4_ep>

00001040 <__udivmodsi4_loop>:
    1040:	aa 1f       	adc	r26, r26
    1042:	bb 1f       	adc	r27, r27
    1044:	ee 1f       	adc	r30, r30
    1046:	ff 1f       	adc	r31, r31
    1048:	a2 17       	cp	r26, r18
    104a:	b3 07       	cpc	r27, r19
    104c:	e4 07       	cpc	r30, r20
    104e:	f5 07       	cpc	r31, r21
    1050:	20 f0       	brcs	.+8      	; 0x105a <__udivmodsi4_ep>
    1052:	a2 1b       	sub	r26, r18
    1054:	b3 0b       	sbc	r27, r19
    1056:	e4 0b       	sbc	r30, r20
    1058:	f5 0b       	sbc	r31, r21

0000105a <__udivmodsi4_ep>:
    105a:	66 1f       	adc	r22, r22
    105c:	77 1f       	adc	r23, r23
    105e:	88 1f       	adc	r24, r24
    1060:	99 1f       	adc	r25, r25
    1062:	1a 94       	dec	r1
    1064:	69 f7       	brne	.-38     	; 0x1040 <__udivmodsi4_loop>
    1066:	60 95       	com	r22
    1068:	70 95       	com	r23
    106a:	80 95       	com	r24
    106c:	90 95       	com	r25
    106e:	9b 01       	movw	r18, r22
    1070:	ac 01       	movw	r20, r24
    1072:	bd 01       	movw	r22, r26
    1074:	cf 01       	movw	r24, r30
    1076:	08 95       	ret

00001078 <vsnprintf>:
    1078:	0f 93       	push	r16
    107a:	1f 93       	push	r17
    107c:	cf 93       	push	r28
    107e:	df 93       	push	r29
    1080:	cd b7       	in	r28, 0x3d	; 61
    1082:	de b7       	in	r29, 0x3e	; 62
    1084:	2e 97       	sbiw	r28, 0x0e	; 14
    1086:	0f b6       	in	r0, 0x3f	; 63
    1088:	f8 94       	cli
    108a:	de bf       	out	0x3e, r29	; 62
    108c:	0f be       	out	0x3f, r0	; 63
    108e:	cd bf       	out	0x3d, r28	; 61
    1090:	8c 01       	movw	r16, r24
    1092:	fa 01       	movw	r30, r20
    1094:	86 e0       	ldi	r24, 0x06	; 6
    1096:	8c 83       	std	Y+4, r24	; 0x04
    1098:	1a 83       	std	Y+2, r17	; 0x02
    109a:	09 83       	std	Y+1, r16	; 0x01
    109c:	77 ff       	sbrs	r23, 7
    109e:	02 c0       	rjmp	.+4      	; 0x10a4 <vsnprintf+0x2c>
    10a0:	60 e0       	ldi	r22, 0x00	; 0
    10a2:	70 e8       	ldi	r23, 0x80	; 128
    10a4:	cb 01       	movw	r24, r22
    10a6:	01 97       	sbiw	r24, 0x01	; 1
    10a8:	9e 83       	std	Y+6, r25	; 0x06
    10aa:	8d 83       	std	Y+5, r24	; 0x05
    10ac:	a9 01       	movw	r20, r18
    10ae:	bf 01       	movw	r22, r30
    10b0:	ce 01       	movw	r24, r28
    10b2:	01 96       	adiw	r24, 0x01	; 1
    10b4:	19 d0       	rcall	.+50     	; 0x10e8 <vfprintf>
    10b6:	4d 81       	ldd	r20, Y+5	; 0x05
    10b8:	5e 81       	ldd	r21, Y+6	; 0x06
    10ba:	57 fd       	sbrc	r21, 7
    10bc:	0a c0       	rjmp	.+20     	; 0x10d2 <vsnprintf+0x5a>
    10be:	2f 81       	ldd	r18, Y+7	; 0x07
    10c0:	38 85       	ldd	r19, Y+8	; 0x08
    10c2:	42 17       	cp	r20, r18
    10c4:	53 07       	cpc	r21, r19
    10c6:	0c f4       	brge	.+2      	; 0x10ca <vsnprintf+0x52>
    10c8:	9a 01       	movw	r18, r20
    10ca:	f8 01       	movw	r30, r16
    10cc:	e2 0f       	add	r30, r18
    10ce:	f3 1f       	adc	r31, r19
    10d0:	10 82       	st	Z, r1
    10d2:	2e 96       	adiw	r28, 0x0e	; 14
    10d4:	0f b6       	in	r0, 0x3f	; 63
    10d6:	f8 94       	cli
    10d8:	de bf       	out	0x3e, r29	; 62
    10da:	0f be       	out	0x3f, r0	; 63
    10dc:	cd bf       	out	0x3d, r28	; 61
    10de:	df 91       	pop	r29
    10e0:	cf 91       	pop	r28
    10e2:	1f 91       	pop	r17
    10e4:	0f 91       	pop	r16
    10e6:	08 95       	ret

000010e8 <vfprintf>:
    10e8:	2f 92       	push	r2
    10ea:	3f 92       	push	r3
    10ec:	4f 92       	push	r4
    10ee:	5f 92       	push	r5
    10f0:	6f 92       	push	r6
    10f2:	7f 92       	push	r7
    10f4:	8f 92       	push	r8
    10f6:	9f 92       	push	r9
    10f8:	af 92       	push	r10
    10fa:	bf 92       	push	r11
    10fc:	cf 92       	push	r12
    10fe:	df 92       	push	r13
    1100:	ef 92       	push	r14
    1102:	ff 92       	push	r15
    1104:	0f 93       	push	r16
    1106:	1f 93       	push	r17
    1108:	cf 93       	push	r28
    110a:	df 93       	push	r29
    110c:	cd b7       	in	r28, 0x3d	; 61
    110e:	de b7       	in	r29, 0x3e	; 62
    1110:	2b 97       	sbiw	r28, 0x0b	; 11
    1112:	0f b6       	in	r0, 0x3f	; 63
    1114:	f8 94       	cli
    1116:	de bf       	out	0x3e, r29	; 62
    1118:	0f be       	out	0x3f, r0	; 63
    111a:	cd bf       	out	0x3d, r28	; 61
    111c:	6c 01       	movw	r12, r24
    111e:	7b 01       	movw	r14, r22
    1120:	8a 01       	movw	r16, r20
    1122:	fc 01       	movw	r30, r24
    1124:	17 82       	std	Z+7, r1	; 0x07
    1126:	16 82       	std	Z+6, r1	; 0x06
    1128:	83 81       	ldd	r24, Z+3	; 0x03
    112a:	81 ff       	sbrs	r24, 1
    112c:	bf c1       	rjmp	.+894    	; 0x14ac <__stack+0x3ad>
    112e:	ce 01       	movw	r24, r28
    1130:	01 96       	adiw	r24, 0x01	; 1
    1132:	3c 01       	movw	r6, r24
    1134:	f6 01       	movw	r30, r12
    1136:	93 81       	ldd	r25, Z+3	; 0x03
    1138:	f7 01       	movw	r30, r14
    113a:	93 fd       	sbrc	r25, 3
    113c:	85 91       	lpm	r24, Z+
    113e:	93 ff       	sbrs	r25, 3
    1140:	81 91       	ld	r24, Z+
    1142:	7f 01       	movw	r14, r30
    1144:	88 23       	and	r24, r24
    1146:	09 f4       	brne	.+2      	; 0x114a <__stack+0x4b>
    1148:	ad c1       	rjmp	.+858    	; 0x14a4 <__stack+0x3a5>
    114a:	85 32       	cpi	r24, 0x25	; 37
    114c:	39 f4       	brne	.+14     	; 0x115c <__stack+0x5d>
    114e:	93 fd       	sbrc	r25, 3
    1150:	85 91       	lpm	r24, Z+
    1152:	93 ff       	sbrs	r25, 3
    1154:	81 91       	ld	r24, Z+
    1156:	7f 01       	movw	r14, r30
    1158:	85 32       	cpi	r24, 0x25	; 37
    115a:	21 f4       	brne	.+8      	; 0x1164 <__stack+0x65>
    115c:	b6 01       	movw	r22, r12
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	d6 d1       	rcall	.+940    	; 0x150e <fputc>
    1162:	e8 cf       	rjmp	.-48     	; 0x1134 <__stack+0x35>
    1164:	91 2c       	mov	r9, r1
    1166:	21 2c       	mov	r2, r1
    1168:	31 2c       	mov	r3, r1
    116a:	ff e1       	ldi	r31, 0x1F	; 31
    116c:	f3 15       	cp	r31, r3
    116e:	d8 f0       	brcs	.+54     	; 0x11a6 <__stack+0xa7>
    1170:	8b 32       	cpi	r24, 0x2B	; 43
    1172:	79 f0       	breq	.+30     	; 0x1192 <__stack+0x93>
    1174:	38 f4       	brcc	.+14     	; 0x1184 <__stack+0x85>
    1176:	80 32       	cpi	r24, 0x20	; 32
    1178:	79 f0       	breq	.+30     	; 0x1198 <__stack+0x99>
    117a:	83 32       	cpi	r24, 0x23	; 35
    117c:	a1 f4       	brne	.+40     	; 0x11a6 <__stack+0xa7>
    117e:	23 2d       	mov	r18, r3
    1180:	20 61       	ori	r18, 0x10	; 16
    1182:	1d c0       	rjmp	.+58     	; 0x11be <__stack+0xbf>
    1184:	8d 32       	cpi	r24, 0x2D	; 45
    1186:	61 f0       	breq	.+24     	; 0x11a0 <__stack+0xa1>
    1188:	80 33       	cpi	r24, 0x30	; 48
    118a:	69 f4       	brne	.+26     	; 0x11a6 <__stack+0xa7>
    118c:	23 2d       	mov	r18, r3
    118e:	21 60       	ori	r18, 0x01	; 1
    1190:	16 c0       	rjmp	.+44     	; 0x11be <__stack+0xbf>
    1192:	83 2d       	mov	r24, r3
    1194:	82 60       	ori	r24, 0x02	; 2
    1196:	38 2e       	mov	r3, r24
    1198:	e3 2d       	mov	r30, r3
    119a:	e4 60       	ori	r30, 0x04	; 4
    119c:	3e 2e       	mov	r3, r30
    119e:	2a c0       	rjmp	.+84     	; 0x11f4 <__stack+0xf5>
    11a0:	f3 2d       	mov	r31, r3
    11a2:	f8 60       	ori	r31, 0x08	; 8
    11a4:	1d c0       	rjmp	.+58     	; 0x11e0 <__stack+0xe1>
    11a6:	37 fc       	sbrc	r3, 7
    11a8:	2d c0       	rjmp	.+90     	; 0x1204 <__stack+0x105>
    11aa:	20 ed       	ldi	r18, 0xD0	; 208
    11ac:	28 0f       	add	r18, r24
    11ae:	2a 30       	cpi	r18, 0x0A	; 10
    11b0:	40 f0       	brcs	.+16     	; 0x11c2 <__stack+0xc3>
    11b2:	8e 32       	cpi	r24, 0x2E	; 46
    11b4:	b9 f4       	brne	.+46     	; 0x11e4 <__stack+0xe5>
    11b6:	36 fc       	sbrc	r3, 6
    11b8:	75 c1       	rjmp	.+746    	; 0x14a4 <__stack+0x3a5>
    11ba:	23 2d       	mov	r18, r3
    11bc:	20 64       	ori	r18, 0x40	; 64
    11be:	32 2e       	mov	r3, r18
    11c0:	19 c0       	rjmp	.+50     	; 0x11f4 <__stack+0xf5>
    11c2:	36 fe       	sbrs	r3, 6
    11c4:	06 c0       	rjmp	.+12     	; 0x11d2 <__stack+0xd3>
    11c6:	8a e0       	ldi	r24, 0x0A	; 10
    11c8:	98 9e       	mul	r9, r24
    11ca:	20 0d       	add	r18, r0
    11cc:	11 24       	eor	r1, r1
    11ce:	92 2e       	mov	r9, r18
    11d0:	11 c0       	rjmp	.+34     	; 0x11f4 <__stack+0xf5>
    11d2:	ea e0       	ldi	r30, 0x0A	; 10
    11d4:	2e 9e       	mul	r2, r30
    11d6:	20 0d       	add	r18, r0
    11d8:	11 24       	eor	r1, r1
    11da:	22 2e       	mov	r2, r18
    11dc:	f3 2d       	mov	r31, r3
    11de:	f0 62       	ori	r31, 0x20	; 32
    11e0:	3f 2e       	mov	r3, r31
    11e2:	08 c0       	rjmp	.+16     	; 0x11f4 <__stack+0xf5>
    11e4:	8c 36       	cpi	r24, 0x6C	; 108
    11e6:	21 f4       	brne	.+8      	; 0x11f0 <__stack+0xf1>
    11e8:	83 2d       	mov	r24, r3
    11ea:	80 68       	ori	r24, 0x80	; 128
    11ec:	38 2e       	mov	r3, r24
    11ee:	02 c0       	rjmp	.+4      	; 0x11f4 <__stack+0xf5>
    11f0:	88 36       	cpi	r24, 0x68	; 104
    11f2:	41 f4       	brne	.+16     	; 0x1204 <__stack+0x105>
    11f4:	f7 01       	movw	r30, r14
    11f6:	93 fd       	sbrc	r25, 3
    11f8:	85 91       	lpm	r24, Z+
    11fa:	93 ff       	sbrs	r25, 3
    11fc:	81 91       	ld	r24, Z+
    11fe:	7f 01       	movw	r14, r30
    1200:	81 11       	cpse	r24, r1
    1202:	b3 cf       	rjmp	.-154    	; 0x116a <__stack+0x6b>
    1204:	98 2f       	mov	r25, r24
    1206:	9f 7d       	andi	r25, 0xDF	; 223
    1208:	95 54       	subi	r25, 0x45	; 69
    120a:	93 30       	cpi	r25, 0x03	; 3
    120c:	28 f4       	brcc	.+10     	; 0x1218 <__stack+0x119>
    120e:	0c 5f       	subi	r16, 0xFC	; 252
    1210:	1f 4f       	sbci	r17, 0xFF	; 255
    1212:	9f e3       	ldi	r25, 0x3F	; 63
    1214:	99 83       	std	Y+1, r25	; 0x01
    1216:	0d c0       	rjmp	.+26     	; 0x1232 <__stack+0x133>
    1218:	83 36       	cpi	r24, 0x63	; 99
    121a:	31 f0       	breq	.+12     	; 0x1228 <__stack+0x129>
    121c:	83 37       	cpi	r24, 0x73	; 115
    121e:	71 f0       	breq	.+28     	; 0x123c <__stack+0x13d>
    1220:	83 35       	cpi	r24, 0x53	; 83
    1222:	09 f0       	breq	.+2      	; 0x1226 <__stack+0x127>
    1224:	55 c0       	rjmp	.+170    	; 0x12d0 <__stack+0x1d1>
    1226:	20 c0       	rjmp	.+64     	; 0x1268 <__stack+0x169>
    1228:	f8 01       	movw	r30, r16
    122a:	80 81       	ld	r24, Z
    122c:	89 83       	std	Y+1, r24	; 0x01
    122e:	0e 5f       	subi	r16, 0xFE	; 254
    1230:	1f 4f       	sbci	r17, 0xFF	; 255
    1232:	88 24       	eor	r8, r8
    1234:	83 94       	inc	r8
    1236:	91 2c       	mov	r9, r1
    1238:	53 01       	movw	r10, r6
    123a:	12 c0       	rjmp	.+36     	; 0x1260 <__stack+0x161>
    123c:	28 01       	movw	r4, r16
    123e:	f2 e0       	ldi	r31, 0x02	; 2
    1240:	4f 0e       	add	r4, r31
    1242:	51 1c       	adc	r5, r1
    1244:	f8 01       	movw	r30, r16
    1246:	a0 80       	ld	r10, Z
    1248:	b1 80       	ldd	r11, Z+1	; 0x01
    124a:	36 fe       	sbrs	r3, 6
    124c:	03 c0       	rjmp	.+6      	; 0x1254 <__stack+0x155>
    124e:	69 2d       	mov	r22, r9
    1250:	70 e0       	ldi	r23, 0x00	; 0
    1252:	02 c0       	rjmp	.+4      	; 0x1258 <__stack+0x159>
    1254:	6f ef       	ldi	r22, 0xFF	; 255
    1256:	7f ef       	ldi	r23, 0xFF	; 255
    1258:	c5 01       	movw	r24, r10
    125a:	4e d1       	rcall	.+668    	; 0x14f8 <strnlen>
    125c:	4c 01       	movw	r8, r24
    125e:	82 01       	movw	r16, r4
    1260:	f3 2d       	mov	r31, r3
    1262:	ff 77       	andi	r31, 0x7F	; 127
    1264:	3f 2e       	mov	r3, r31
    1266:	15 c0       	rjmp	.+42     	; 0x1292 <__stack+0x193>
    1268:	28 01       	movw	r4, r16
    126a:	22 e0       	ldi	r18, 0x02	; 2
    126c:	42 0e       	add	r4, r18
    126e:	51 1c       	adc	r5, r1
    1270:	f8 01       	movw	r30, r16
    1272:	a0 80       	ld	r10, Z
    1274:	b1 80       	ldd	r11, Z+1	; 0x01
    1276:	36 fe       	sbrs	r3, 6
    1278:	03 c0       	rjmp	.+6      	; 0x1280 <__stack+0x181>
    127a:	69 2d       	mov	r22, r9
    127c:	70 e0       	ldi	r23, 0x00	; 0
    127e:	02 c0       	rjmp	.+4      	; 0x1284 <__stack+0x185>
    1280:	6f ef       	ldi	r22, 0xFF	; 255
    1282:	7f ef       	ldi	r23, 0xFF	; 255
    1284:	c5 01       	movw	r24, r10
    1286:	2d d1       	rcall	.+602    	; 0x14e2 <strnlen_P>
    1288:	4c 01       	movw	r8, r24
    128a:	f3 2d       	mov	r31, r3
    128c:	f0 68       	ori	r31, 0x80	; 128
    128e:	3f 2e       	mov	r3, r31
    1290:	82 01       	movw	r16, r4
    1292:	33 fc       	sbrc	r3, 3
    1294:	19 c0       	rjmp	.+50     	; 0x12c8 <__stack+0x1c9>
    1296:	82 2d       	mov	r24, r2
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	88 16       	cp	r8, r24
    129c:	99 06       	cpc	r9, r25
    129e:	a0 f4       	brcc	.+40     	; 0x12c8 <__stack+0x1c9>
    12a0:	b6 01       	movw	r22, r12
    12a2:	80 e2       	ldi	r24, 0x20	; 32
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	33 d1       	rcall	.+614    	; 0x150e <fputc>
    12a8:	2a 94       	dec	r2
    12aa:	f5 cf       	rjmp	.-22     	; 0x1296 <__stack+0x197>
    12ac:	f5 01       	movw	r30, r10
    12ae:	37 fc       	sbrc	r3, 7
    12b0:	85 91       	lpm	r24, Z+
    12b2:	37 fe       	sbrs	r3, 7
    12b4:	81 91       	ld	r24, Z+
    12b6:	5f 01       	movw	r10, r30
    12b8:	b6 01       	movw	r22, r12
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	28 d1       	rcall	.+592    	; 0x150e <fputc>
    12be:	21 10       	cpse	r2, r1
    12c0:	2a 94       	dec	r2
    12c2:	21 e0       	ldi	r18, 0x01	; 1
    12c4:	82 1a       	sub	r8, r18
    12c6:	91 08       	sbc	r9, r1
    12c8:	81 14       	cp	r8, r1
    12ca:	91 04       	cpc	r9, r1
    12cc:	79 f7       	brne	.-34     	; 0x12ac <__stack+0x1ad>
    12ce:	e1 c0       	rjmp	.+450    	; 0x1492 <__stack+0x393>
    12d0:	84 36       	cpi	r24, 0x64	; 100
    12d2:	11 f0       	breq	.+4      	; 0x12d8 <__stack+0x1d9>
    12d4:	89 36       	cpi	r24, 0x69	; 105
    12d6:	39 f5       	brne	.+78     	; 0x1326 <__stack+0x227>
    12d8:	f8 01       	movw	r30, r16
    12da:	37 fe       	sbrs	r3, 7
    12dc:	07 c0       	rjmp	.+14     	; 0x12ec <__stack+0x1ed>
    12de:	60 81       	ld	r22, Z
    12e0:	71 81       	ldd	r23, Z+1	; 0x01
    12e2:	82 81       	ldd	r24, Z+2	; 0x02
    12e4:	93 81       	ldd	r25, Z+3	; 0x03
    12e6:	0c 5f       	subi	r16, 0xFC	; 252
    12e8:	1f 4f       	sbci	r17, 0xFF	; 255
    12ea:	08 c0       	rjmp	.+16     	; 0x12fc <__stack+0x1fd>
    12ec:	60 81       	ld	r22, Z
    12ee:	71 81       	ldd	r23, Z+1	; 0x01
    12f0:	07 2e       	mov	r0, r23
    12f2:	00 0c       	add	r0, r0
    12f4:	88 0b       	sbc	r24, r24
    12f6:	99 0b       	sbc	r25, r25
    12f8:	0e 5f       	subi	r16, 0xFE	; 254
    12fa:	1f 4f       	sbci	r17, 0xFF	; 255
    12fc:	f3 2d       	mov	r31, r3
    12fe:	ff 76       	andi	r31, 0x6F	; 111
    1300:	3f 2e       	mov	r3, r31
    1302:	97 ff       	sbrs	r25, 7
    1304:	09 c0       	rjmp	.+18     	; 0x1318 <__stack+0x219>
    1306:	90 95       	com	r25
    1308:	80 95       	com	r24
    130a:	70 95       	com	r23
    130c:	61 95       	neg	r22
    130e:	7f 4f       	sbci	r23, 0xFF	; 255
    1310:	8f 4f       	sbci	r24, 0xFF	; 255
    1312:	9f 4f       	sbci	r25, 0xFF	; 255
    1314:	f0 68       	ori	r31, 0x80	; 128
    1316:	3f 2e       	mov	r3, r31
    1318:	2a e0       	ldi	r18, 0x0A	; 10
    131a:	30 e0       	ldi	r19, 0x00	; 0
    131c:	a3 01       	movw	r20, r6
    131e:	33 d1       	rcall	.+614    	; 0x1586 <__ultoa_invert>
    1320:	88 2e       	mov	r8, r24
    1322:	86 18       	sub	r8, r6
    1324:	44 c0       	rjmp	.+136    	; 0x13ae <__stack+0x2af>
    1326:	85 37       	cpi	r24, 0x75	; 117
    1328:	31 f4       	brne	.+12     	; 0x1336 <__stack+0x237>
    132a:	23 2d       	mov	r18, r3
    132c:	2f 7e       	andi	r18, 0xEF	; 239
    132e:	b2 2e       	mov	r11, r18
    1330:	2a e0       	ldi	r18, 0x0A	; 10
    1332:	30 e0       	ldi	r19, 0x00	; 0
    1334:	25 c0       	rjmp	.+74     	; 0x1380 <__stack+0x281>
    1336:	93 2d       	mov	r25, r3
    1338:	99 7f       	andi	r25, 0xF9	; 249
    133a:	b9 2e       	mov	r11, r25
    133c:	8f 36       	cpi	r24, 0x6F	; 111
    133e:	c1 f0       	breq	.+48     	; 0x1370 <__stack+0x271>
    1340:	18 f4       	brcc	.+6      	; 0x1348 <__stack+0x249>
    1342:	88 35       	cpi	r24, 0x58	; 88
    1344:	79 f0       	breq	.+30     	; 0x1364 <__stack+0x265>
    1346:	ae c0       	rjmp	.+348    	; 0x14a4 <__stack+0x3a5>
    1348:	80 37       	cpi	r24, 0x70	; 112
    134a:	19 f0       	breq	.+6      	; 0x1352 <__stack+0x253>
    134c:	88 37       	cpi	r24, 0x78	; 120
    134e:	21 f0       	breq	.+8      	; 0x1358 <__stack+0x259>
    1350:	a9 c0       	rjmp	.+338    	; 0x14a4 <__stack+0x3a5>
    1352:	e9 2f       	mov	r30, r25
    1354:	e0 61       	ori	r30, 0x10	; 16
    1356:	be 2e       	mov	r11, r30
    1358:	b4 fe       	sbrs	r11, 4
    135a:	0d c0       	rjmp	.+26     	; 0x1376 <__stack+0x277>
    135c:	fb 2d       	mov	r31, r11
    135e:	f4 60       	ori	r31, 0x04	; 4
    1360:	bf 2e       	mov	r11, r31
    1362:	09 c0       	rjmp	.+18     	; 0x1376 <__stack+0x277>
    1364:	34 fe       	sbrs	r3, 4
    1366:	0a c0       	rjmp	.+20     	; 0x137c <__stack+0x27d>
    1368:	29 2f       	mov	r18, r25
    136a:	26 60       	ori	r18, 0x06	; 6
    136c:	b2 2e       	mov	r11, r18
    136e:	06 c0       	rjmp	.+12     	; 0x137c <__stack+0x27d>
    1370:	28 e0       	ldi	r18, 0x08	; 8
    1372:	30 e0       	ldi	r19, 0x00	; 0
    1374:	05 c0       	rjmp	.+10     	; 0x1380 <__stack+0x281>
    1376:	20 e1       	ldi	r18, 0x10	; 16
    1378:	30 e0       	ldi	r19, 0x00	; 0
    137a:	02 c0       	rjmp	.+4      	; 0x1380 <__stack+0x281>
    137c:	20 e1       	ldi	r18, 0x10	; 16
    137e:	32 e0       	ldi	r19, 0x02	; 2
    1380:	f8 01       	movw	r30, r16
    1382:	b7 fe       	sbrs	r11, 7
    1384:	07 c0       	rjmp	.+14     	; 0x1394 <__stack+0x295>
    1386:	60 81       	ld	r22, Z
    1388:	71 81       	ldd	r23, Z+1	; 0x01
    138a:	82 81       	ldd	r24, Z+2	; 0x02
    138c:	93 81       	ldd	r25, Z+3	; 0x03
    138e:	0c 5f       	subi	r16, 0xFC	; 252
    1390:	1f 4f       	sbci	r17, 0xFF	; 255
    1392:	06 c0       	rjmp	.+12     	; 0x13a0 <__stack+0x2a1>
    1394:	60 81       	ld	r22, Z
    1396:	71 81       	ldd	r23, Z+1	; 0x01
    1398:	80 e0       	ldi	r24, 0x00	; 0
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	0e 5f       	subi	r16, 0xFE	; 254
    139e:	1f 4f       	sbci	r17, 0xFF	; 255
    13a0:	a3 01       	movw	r20, r6
    13a2:	f1 d0       	rcall	.+482    	; 0x1586 <__ultoa_invert>
    13a4:	88 2e       	mov	r8, r24
    13a6:	86 18       	sub	r8, r6
    13a8:	fb 2d       	mov	r31, r11
    13aa:	ff 77       	andi	r31, 0x7F	; 127
    13ac:	3f 2e       	mov	r3, r31
    13ae:	36 fe       	sbrs	r3, 6
    13b0:	0d c0       	rjmp	.+26     	; 0x13cc <__stack+0x2cd>
    13b2:	23 2d       	mov	r18, r3
    13b4:	2e 7f       	andi	r18, 0xFE	; 254
    13b6:	a2 2e       	mov	r10, r18
    13b8:	89 14       	cp	r8, r9
    13ba:	58 f4       	brcc	.+22     	; 0x13d2 <__stack+0x2d3>
    13bc:	34 fe       	sbrs	r3, 4
    13be:	0b c0       	rjmp	.+22     	; 0x13d6 <__stack+0x2d7>
    13c0:	32 fc       	sbrc	r3, 2
    13c2:	09 c0       	rjmp	.+18     	; 0x13d6 <__stack+0x2d7>
    13c4:	83 2d       	mov	r24, r3
    13c6:	8e 7e       	andi	r24, 0xEE	; 238
    13c8:	a8 2e       	mov	r10, r24
    13ca:	05 c0       	rjmp	.+10     	; 0x13d6 <__stack+0x2d7>
    13cc:	b8 2c       	mov	r11, r8
    13ce:	a3 2c       	mov	r10, r3
    13d0:	03 c0       	rjmp	.+6      	; 0x13d8 <__stack+0x2d9>
    13d2:	b8 2c       	mov	r11, r8
    13d4:	01 c0       	rjmp	.+2      	; 0x13d8 <__stack+0x2d9>
    13d6:	b9 2c       	mov	r11, r9
    13d8:	a4 fe       	sbrs	r10, 4
    13da:	0f c0       	rjmp	.+30     	; 0x13fa <__stack+0x2fb>
    13dc:	fe 01       	movw	r30, r28
    13de:	e8 0d       	add	r30, r8
    13e0:	f1 1d       	adc	r31, r1
    13e2:	80 81       	ld	r24, Z
    13e4:	80 33       	cpi	r24, 0x30	; 48
    13e6:	21 f4       	brne	.+8      	; 0x13f0 <__stack+0x2f1>
    13e8:	9a 2d       	mov	r25, r10
    13ea:	99 7e       	andi	r25, 0xE9	; 233
    13ec:	a9 2e       	mov	r10, r25
    13ee:	09 c0       	rjmp	.+18     	; 0x1402 <__stack+0x303>
    13f0:	a2 fe       	sbrs	r10, 2
    13f2:	06 c0       	rjmp	.+12     	; 0x1400 <__stack+0x301>
    13f4:	b3 94       	inc	r11
    13f6:	b3 94       	inc	r11
    13f8:	04 c0       	rjmp	.+8      	; 0x1402 <__stack+0x303>
    13fa:	8a 2d       	mov	r24, r10
    13fc:	86 78       	andi	r24, 0x86	; 134
    13fe:	09 f0       	breq	.+2      	; 0x1402 <__stack+0x303>
    1400:	b3 94       	inc	r11
    1402:	a3 fc       	sbrc	r10, 3
    1404:	10 c0       	rjmp	.+32     	; 0x1426 <__stack+0x327>
    1406:	a0 fe       	sbrs	r10, 0
    1408:	06 c0       	rjmp	.+12     	; 0x1416 <__stack+0x317>
    140a:	b2 14       	cp	r11, r2
    140c:	80 f4       	brcc	.+32     	; 0x142e <__stack+0x32f>
    140e:	28 0c       	add	r2, r8
    1410:	92 2c       	mov	r9, r2
    1412:	9b 18       	sub	r9, r11
    1414:	0d c0       	rjmp	.+26     	; 0x1430 <__stack+0x331>
    1416:	b2 14       	cp	r11, r2
    1418:	58 f4       	brcc	.+22     	; 0x1430 <__stack+0x331>
    141a:	b6 01       	movw	r22, r12
    141c:	80 e2       	ldi	r24, 0x20	; 32
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	76 d0       	rcall	.+236    	; 0x150e <fputc>
    1422:	b3 94       	inc	r11
    1424:	f8 cf       	rjmp	.-16     	; 0x1416 <__stack+0x317>
    1426:	b2 14       	cp	r11, r2
    1428:	18 f4       	brcc	.+6      	; 0x1430 <__stack+0x331>
    142a:	2b 18       	sub	r2, r11
    142c:	02 c0       	rjmp	.+4      	; 0x1432 <__stack+0x333>
    142e:	98 2c       	mov	r9, r8
    1430:	21 2c       	mov	r2, r1
    1432:	a4 fe       	sbrs	r10, 4
    1434:	0f c0       	rjmp	.+30     	; 0x1454 <__stack+0x355>
    1436:	b6 01       	movw	r22, r12
    1438:	80 e3       	ldi	r24, 0x30	; 48
    143a:	90 e0       	ldi	r25, 0x00	; 0
    143c:	68 d0       	rcall	.+208    	; 0x150e <fputc>
    143e:	a2 fe       	sbrs	r10, 2
    1440:	16 c0       	rjmp	.+44     	; 0x146e <__stack+0x36f>
    1442:	a1 fc       	sbrc	r10, 1
    1444:	03 c0       	rjmp	.+6      	; 0x144c <__stack+0x34d>
    1446:	88 e7       	ldi	r24, 0x78	; 120
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	02 c0       	rjmp	.+4      	; 0x1450 <__stack+0x351>
    144c:	88 e5       	ldi	r24, 0x58	; 88
    144e:	90 e0       	ldi	r25, 0x00	; 0
    1450:	b6 01       	movw	r22, r12
    1452:	0c c0       	rjmp	.+24     	; 0x146c <__stack+0x36d>
    1454:	8a 2d       	mov	r24, r10
    1456:	86 78       	andi	r24, 0x86	; 134
    1458:	51 f0       	breq	.+20     	; 0x146e <__stack+0x36f>
    145a:	a1 fe       	sbrs	r10, 1
    145c:	02 c0       	rjmp	.+4      	; 0x1462 <__stack+0x363>
    145e:	8b e2       	ldi	r24, 0x2B	; 43
    1460:	01 c0       	rjmp	.+2      	; 0x1464 <__stack+0x365>
    1462:	80 e2       	ldi	r24, 0x20	; 32
    1464:	a7 fc       	sbrc	r10, 7
    1466:	8d e2       	ldi	r24, 0x2D	; 45
    1468:	b6 01       	movw	r22, r12
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	50 d0       	rcall	.+160    	; 0x150e <fputc>
    146e:	89 14       	cp	r8, r9
    1470:	30 f4       	brcc	.+12     	; 0x147e <__stack+0x37f>
    1472:	b6 01       	movw	r22, r12
    1474:	80 e3       	ldi	r24, 0x30	; 48
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	4a d0       	rcall	.+148    	; 0x150e <fputc>
    147a:	9a 94       	dec	r9
    147c:	f8 cf       	rjmp	.-16     	; 0x146e <__stack+0x36f>
    147e:	8a 94       	dec	r8
    1480:	f3 01       	movw	r30, r6
    1482:	e8 0d       	add	r30, r8
    1484:	f1 1d       	adc	r31, r1
    1486:	80 81       	ld	r24, Z
    1488:	b6 01       	movw	r22, r12
    148a:	90 e0       	ldi	r25, 0x00	; 0
    148c:	40 d0       	rcall	.+128    	; 0x150e <fputc>
    148e:	81 10       	cpse	r8, r1
    1490:	f6 cf       	rjmp	.-20     	; 0x147e <__stack+0x37f>
    1492:	22 20       	and	r2, r2
    1494:	09 f4       	brne	.+2      	; 0x1498 <__stack+0x399>
    1496:	4e ce       	rjmp	.-868    	; 0x1134 <__stack+0x35>
    1498:	b6 01       	movw	r22, r12
    149a:	80 e2       	ldi	r24, 0x20	; 32
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	37 d0       	rcall	.+110    	; 0x150e <fputc>
    14a0:	2a 94       	dec	r2
    14a2:	f7 cf       	rjmp	.-18     	; 0x1492 <__stack+0x393>
    14a4:	f6 01       	movw	r30, r12
    14a6:	86 81       	ldd	r24, Z+6	; 0x06
    14a8:	97 81       	ldd	r25, Z+7	; 0x07
    14aa:	02 c0       	rjmp	.+4      	; 0x14b0 <__stack+0x3b1>
    14ac:	8f ef       	ldi	r24, 0xFF	; 255
    14ae:	9f ef       	ldi	r25, 0xFF	; 255
    14b0:	2b 96       	adiw	r28, 0x0b	; 11
    14b2:	0f b6       	in	r0, 0x3f	; 63
    14b4:	f8 94       	cli
    14b6:	de bf       	out	0x3e, r29	; 62
    14b8:	0f be       	out	0x3f, r0	; 63
    14ba:	cd bf       	out	0x3d, r28	; 61
    14bc:	df 91       	pop	r29
    14be:	cf 91       	pop	r28
    14c0:	1f 91       	pop	r17
    14c2:	0f 91       	pop	r16
    14c4:	ff 90       	pop	r15
    14c6:	ef 90       	pop	r14
    14c8:	df 90       	pop	r13
    14ca:	cf 90       	pop	r12
    14cc:	bf 90       	pop	r11
    14ce:	af 90       	pop	r10
    14d0:	9f 90       	pop	r9
    14d2:	8f 90       	pop	r8
    14d4:	7f 90       	pop	r7
    14d6:	6f 90       	pop	r6
    14d8:	5f 90       	pop	r5
    14da:	4f 90       	pop	r4
    14dc:	3f 90       	pop	r3
    14de:	2f 90       	pop	r2
    14e0:	08 95       	ret

000014e2 <strnlen_P>:
    14e2:	fc 01       	movw	r30, r24
    14e4:	05 90       	lpm	r0, Z+
    14e6:	61 50       	subi	r22, 0x01	; 1
    14e8:	70 40       	sbci	r23, 0x00	; 0
    14ea:	01 10       	cpse	r0, r1
    14ec:	d8 f7       	brcc	.-10     	; 0x14e4 <strnlen_P+0x2>
    14ee:	80 95       	com	r24
    14f0:	90 95       	com	r25
    14f2:	8e 0f       	add	r24, r30
    14f4:	9f 1f       	adc	r25, r31
    14f6:	08 95       	ret

000014f8 <strnlen>:
    14f8:	fc 01       	movw	r30, r24
    14fa:	61 50       	subi	r22, 0x01	; 1
    14fc:	70 40       	sbci	r23, 0x00	; 0
    14fe:	01 90       	ld	r0, Z+
    1500:	01 10       	cpse	r0, r1
    1502:	d8 f7       	brcc	.-10     	; 0x14fa <strnlen+0x2>
    1504:	80 95       	com	r24
    1506:	90 95       	com	r25
    1508:	8e 0f       	add	r24, r30
    150a:	9f 1f       	adc	r25, r31
    150c:	08 95       	ret

0000150e <fputc>:
    150e:	0f 93       	push	r16
    1510:	1f 93       	push	r17
    1512:	cf 93       	push	r28
    1514:	df 93       	push	r29
    1516:	fb 01       	movw	r30, r22
    1518:	23 81       	ldd	r18, Z+3	; 0x03
    151a:	21 fd       	sbrc	r18, 1
    151c:	03 c0       	rjmp	.+6      	; 0x1524 <fputc+0x16>
    151e:	8f ef       	ldi	r24, 0xFF	; 255
    1520:	9f ef       	ldi	r25, 0xFF	; 255
    1522:	2c c0       	rjmp	.+88     	; 0x157c <fputc+0x6e>
    1524:	22 ff       	sbrs	r18, 2
    1526:	16 c0       	rjmp	.+44     	; 0x1554 <fputc+0x46>
    1528:	46 81       	ldd	r20, Z+6	; 0x06
    152a:	57 81       	ldd	r21, Z+7	; 0x07
    152c:	24 81       	ldd	r18, Z+4	; 0x04
    152e:	35 81       	ldd	r19, Z+5	; 0x05
    1530:	42 17       	cp	r20, r18
    1532:	53 07       	cpc	r21, r19
    1534:	44 f4       	brge	.+16     	; 0x1546 <fputc+0x38>
    1536:	a0 81       	ld	r26, Z
    1538:	b1 81       	ldd	r27, Z+1	; 0x01
    153a:	9d 01       	movw	r18, r26
    153c:	2f 5f       	subi	r18, 0xFF	; 255
    153e:	3f 4f       	sbci	r19, 0xFF	; 255
    1540:	31 83       	std	Z+1, r19	; 0x01
    1542:	20 83       	st	Z, r18
    1544:	8c 93       	st	X, r24
    1546:	26 81       	ldd	r18, Z+6	; 0x06
    1548:	37 81       	ldd	r19, Z+7	; 0x07
    154a:	2f 5f       	subi	r18, 0xFF	; 255
    154c:	3f 4f       	sbci	r19, 0xFF	; 255
    154e:	37 83       	std	Z+7, r19	; 0x07
    1550:	26 83       	std	Z+6, r18	; 0x06
    1552:	14 c0       	rjmp	.+40     	; 0x157c <fputc+0x6e>
    1554:	8b 01       	movw	r16, r22
    1556:	ec 01       	movw	r28, r24
    1558:	fb 01       	movw	r30, r22
    155a:	00 84       	ldd	r0, Z+8	; 0x08
    155c:	f1 85       	ldd	r31, Z+9	; 0x09
    155e:	e0 2d       	mov	r30, r0
    1560:	09 95       	icall
    1562:	89 2b       	or	r24, r25
    1564:	e1 f6       	brne	.-72     	; 0x151e <fputc+0x10>
    1566:	d8 01       	movw	r26, r16
    1568:	16 96       	adiw	r26, 0x06	; 6
    156a:	8d 91       	ld	r24, X+
    156c:	9c 91       	ld	r25, X
    156e:	17 97       	sbiw	r26, 0x07	; 7
    1570:	01 96       	adiw	r24, 0x01	; 1
    1572:	17 96       	adiw	r26, 0x07	; 7
    1574:	9c 93       	st	X, r25
    1576:	8e 93       	st	-X, r24
    1578:	16 97       	sbiw	r26, 0x06	; 6
    157a:	ce 01       	movw	r24, r28
    157c:	df 91       	pop	r29
    157e:	cf 91       	pop	r28
    1580:	1f 91       	pop	r17
    1582:	0f 91       	pop	r16
    1584:	08 95       	ret

00001586 <__ultoa_invert>:
    1586:	fa 01       	movw	r30, r20
    1588:	aa 27       	eor	r26, r26
    158a:	28 30       	cpi	r18, 0x08	; 8
    158c:	51 f1       	breq	.+84     	; 0x15e2 <__ultoa_invert+0x5c>
    158e:	20 31       	cpi	r18, 0x10	; 16
    1590:	81 f1       	breq	.+96     	; 0x15f2 <__ultoa_invert+0x6c>
    1592:	e8 94       	clt
    1594:	6f 93       	push	r22
    1596:	6e 7f       	andi	r22, 0xFE	; 254
    1598:	6e 5f       	subi	r22, 0xFE	; 254
    159a:	7f 4f       	sbci	r23, 0xFF	; 255
    159c:	8f 4f       	sbci	r24, 0xFF	; 255
    159e:	9f 4f       	sbci	r25, 0xFF	; 255
    15a0:	af 4f       	sbci	r26, 0xFF	; 255
    15a2:	b1 e0       	ldi	r27, 0x01	; 1
    15a4:	3e d0       	rcall	.+124    	; 0x1622 <__ultoa_invert+0x9c>
    15a6:	b4 e0       	ldi	r27, 0x04	; 4
    15a8:	3c d0       	rcall	.+120    	; 0x1622 <__ultoa_invert+0x9c>
    15aa:	67 0f       	add	r22, r23
    15ac:	78 1f       	adc	r23, r24
    15ae:	89 1f       	adc	r24, r25
    15b0:	9a 1f       	adc	r25, r26
    15b2:	a1 1d       	adc	r26, r1
    15b4:	68 0f       	add	r22, r24
    15b6:	79 1f       	adc	r23, r25
    15b8:	8a 1f       	adc	r24, r26
    15ba:	91 1d       	adc	r25, r1
    15bc:	a1 1d       	adc	r26, r1
    15be:	6a 0f       	add	r22, r26
    15c0:	71 1d       	adc	r23, r1
    15c2:	81 1d       	adc	r24, r1
    15c4:	91 1d       	adc	r25, r1
    15c6:	a1 1d       	adc	r26, r1
    15c8:	20 d0       	rcall	.+64     	; 0x160a <__ultoa_invert+0x84>
    15ca:	09 f4       	brne	.+2      	; 0x15ce <__ultoa_invert+0x48>
    15cc:	68 94       	set
    15ce:	3f 91       	pop	r19
    15d0:	2a e0       	ldi	r18, 0x0A	; 10
    15d2:	26 9f       	mul	r18, r22
    15d4:	11 24       	eor	r1, r1
    15d6:	30 19       	sub	r19, r0
    15d8:	30 5d       	subi	r19, 0xD0	; 208
    15da:	31 93       	st	Z+, r19
    15dc:	de f6       	brtc	.-74     	; 0x1594 <__ultoa_invert+0xe>
    15de:	cf 01       	movw	r24, r30
    15e0:	08 95       	ret
    15e2:	46 2f       	mov	r20, r22
    15e4:	47 70       	andi	r20, 0x07	; 7
    15e6:	40 5d       	subi	r20, 0xD0	; 208
    15e8:	41 93       	st	Z+, r20
    15ea:	b3 e0       	ldi	r27, 0x03	; 3
    15ec:	0f d0       	rcall	.+30     	; 0x160c <__ultoa_invert+0x86>
    15ee:	c9 f7       	brne	.-14     	; 0x15e2 <__ultoa_invert+0x5c>
    15f0:	f6 cf       	rjmp	.-20     	; 0x15de <__ultoa_invert+0x58>
    15f2:	46 2f       	mov	r20, r22
    15f4:	4f 70       	andi	r20, 0x0F	; 15
    15f6:	40 5d       	subi	r20, 0xD0	; 208
    15f8:	4a 33       	cpi	r20, 0x3A	; 58
    15fa:	18 f0       	brcs	.+6      	; 0x1602 <__ultoa_invert+0x7c>
    15fc:	49 5d       	subi	r20, 0xD9	; 217
    15fe:	31 fd       	sbrc	r19, 1
    1600:	40 52       	subi	r20, 0x20	; 32
    1602:	41 93       	st	Z+, r20
    1604:	02 d0       	rcall	.+4      	; 0x160a <__ultoa_invert+0x84>
    1606:	a9 f7       	brne	.-22     	; 0x15f2 <__ultoa_invert+0x6c>
    1608:	ea cf       	rjmp	.-44     	; 0x15de <__ultoa_invert+0x58>
    160a:	b4 e0       	ldi	r27, 0x04	; 4
    160c:	a6 95       	lsr	r26
    160e:	97 95       	ror	r25
    1610:	87 95       	ror	r24
    1612:	77 95       	ror	r23
    1614:	67 95       	ror	r22
    1616:	ba 95       	dec	r27
    1618:	c9 f7       	brne	.-14     	; 0x160c <__ultoa_invert+0x86>
    161a:	00 97       	sbiw	r24, 0x00	; 0
    161c:	61 05       	cpc	r22, r1
    161e:	71 05       	cpc	r23, r1
    1620:	08 95       	ret
    1622:	9b 01       	movw	r18, r22
    1624:	ac 01       	movw	r20, r24
    1626:	0a 2e       	mov	r0, r26
    1628:	06 94       	lsr	r0
    162a:	57 95       	ror	r21
    162c:	47 95       	ror	r20
    162e:	37 95       	ror	r19
    1630:	27 95       	ror	r18
    1632:	ba 95       	dec	r27
    1634:	c9 f7       	brne	.-14     	; 0x1628 <__ultoa_invert+0xa2>
    1636:	62 0f       	add	r22, r18
    1638:	73 1f       	adc	r23, r19
    163a:	84 1f       	adc	r24, r20
    163c:	95 1f       	adc	r25, r21
    163e:	a0 1d       	adc	r26, r0
    1640:	08 95       	ret

00001642 <_exit>:
    1642:	f8 94       	cli

00001644 <__stop_program>:
    1644:	ff cf       	rjmp	.-2      	; 0x1644 <__stop_program>
