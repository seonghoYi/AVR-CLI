
AVR-CLI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000062  00800100  0000162c  000016c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000162c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000226  00800162  00800162  00001722  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001722  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001780  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000230  00000000  00000000  000017bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000218d  00000000  00000000  000019ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001111  00000000  00000000  00003b79  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001084  00000000  00000000  00004c8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005ac  00000000  00000000  00005d10  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000922  00000000  00000000  000062bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001620  00000000  00000000  00006bde  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  000081fe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	83 c0       	rjmp	.+262    	; 0x150 <__vector_18>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	a8 c0       	rjmp	.+336    	; 0x1a2 <__vector_20>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ec e2       	ldi	r30, 0x2C	; 44
      a0:	f6 e1       	ldi	r31, 0x16	; 22
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a2 36       	cpi	r26, 0x62	; 98
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	23 e0       	ldi	r18, 0x03	; 3
      b4:	a2 e6       	ldi	r26, 0x62	; 98
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a8 38       	cpi	r26, 0x88	; 136
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	1e d6       	rcall	.+3132   	; 0xd00 <main>
      c4:	0c 94 14 0b 	jmp	0x1628	; 0x1628 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <apInit>:
ï»¿#include "ap.h"

void apInit(void)
{
	uartOpen(_DEF_UART0, 115200);
      ca:	40 e0       	ldi	r20, 0x00	; 0
      cc:	52 ec       	ldi	r21, 0xC2	; 194
      ce:	61 e0       	ldi	r22, 0x01	; 1
      d0:	70 e0       	ldi	r23, 0x00	; 0
      d2:	80 e0       	ldi	r24, 0x00	; 0
      d4:	f9 d1       	rcall	.+1010   	; 0x4c8 <uartOpen>
	
	sei();
      d6:	78 94       	sei
      d8:	08 95       	ret

000000da <apMain>:


void apMain(void)
{
	//char *str = "Hello, World!";
	char input = 0;
      da:	f1 2c       	mov	r15, r1
		_delay_ms(500);
		*/
		
		//uartPrintf(_DEF_UART0, "uart0 : %s\n", str);
		//gpioPinToggle(_DEF_GPIO0);
		uartPrintf(_DEF_UART0, "available : %d\n", input, uartAvailable(_DEF_UART0));
      dc:	c2 e5       	ldi	r28, 0x52	; 82
      de:	d1 e0       	ldi	r29, 0x01	; 1
		if (uartAvailable(_DEF_UART0) > 0)
		{
			gpioPinWrite(_DEF_GPIO0, true);
			input = uartRead(_DEF_UART0);
			uartPrintf(_DEF_UART0, "echo : %c, available : %d\n", input, uartAvailable(_DEF_UART0));
      e0:	07 e4       	ldi	r16, 0x47	; 71
      e2:	11 e0       	ldi	r17, 0x01	; 1
		_delay_ms(500);
		*/
		
		//uartPrintf(_DEF_UART0, "uart0 : %s\n", str);
		//gpioPinToggle(_DEF_GPIO0);
		uartPrintf(_DEF_UART0, "available : %d\n", input, uartAvailable(_DEF_UART0));
      e4:	80 e0       	ldi	r24, 0x00	; 0
      e6:	1a d2       	rcall	.+1076   	; 0x51c <uartAvailable>
      e8:	9f 93       	push	r25
      ea:	8f 93       	push	r24
      ec:	7f 93       	push	r23
      ee:	6f 93       	push	r22
      f0:	1f 92       	push	r1
      f2:	ff 92       	push	r15
      f4:	df 93       	push	r29
      f6:	cf 93       	push	r28
      f8:	1f 92       	push	r1
      fa:	56 d2       	rcall	.+1196   	; 0x5a8 <uartPrintf>
		if (uartAvailable(_DEF_UART0) > 0)
      fc:	80 e0       	ldi	r24, 0x00	; 0
      fe:	0e d2       	rcall	.+1052   	; 0x51c <uartAvailable>
     100:	2d b7       	in	r18, 0x3d	; 61
     102:	3e b7       	in	r19, 0x3e	; 62
     104:	27 5f       	subi	r18, 0xF7	; 247
     106:	3f 4f       	sbci	r19, 0xFF	; 255
     108:	0f b6       	in	r0, 0x3f	; 63
     10a:	f8 94       	cli
     10c:	3e bf       	out	0x3e, r19	; 62
     10e:	0f be       	out	0x3f, r0	; 63
     110:	2d bf       	out	0x3d, r18	; 61
     112:	67 2b       	or	r22, r23
     114:	68 2b       	or	r22, r24
     116:	69 2b       	or	r22, r25
     118:	29 f3       	breq	.-54     	; 0xe4 <apMain+0xa>
		{
			gpioPinWrite(_DEF_GPIO0, true);
     11a:	61 e0       	ldi	r22, 0x01	; 1
     11c:	80 e0       	ldi	r24, 0x00	; 0
     11e:	c0 d1       	rcall	.+896    	; 0x4a0 <gpioPinWrite>
			input = uartRead(_DEF_UART0);
     120:	80 e0       	ldi	r24, 0x00	; 0
     122:	06 d2       	rcall	.+1036   	; 0x530 <uartRead>
     124:	f8 2e       	mov	r15, r24
			uartPrintf(_DEF_UART0, "echo : %c, available : %d\n", input, uartAvailable(_DEF_UART0));
     126:	80 e0       	ldi	r24, 0x00	; 0
     128:	f9 d1       	rcall	.+1010   	; 0x51c <uartAvailable>
     12a:	9f 93       	push	r25
     12c:	8f 93       	push	r24
     12e:	7f 93       	push	r23
     130:	6f 93       	push	r22
     132:	1f 92       	push	r1
     134:	ff 92       	push	r15
     136:	1f 93       	push	r17
     138:	0f 93       	push	r16
     13a:	1f 92       	push	r1
     13c:	35 d2       	rcall	.+1130   	; 0x5a8 <uartPrintf>
     13e:	8d b7       	in	r24, 0x3d	; 61
     140:	9e b7       	in	r25, 0x3e	; 62
     142:	09 96       	adiw	r24, 0x09	; 9
     144:	0f b6       	in	r0, 0x3f	; 63
     146:	f8 94       	cli
     148:	9e bf       	out	0x3e, r25	; 62
     14a:	0f be       	out	0x3f, r0	; 63
     14c:	8d bf       	out	0x3d, r24	; 61
     14e:	ca cf       	rjmp	.-108    	; 0xe4 <apMain+0xa>

00000150 <__vector_18>:

extern UART_HandleTypeDef huart1;


ISR(USART0_RX_vect)
{
     150:	1f 92       	push	r1
     152:	0f 92       	push	r0
     154:	0f b6       	in	r0, 0x3f	; 63
     156:	0f 92       	push	r0
     158:	11 24       	eor	r1, r1
     15a:	0b b6       	in	r0, 0x3b	; 59
     15c:	0f 92       	push	r0
     15e:	2f 93       	push	r18
     160:	3f 93       	push	r19
     162:	4f 93       	push	r20
     164:	5f 93       	push	r21
     166:	6f 93       	push	r22
     168:	7f 93       	push	r23
     16a:	8f 93       	push	r24
     16c:	9f 93       	push	r25
     16e:	af 93       	push	r26
     170:	bf 93       	push	r27
     172:	ef 93       	push	r30
     174:	ff 93       	push	r31
	UART_RxIRQHandler(&huart1);
     176:	81 e7       	ldi	r24, 0x71	; 113
     178:	93 e0       	ldi	r25, 0x03	; 3
     17a:	ad d5       	rcall	.+2906   	; 0xcd6 <UART_RxIRQHandler>
}
     17c:	ff 91       	pop	r31
     17e:	ef 91       	pop	r30
     180:	bf 91       	pop	r27
     182:	af 91       	pop	r26
     184:	9f 91       	pop	r25
     186:	8f 91       	pop	r24
     188:	7f 91       	pop	r23
     18a:	6f 91       	pop	r22
     18c:	5f 91       	pop	r21
     18e:	4f 91       	pop	r20
     190:	3f 91       	pop	r19
     192:	2f 91       	pop	r18
     194:	0f 90       	pop	r0
     196:	0b be       	out	0x3b, r0	; 59
     198:	0f 90       	pop	r0
     19a:	0f be       	out	0x3f, r0	; 63
     19c:	0f 90       	pop	r0
     19e:	1f 90       	pop	r1
     1a0:	18 95       	reti

000001a2 <__vector_20>:

ISR(USART0_TX_vect)
{
     1a2:	1f 92       	push	r1
     1a4:	0f 92       	push	r0
     1a6:	0f b6       	in	r0, 0x3f	; 63
     1a8:	0f 92       	push	r0
     1aa:	11 24       	eor	r1, r1
     1ac:	0b b6       	in	r0, 0x3b	; 59
     1ae:	0f 92       	push	r0
     1b0:	2f 93       	push	r18
     1b2:	3f 93       	push	r19
     1b4:	4f 93       	push	r20
     1b6:	5f 93       	push	r21
     1b8:	6f 93       	push	r22
     1ba:	7f 93       	push	r23
     1bc:	8f 93       	push	r24
     1be:	9f 93       	push	r25
     1c0:	af 93       	push	r26
     1c2:	bf 93       	push	r27
     1c4:	ef 93       	push	r30
     1c6:	ff 93       	push	r31
	UART_TxIRQHandler(&huart1);
     1c8:	81 e7       	ldi	r24, 0x71	; 113
     1ca:	93 e0       	ldi	r25, 0x03	; 3
     1cc:	82 d5       	rcall	.+2820   	; 0xcd2 <UART_TxIRQHandler>
}
     1ce:	ff 91       	pop	r31
     1d0:	ef 91       	pop	r30
     1d2:	bf 91       	pop	r27
     1d4:	af 91       	pop	r26
     1d6:	9f 91       	pop	r25
     1d8:	8f 91       	pop	r24
     1da:	7f 91       	pop	r23
     1dc:	6f 91       	pop	r22
     1de:	5f 91       	pop	r21
     1e0:	4f 91       	pop	r20
     1e2:	3f 91       	pop	r19
     1e4:	2f 91       	pop	r18
     1e6:	0f 90       	pop	r0
     1e8:	0b be       	out	0x3b, r0	; 59
     1ea:	0f 90       	pop	r0
     1ec:	0f be       	out	0x3f, r0	; 63
     1ee:	0f 90       	pop	r0
     1f0:	1f 90       	pop	r1
     1f2:	18 95       	reti

000001f4 <bspInit>:
ï»¿#include "bsp.h"


void bspInit(void)
{
     1f4:	08 95       	ret

000001f6 <qbufferCreate>:
{

}

bool qbufferCreate(qbuffer_t *p_node, uint8_t *p_buf, uint32_t length)
{
     1f6:	fc 01       	movw	r30, r24
	bool ret = true;

	p_node->in    = 0;
     1f8:	10 82       	st	Z, r1
     1fa:	11 82       	std	Z+1, r1	; 0x01
     1fc:	12 82       	std	Z+2, r1	; 0x02
     1fe:	13 82       	std	Z+3, r1	; 0x03
	p_node->out   = 0;
     200:	14 82       	std	Z+4, r1	; 0x04
     202:	15 82       	std	Z+5, r1	; 0x05
     204:	16 82       	std	Z+6, r1	; 0x06
     206:	17 82       	std	Z+7, r1	; 0x07
	p_node->len   = length;
     208:	20 87       	std	Z+8, r18	; 0x08
     20a:	31 87       	std	Z+9, r19	; 0x09
     20c:	42 87       	std	Z+10, r20	; 0x0a
     20e:	53 87       	std	Z+11, r21	; 0x0b
	p_node->p_buf = p_buf;
     210:	75 87       	std	Z+13, r23	; 0x0d
     212:	64 87       	std	Z+12, r22	; 0x0c

	return ret;
}
     214:	81 e0       	ldi	r24, 0x01	; 1
     216:	08 95       	ret

00000218 <qbufferWrite>:

bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
     218:	4f 92       	push	r4
     21a:	5f 92       	push	r5
     21c:	6f 92       	push	r6
     21e:	7f 92       	push	r7
     220:	af 92       	push	r10
     222:	bf 92       	push	r11
     224:	cf 92       	push	r12
     226:	df 92       	push	r13
     228:	ef 92       	push	r14
     22a:	ff 92       	push	r15
     22c:	0f 93       	push	r16
     22e:	1f 93       	push	r17
     230:	cf 93       	push	r28
     232:	df 93       	push	r29
     234:	00 d0       	rcall	.+0      	; 0x236 <qbufferWrite+0x1e>
     236:	00 d0       	rcall	.+0      	; 0x238 <qbufferWrite+0x20>
     238:	00 d0       	rcall	.+0      	; 0x23a <qbufferWrite+0x22>
     23a:	cd b7       	in	r28, 0x3d	; 61
     23c:	de b7       	in	r29, 0x3e	; 62
     23e:	9e 83       	std	Y+6, r25	; 0x06
     240:	8d 83       	std	Y+5, r24	; 0x05
     242:	06 2f       	mov	r16, r22
     244:	17 2f       	mov	r17, r23
     246:	29 01       	movw	r4, r18
     248:	3a 01       	movw	r6, r20
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
     24a:	23 2b       	or	r18, r19
     24c:	24 2b       	or	r18, r20
     24e:	25 2b       	or	r18, r21
     250:	09 f4       	brne	.+2      	; 0x254 <qbufferWrite+0x3c>
     252:	70 c0       	rjmp	.+224    	; 0x334 <qbufferWrite+0x11c>
	{
		next_in = (p_node->in + 1) %p_node->len;
     254:	dc 01       	movw	r26, r24
     256:	8d 91       	ld	r24, X+
     258:	9d 91       	ld	r25, X+
     25a:	0d 90       	ld	r0, X+
     25c:	bc 91       	ld	r27, X
     25e:	a0 2d       	mov	r26, r0
     260:	89 83       	std	Y+1, r24	; 0x01
     262:	9a 83       	std	Y+2, r25	; 0x02
     264:	ab 83       	std	Y+3, r26	; 0x03
     266:	bc 83       	std	Y+4, r27	; 0x04
     268:	bc 01       	movw	r22, r24
     26a:	cd 01       	movw	r24, r26
     26c:	6f 5f       	subi	r22, 0xFF	; 255
     26e:	7f 4f       	sbci	r23, 0xFF	; 255
     270:	8f 4f       	sbci	r24, 0xFF	; 255
     272:	9f 4f       	sbci	r25, 0xFF	; 255
     274:	ed 81       	ldd	r30, Y+5	; 0x05
     276:	fe 81       	ldd	r31, Y+6	; 0x06
     278:	20 85       	ldd	r18, Z+8	; 0x08
     27a:	31 85       	ldd	r19, Z+9	; 0x09
     27c:	42 85       	ldd	r20, Z+10	; 0x0a
     27e:	53 85       	ldd	r21, Z+11	; 0x0b
     280:	cc d6       	rcall	.+3480   	; 0x101a <__udivmodsi4>
     282:	6b 01       	movw	r12, r22
     284:	7c 01       	movw	r14, r24

		if (next_in != p_node->out)
     286:	ed 81       	ldd	r30, Y+5	; 0x05
     288:	fe 81       	ldd	r31, Y+6	; 0x06
     28a:	84 81       	ldd	r24, Z+4	; 0x04
     28c:	95 81       	ldd	r25, Z+5	; 0x05
     28e:	a6 81       	ldd	r26, Z+6	; 0x06
     290:	b7 81       	ldd	r27, Z+7	; 0x07
     292:	c8 16       	cp	r12, r24
     294:	d9 06       	cpc	r13, r25
     296:	ea 06       	cpc	r14, r26
     298:	fb 06       	cpc	r15, r27
     29a:	09 f4       	brne	.+2      	; 0x29e <qbufferWrite+0x86>
     29c:	4b c0       	rjmp	.+150    	; 0x334 <qbufferWrite+0x11c>
     29e:	a0 2e       	mov	r10, r16
     2a0:	b1 2e       	mov	r11, r17
     2a2:	00 e0       	ldi	r16, 0x00	; 0
     2a4:	10 e0       	ldi	r17, 0x00	; 0
     2a6:	23 c0       	rjmp	.+70     	; 0x2ee <qbufferWrite+0xd6>
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
	{
		next_in = (p_node->in + 1) %p_node->len;
     2a8:	c7 01       	movw	r24, r14
     2aa:	b6 01       	movw	r22, r12
     2ac:	6f 5f       	subi	r22, 0xFF	; 255
     2ae:	7f 4f       	sbci	r23, 0xFF	; 255
     2b0:	8f 4f       	sbci	r24, 0xFF	; 255
     2b2:	9f 4f       	sbci	r25, 0xFF	; 255
     2b4:	ad 81       	ldd	r26, Y+5	; 0x05
     2b6:	be 81       	ldd	r27, Y+6	; 0x06
     2b8:	18 96       	adiw	r26, 0x08	; 8
     2ba:	2d 91       	ld	r18, X+
     2bc:	3d 91       	ld	r19, X+
     2be:	4d 91       	ld	r20, X+
     2c0:	5c 91       	ld	r21, X
     2c2:	1b 97       	sbiw	r26, 0x0b	; 11
     2c4:	aa d6       	rcall	.+3412   	; 0x101a <__udivmodsi4>
     2c6:	bf ef       	ldi	r27, 0xFF	; 255
     2c8:	ab 1a       	sub	r10, r27
     2ca:	bb 0a       	sbc	r11, r27
     2cc:	c9 82       	std	Y+1, r12	; 0x01
     2ce:	da 82       	std	Y+2, r13	; 0x02
     2d0:	eb 82       	std	Y+3, r14	; 0x03
     2d2:	fc 82       	std	Y+4, r15	; 0x04

		if (next_in != p_node->out)
     2d4:	ed 81       	ldd	r30, Y+5	; 0x05
     2d6:	fe 81       	ldd	r31, Y+6	; 0x06
     2d8:	c4 80       	ldd	r12, Z+4	; 0x04
     2da:	d5 80       	ldd	r13, Z+5	; 0x05
     2dc:	e6 80       	ldd	r14, Z+6	; 0x06
     2de:	f7 80       	ldd	r15, Z+7	; 0x07
     2e0:	6c 15       	cp	r22, r12
     2e2:	7d 05       	cpc	r23, r13
     2e4:	8e 05       	cpc	r24, r14
     2e6:	9f 05       	cpc	r25, r15
     2e8:	29 f1       	breq	.+74     	; 0x334 <qbufferWrite+0x11c>
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
	{
		next_in = (p_node->in + 1) %p_node->len;
     2ea:	6b 01       	movw	r12, r22
     2ec:	7c 01       	movw	r14, r24

		if (next_in != p_node->out)
		{
			if (p_node->p_buf != NULL)
     2ee:	ad 81       	ldd	r26, Y+5	; 0x05
     2f0:	be 81       	ldd	r27, Y+6	; 0x06
     2f2:	1c 96       	adiw	r26, 0x0c	; 12
     2f4:	8d 91       	ld	r24, X+
     2f6:	9c 91       	ld	r25, X
     2f8:	1d 97       	sbiw	r26, 0x0d	; 13
     2fa:	00 97       	sbiw	r24, 0x00	; 0
     2fc:	39 f0       	breq	.+14     	; 0x30c <qbufferWrite+0xf4>
			{
				p_node->p_buf[p_node->in] = p_data[i];
     2fe:	f5 01       	movw	r30, r10
     300:	20 81       	ld	r18, Z
     302:	e9 81       	ldd	r30, Y+1	; 0x01
     304:	fa 81       	ldd	r31, Y+2	; 0x02
     306:	e8 0f       	add	r30, r24
     308:	f9 1f       	adc	r31, r25
     30a:	20 83       	st	Z, r18
			}
			p_node->in = next_in;
     30c:	ad 81       	ldd	r26, Y+5	; 0x05
     30e:	be 81       	ldd	r27, Y+6	; 0x06
     310:	cd 92       	st	X+, r12
     312:	dd 92       	st	X+, r13
     314:	ed 92       	st	X+, r14
     316:	fc 92       	st	X, r15
     318:	13 97       	sbiw	r26, 0x03	; 3
bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = 0;
	uint32_t next_in;

	for (int i=0; i<length; i++)
     31a:	0f 5f       	subi	r16, 0xFF	; 255
     31c:	1f 4f       	sbci	r17, 0xFF	; 255
     31e:	c8 01       	movw	r24, r16
     320:	01 2e       	mov	r0, r17
     322:	00 0c       	add	r0, r0
     324:	aa 0b       	sbc	r26, r26
     326:	bb 0b       	sbc	r27, r27
     328:	84 15       	cp	r24, r4
     32a:	95 05       	cpc	r25, r5
     32c:	a6 05       	cpc	r26, r6
     32e:	b7 05       	cpc	r27, r7
     330:	08 f4       	brcc	.+2      	; 0x334 <qbufferWrite+0x11c>
     332:	ba cf       	rjmp	.-140    	; 0x2a8 <qbufferWrite+0x90>
			ret = false;
			break;
		}
	}
	return ret;
}
     334:	80 e0       	ldi	r24, 0x00	; 0
     336:	26 96       	adiw	r28, 0x06	; 6
     338:	0f b6       	in	r0, 0x3f	; 63
     33a:	f8 94       	cli
     33c:	de bf       	out	0x3e, r29	; 62
     33e:	0f be       	out	0x3f, r0	; 63
     340:	cd bf       	out	0x3d, r28	; 61
     342:	df 91       	pop	r29
     344:	cf 91       	pop	r28
     346:	1f 91       	pop	r17
     348:	0f 91       	pop	r16
     34a:	ff 90       	pop	r15
     34c:	ef 90       	pop	r14
     34e:	df 90       	pop	r13
     350:	cf 90       	pop	r12
     352:	bf 90       	pop	r11
     354:	af 90       	pop	r10
     356:	7f 90       	pop	r7
     358:	6f 90       	pop	r6
     35a:	5f 90       	pop	r5
     35c:	4f 90       	pop	r4
     35e:	08 95       	ret

00000360 <qbufferRead>:


bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
     360:	4f 92       	push	r4
     362:	5f 92       	push	r5
     364:	6f 92       	push	r6
     366:	7f 92       	push	r7
     368:	8f 92       	push	r8
     36a:	9f 92       	push	r9
     36c:	af 92       	push	r10
     36e:	bf 92       	push	r11
     370:	ef 92       	push	r14
     372:	ff 92       	push	r15
     374:	0f 93       	push	r16
     376:	1f 93       	push	r17
     378:	cf 93       	push	r28
     37a:	df 93       	push	r29
     37c:	ec 01       	movw	r28, r24
     37e:	49 01       	movw	r8, r18
     380:	5a 01       	movw	r10, r20
	bool ret = true;

	for (int i=0; i<length; i++)
     382:	23 2b       	or	r18, r19
     384:	24 2b       	or	r18, r20
     386:	25 2b       	or	r18, r21
     388:	e1 f1       	breq	.+120    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     38a:	06 2f       	mov	r16, r22
     38c:	17 2f       	mov	r17, r23
     38e:	e1 2c       	mov	r14, r1
     390:	f1 2c       	mov	r15, r1
	{
		if (p_node->p_buf != NULL)
     392:	ec 85       	ldd	r30, Y+12	; 0x0c
     394:	fd 85       	ldd	r31, Y+13	; 0x0d
     396:	30 97       	sbiw	r30, 0x00	; 0
     398:	39 f0       	breq	.+14     	; 0x3a8 <qbufferRead+0x48>
		{
			p_data[i] = p_node->p_buf[p_node->out];
     39a:	8c 81       	ldd	r24, Y+4	; 0x04
     39c:	9d 81       	ldd	r25, Y+5	; 0x05
     39e:	e8 0f       	add	r30, r24
     3a0:	f9 1f       	adc	r31, r25
     3a2:	80 81       	ld	r24, Z
     3a4:	f8 01       	movw	r30, r16
     3a6:	80 83       	st	Z, r24
		}

		if (p_node->out != p_node->in)
     3a8:	8c 81       	ldd	r24, Y+4	; 0x04
     3aa:	9d 81       	ldd	r25, Y+5	; 0x05
     3ac:	ae 81       	ldd	r26, Y+6	; 0x06
     3ae:	bf 81       	ldd	r27, Y+7	; 0x07
     3b0:	48 80       	ld	r4, Y
     3b2:	59 80       	ldd	r5, Y+1	; 0x01
     3b4:	6a 80       	ldd	r6, Y+2	; 0x02
     3b6:	7b 80       	ldd	r7, Y+3	; 0x03
     3b8:	84 15       	cp	r24, r4
     3ba:	95 05       	cpc	r25, r5
     3bc:	a6 05       	cpc	r26, r6
     3be:	b7 05       	cpc	r27, r7
     3c0:	11 f1       	breq	.+68     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
		{
			p_node->out = (p_node->out + 1) % p_node->len;
     3c2:	bc 01       	movw	r22, r24
     3c4:	cd 01       	movw	r24, r26
     3c6:	6f 5f       	subi	r22, 0xFF	; 255
     3c8:	7f 4f       	sbci	r23, 0xFF	; 255
     3ca:	8f 4f       	sbci	r24, 0xFF	; 255
     3cc:	9f 4f       	sbci	r25, 0xFF	; 255
     3ce:	28 85       	ldd	r18, Y+8	; 0x08
     3d0:	39 85       	ldd	r19, Y+9	; 0x09
     3d2:	4a 85       	ldd	r20, Y+10	; 0x0a
     3d4:	5b 85       	ldd	r21, Y+11	; 0x0b
     3d6:	21 d6       	rcall	.+3138   	; 0x101a <__udivmodsi4>
     3d8:	6c 83       	std	Y+4, r22	; 0x04
     3da:	7d 83       	std	Y+5, r23	; 0x05
     3dc:	8e 83       	std	Y+6, r24	; 0x06
     3de:	9f 83       	std	Y+7, r25	; 0x07

bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;

	for (int i=0; i<length; i++)
     3e0:	ff ef       	ldi	r31, 0xFF	; 255
     3e2:	ef 1a       	sub	r14, r31
     3e4:	ff 0a       	sbc	r15, r31
     3e6:	0f 5f       	subi	r16, 0xFF	; 255
     3e8:	1f 4f       	sbci	r17, 0xFF	; 255
     3ea:	c7 01       	movw	r24, r14
     3ec:	0f 2c       	mov	r0, r15
     3ee:	00 0c       	add	r0, r0
     3f0:	aa 0b       	sbc	r26, r26
     3f2:	bb 0b       	sbc	r27, r27
     3f4:	88 15       	cp	r24, r8
     3f6:	99 05       	cpc	r25, r9
     3f8:	aa 05       	cpc	r26, r10
     3fa:	bb 05       	cpc	r27, r11
     3fc:	50 f2       	brcs	.-108    	; 0x392 <qbufferRead+0x32>
}


bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;
     3fe:	81 e0       	ldi	r24, 0x01	; 1
     400:	03 c0       	rjmp	.+6      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     402:	81 e0       	ldi	r24, 0x01	; 1
     404:	01 c0       	rjmp	.+2      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		{
			p_node->out = (p_node->out + 1) % p_node->len;
		}
		else
		{
			ret = false;
     406:	80 e0       	ldi	r24, 0x00	; 0
			break;
		}
	}
	return ret;
}
     408:	df 91       	pop	r29
     40a:	cf 91       	pop	r28
     40c:	1f 91       	pop	r17
     40e:	0f 91       	pop	r16
     410:	ff 90       	pop	r15
     412:	ef 90       	pop	r14
     414:	bf 90       	pop	r11
     416:	af 90       	pop	r10
     418:	9f 90       	pop	r9
     41a:	8f 90       	pop	r8
     41c:	7f 90       	pop	r7
     41e:	6f 90       	pop	r6
     420:	5f 90       	pop	r5
     422:	4f 90       	pop	r4
     424:	08 95       	ret

00000426 <qbufferAvailable>:

uint32_t qbufferAvailable(qbuffer_t *p_node)
{
     426:	0f 93       	push	r16
     428:	1f 93       	push	r17
     42a:	fc 01       	movw	r30, r24
	uint32_t ret;

	ret = (p_node->in - p_node->out) %p_node->len;

	return ret;
     42c:	80 81       	ld	r24, Z
     42e:	91 81       	ldd	r25, Z+1	; 0x01
     430:	a2 81       	ldd	r26, Z+2	; 0x02
     432:	b3 81       	ldd	r27, Z+3	; 0x03
     434:	04 81       	ldd	r16, Z+4	; 0x04
     436:	15 81       	ldd	r17, Z+5	; 0x05
     438:	26 81       	ldd	r18, Z+6	; 0x06
     43a:	37 81       	ldd	r19, Z+7	; 0x07
     43c:	bc 01       	movw	r22, r24
     43e:	cd 01       	movw	r24, r26
     440:	60 1b       	sub	r22, r16
     442:	71 0b       	sbc	r23, r17
     444:	82 0b       	sbc	r24, r18
     446:	93 0b       	sbc	r25, r19
     448:	20 85       	ldd	r18, Z+8	; 0x08
     44a:	31 85       	ldd	r19, Z+9	; 0x09
     44c:	42 85       	ldd	r20, Z+10	; 0x0a
     44e:	53 85       	ldd	r21, Z+11	; 0x0b
     450:	e4 d5       	rcall	.+3016   	; 0x101a <__udivmodsi4>
}
     452:	1f 91       	pop	r17
     454:	0f 91       	pop	r16
     456:	08 95       	ret

00000458 <gpioPinMode>:
	}
	return ret;
}

bool gpioPinMode(uint8_t ch, uint8_t mode)
{
     458:	cf 93       	push	r28
     45a:	df 93       	push	r29
     45c:	00 d0       	rcall	.+0      	; 0x45e <gpioPinMode+0x6>
     45e:	cd b7       	in	r28, 0x3d	; 61
     460:	de b7       	in	r29, 0x3e	; 62
	bool ret = false;
	
	GPIO_InitTypeDef GPIO_InitStruct = {0};
     462:	1a 82       	std	Y+2, r1	; 0x02
     464:	19 82       	std	Y+1, r1	; 0x01
	
	if (ch < 0 || ch >= GPIO_MAX_CH) return ret;
     466:	81 11       	cpse	r24, r1
     468:	0f c0       	rjmp	.+30     	; 0x488 <gpioPinMode+0x30>
	
	switch(mode)
     46a:	61 30       	cpi	r22, 0x01	; 1
     46c:	11 f4       	brne	.+4      	; 0x472 <gpioPinMode+0x1a>
		case _DEF_INPUT:
			GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
		break;
		
		case _DEF_OUTPUT:
			GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT;
     46e:	81 e0       	ldi	r24, 0x01	; 1
     470:	8a 83       	std	Y+2, r24	; 0x02
		break;
		default:
		break;
	}
	
	GPIO_InitStruct.Pin = gpio_tbl[ch].pin;
     472:	e0 e0       	ldi	r30, 0x00	; 0
     474:	f1 e0       	ldi	r31, 0x01	; 1
     476:	81 81       	ldd	r24, Z+1	; 0x01
     478:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Init(gpio_tbl[ch].port, &GPIO_InitStruct);
     47a:	be 01       	movw	r22, r28
     47c:	6f 5f       	subi	r22, 0xFF	; 255
     47e:	7f 4f       	sbci	r23, 0xFF	; 255
     480:	80 81       	ld	r24, Z
     482:	d3 d0       	rcall	.+422    	; 0x62a <GPIO_Init>
	ret = true;
	
	return ret;
     484:	81 e0       	ldi	r24, 0x01	; 1
     486:	01 c0       	rjmp	.+2      	; 0x48a <gpioPinMode+0x32>
{
	bool ret = false;
	
	GPIO_InitTypeDef GPIO_InitStruct = {0};
	
	if (ch < 0 || ch >= GPIO_MAX_CH) return ret;
     488:	80 e0       	ldi	r24, 0x00	; 0
	GPIO_InitStruct.Pin = gpio_tbl[ch].pin;
	GPIO_Init(gpio_tbl[ch].port, &GPIO_InitStruct);
	ret = true;
	
	return ret;
}
     48a:	0f 90       	pop	r0
     48c:	0f 90       	pop	r0
     48e:	df 91       	pop	r29
     490:	cf 91       	pop	r28
     492:	08 95       	ret

00000494 <gpioInit>:
{
	bool ret = true;
	
	for(int i = 0; i < GPIO_MAX_CH; i++)
	{
		gpioPinMode(i, gpio_tbl[i].mode);
     494:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     498:	80 e0       	ldi	r24, 0x00	; 0
     49a:	de df       	rcall	.-68     	; 0x458 <gpioPinMode>
	}
	return ret;
}
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	08 95       	ret

000004a0 <gpioPinWrite>:
	return ret;
}

void gpioPinWrite(uint8_t ch, bool value)
{
	if (ch < 0 || ch >= GPIO_MAX_CH) return;
     4a0:	81 11       	cpse	r24, r1
     4a2:	0f c0       	rjmp	.+30     	; 0x4c2 <gpioPinWrite+0x22>
	if (value)
     4a4:	66 23       	and	r22, r22
     4a6:	39 f0       	breq	.+14     	; 0x4b6 <gpioPinWrite+0x16>
	{
		GPIO_WritePin(gpio_tbl[ch].port, gpio_tbl[ch].pin, gpio_tbl[ch].on_state);
     4a8:	e0 e0       	ldi	r30, 0x00	; 0
     4aa:	f1 e0       	ldi	r31, 0x01	; 1
     4ac:	43 81       	ldd	r20, Z+3	; 0x03
     4ae:	61 81       	ldd	r22, Z+1	; 0x01
     4b0:	80 81       	ld	r24, Z
     4b2:	f6 c0       	rjmp	.+492    	; 0x6a0 <GPIO_WritePin>
     4b4:	08 95       	ret
	}
	else
	{
		GPIO_WritePin(gpio_tbl[ch].port, gpio_tbl[ch].pin, gpio_tbl[ch].off_state);
     4b6:	e0 e0       	ldi	r30, 0x00	; 0
     4b8:	f1 e0       	ldi	r31, 0x01	; 1
     4ba:	44 81       	ldd	r20, Z+4	; 0x04
     4bc:	61 81       	ldd	r22, Z+1	; 0x01
     4be:	80 81       	ld	r24, Z
     4c0:	ef c0       	rjmp	.+478    	; 0x6a0 <GPIO_WritePin>
     4c2:	08 95       	ret

000004c4 <uartInit>:
		case _DEF_UART0:
		baud = huart1.Init.BaudRate;
		break;
	}
	return baud;
}
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	08 95       	ret

000004c8 <uartOpen>:
     4c8:	81 11       	cpse	r24, r1
     4ca:	25 c0       	rjmp	.+74     	; 0x516 <uartOpen+0x4e>
     4cc:	e1 e7       	ldi	r30, 0x71	; 113
     4ce:	f3 e0       	ldi	r31, 0x03	; 3
     4d0:	10 82       	st	Z, r1
     4d2:	41 83       	std	Z+1, r20	; 0x01
     4d4:	52 83       	std	Z+2, r21	; 0x02
     4d6:	63 83       	std	Z+3, r22	; 0x03
     4d8:	74 83       	std	Z+4, r23	; 0x04
     4da:	16 82       	std	Z+6, r1	; 0x06
     4dc:	17 82       	std	Z+7, r1	; 0x07
     4de:	15 82       	std	Z+5, r1	; 0x05
     4e0:	82 e0       	ldi	r24, 0x02	; 2
     4e2:	80 87       	std	Z+8, r24	; 0x08
     4e4:	11 86       	std	Z+9, r1	; 0x09
     4e6:	20 e0       	ldi	r18, 0x00	; 0
     4e8:	32 e0       	ldi	r19, 0x02	; 2
     4ea:	40 e0       	ldi	r20, 0x00	; 0
     4ec:	50 e0       	ldi	r21, 0x00	; 0
     4ee:	63 e6       	ldi	r22, 0x63	; 99
     4f0:	71 e0       	ldi	r23, 0x01	; 1
     4f2:	83 e6       	ldi	r24, 0x63	; 99
     4f4:	93 e0       	ldi	r25, 0x03	; 3
     4f6:	7f de       	rcall	.-770    	; 0x1f6 <qbufferCreate>
     4f8:	41 e0       	ldi	r20, 0x01	; 1
     4fa:	50 e0       	ldi	r21, 0x00	; 0
     4fc:	62 e6       	ldi	r22, 0x62	; 98
     4fe:	71 e0       	ldi	r23, 0x01	; 1
     500:	81 e7       	ldi	r24, 0x71	; 113
     502:	93 e0       	ldi	r25, 0x03	; 3
     504:	ca d3       	rcall	.+1940   	; 0xc9a <UART_Receive_IT>
     506:	81 e7       	ldi	r24, 0x71	; 113
     508:	93 e0       	ldi	r25, 0x03	; 3
     50a:	fe d0       	rcall	.+508    	; 0x708 <UART_Init>
     50c:	91 e0       	ldi	r25, 0x01	; 1
     50e:	88 23       	and	r24, r24
     510:	19 f0       	breq	.+6      	; 0x518 <uartOpen+0x50>
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	01 c0       	rjmp	.+2      	; 0x518 <uartOpen+0x50>
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	89 2f       	mov	r24, r25
     51a:	08 95       	ret

0000051c <uartAvailable>:
     51c:	81 11       	cpse	r24, r1
     51e:	04 c0       	rjmp	.+8      	; 0x528 <uartAvailable+0xc>
     520:	83 e6       	ldi	r24, 0x63	; 99
     522:	93 e0       	ldi	r25, 0x03	; 3
     524:	80 cf       	rjmp	.-256    	; 0x426 <qbufferAvailable>
     526:	08 95       	ret
     528:	60 e0       	ldi	r22, 0x00	; 0
     52a:	70 e0       	ldi	r23, 0x00	; 0
     52c:	cb 01       	movw	r24, r22
     52e:	08 95       	ret

00000530 <uartRead>:
     530:	cf 93       	push	r28
     532:	df 93       	push	r29
     534:	1f 92       	push	r1
     536:	cd b7       	in	r28, 0x3d	; 61
     538:	de b7       	in	r29, 0x3e	; 62
     53a:	19 82       	std	Y+1, r1	; 0x01
     53c:	81 11       	cpse	r24, r1
     53e:	0a c0       	rjmp	.+20     	; 0x554 <uartRead+0x24>
     540:	21 e0       	ldi	r18, 0x01	; 1
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	40 e0       	ldi	r20, 0x00	; 0
     546:	50 e0       	ldi	r21, 0x00	; 0
     548:	be 01       	movw	r22, r28
     54a:	6f 5f       	subi	r22, 0xFF	; 255
     54c:	7f 4f       	sbci	r23, 0xFF	; 255
     54e:	83 e6       	ldi	r24, 0x63	; 99
     550:	93 e0       	ldi	r25, 0x03	; 3
     552:	06 df       	rcall	.-500    	; 0x360 <qbufferRead>
     554:	89 81       	ldd	r24, Y+1	; 0x01
     556:	0f 90       	pop	r0
     558:	df 91       	pop	r29
     55a:	cf 91       	pop	r28
     55c:	08 95       	ret

0000055e <uartWrite>:
     55e:	cf 92       	push	r12
     560:	df 92       	push	r13
     562:	ef 92       	push	r14
     564:	ff 92       	push	r15
     566:	0f 93       	push	r16
     568:	1f 93       	push	r17
     56a:	69 01       	movw	r12, r18
     56c:	7a 01       	movw	r14, r20
     56e:	81 11       	cpse	r24, r1
     570:	0b c0       	rjmp	.+22     	; 0x588 <uartWrite+0x2a>
     572:	04 e6       	ldi	r16, 0x64	; 100
     574:	10 e0       	ldi	r17, 0x00	; 0
     576:	20 e0       	ldi	r18, 0x00	; 0
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	a6 01       	movw	r20, r12
     57c:	81 e7       	ldi	r24, 0x71	; 113
     57e:	93 e0       	ldi	r25, 0x03	; 3
     580:	c0 d2       	rcall	.+1408   	; 0xb02 <UART_Transmit>
     582:	88 23       	and	r24, r24
     584:	41 f0       	breq	.+16     	; 0x596 <uartWrite+0x38>
     586:	04 c0       	rjmp	.+8      	; 0x590 <uartWrite+0x32>
     588:	c1 2c       	mov	r12, r1
     58a:	d1 2c       	mov	r13, r1
     58c:	76 01       	movw	r14, r12
     58e:	03 c0       	rjmp	.+6      	; 0x596 <uartWrite+0x38>
     590:	c1 2c       	mov	r12, r1
     592:	d1 2c       	mov	r13, r1
     594:	76 01       	movw	r14, r12
     596:	c7 01       	movw	r24, r14
     598:	b6 01       	movw	r22, r12
     59a:	1f 91       	pop	r17
     59c:	0f 91       	pop	r16
     59e:	ff 90       	pop	r15
     5a0:	ef 90       	pop	r14
     5a2:	df 90       	pop	r13
     5a4:	cf 90       	pop	r12
     5a6:	08 95       	ret

000005a8 <uartPrintf>:
     5a8:	cf 93       	push	r28
     5aa:	df 93       	push	r29
     5ac:	cd b7       	in	r28, 0x3d	; 61
     5ae:	de b7       	in	r29, 0x3e	; 62
     5b0:	da 95       	dec	r29
     5b2:	0f b6       	in	r0, 0x3f	; 63
     5b4:	f8 94       	cli
     5b6:	de bf       	out	0x3e, r29	; 62
     5b8:	0f be       	out	0x3f, r0	; 63
     5ba:	cd bf       	out	0x3d, r28	; 61
     5bc:	9e 01       	movw	r18, r28
     5be:	28 5f       	subi	r18, 0xF8	; 248
     5c0:	3e 4f       	sbci	r19, 0xFE	; 254
     5c2:	ca 5f       	subi	r28, 0xFA	; 250
     5c4:	de 4f       	sbci	r29, 0xFE	; 254
     5c6:	48 81       	ld	r20, Y
     5c8:	59 81       	ldd	r21, Y+1	; 0x01
     5ca:	c6 50       	subi	r28, 0x06	; 6
     5cc:	d1 40       	sbci	r29, 0x01	; 1
     5ce:	60 e0       	ldi	r22, 0x00	; 0
     5d0:	71 e0       	ldi	r23, 0x01	; 1
     5d2:	ce 01       	movw	r24, r28
     5d4:	01 96       	adiw	r24, 0x01	; 1
     5d6:	43 d5       	rcall	.+2694   	; 0x105e <vsnprintf>
     5d8:	9c 01       	movw	r18, r24
     5da:	99 0f       	add	r25, r25
     5dc:	44 0b       	sbc	r20, r20
     5de:	55 0b       	sbc	r21, r21
     5e0:	be 01       	movw	r22, r28
     5e2:	6f 5f       	subi	r22, 0xFF	; 255
     5e4:	7f 4f       	sbci	r23, 0xFF	; 255
     5e6:	cb 5f       	subi	r28, 0xFB	; 251
     5e8:	de 4f       	sbci	r29, 0xFE	; 254
     5ea:	88 81       	ld	r24, Y
     5ec:	c5 50       	subi	r28, 0x05	; 5
     5ee:	d1 40       	sbci	r29, 0x01	; 1
     5f0:	b6 df       	rcall	.-148    	; 0x55e <uartWrite>
     5f2:	d3 95       	inc	r29
     5f4:	0f b6       	in	r0, 0x3f	; 63
     5f6:	f8 94       	cli
     5f8:	de bf       	out	0x3e, r29	; 62
     5fa:	0f be       	out	0x3f, r0	; 63
     5fc:	cd bf       	out	0x3d, r28	; 61
     5fe:	df 91       	pop	r29
     600:	cf 91       	pop	r28
     602:	08 95       	ret

00000604 <UART_TxCpltCallback>:


void UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
     604:	08 95       	ret

00000606 <UART_RxCpltCallback>:
	return;
}

void UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
	switch(huart->USARTn)
     606:	fc 01       	movw	r30, r24
     608:	80 81       	ld	r24, Z
     60a:	81 11       	cpse	r24, r1
     60c:	09 c0       	rjmp	.+18     	; 0x620 <UART_RxCpltCallback+0x1a>
	{
		case USART0:
		qbufferWrite(&qbuffer[_DEF_UART0], &rx_data[_DEF_UART0], 1);
     60e:	21 e0       	ldi	r18, 0x01	; 1
     610:	30 e0       	ldi	r19, 0x00	; 0
     612:	40 e0       	ldi	r20, 0x00	; 0
     614:	50 e0       	ldi	r21, 0x00	; 0
     616:	62 e6       	ldi	r22, 0x62	; 98
     618:	71 e0       	ldi	r23, 0x01	; 1
     61a:	83 e6       	ldi	r24, 0x63	; 99
     61c:	93 e0       	ldi	r25, 0x03	; 3
     61e:	fc cd       	rjmp	.-1032   	; 0x218 <qbufferWrite>
     620:	08 95       	ret

00000622 <hwInit>:
ï»¿#include "hw.h"

void hwInit(void)
{
	bspInit();
     622:	e8 dd       	rcall	.-1072   	; 0x1f4 <bspInit>
	gpioInit();
     624:	37 df       	rcall	.-402    	; 0x494 <gpioInit>
	uartInit();
     626:	4e cf       	rjmp	.-356    	; 0x4c4 <uartInit>
     628:	08 95       	ret

0000062a <GPIO_Init>:
     62a:	90 e0       	ldi	r25, 0x00	; 0
	GPIO_PinState ret = 0x00;
	GPIO_TypeDef *gpio = &GPIO_descripter[port];

	ret = READB(*(gpio->PINn), pin);
	return ret;
}
     62c:	db 01       	movw	r26, r22
     62e:	11 96       	adiw	r26, 0x01	; 1
     630:	2c 91       	ld	r18, X
     632:	11 97       	sbiw	r26, 0x01	; 1
     634:	21 11       	cpse	r18, r1
     636:	19 c0       	rjmp	.+50     	; 0x66a <GPIO_Init+0x40>
     638:	fc 01       	movw	r30, r24
     63a:	ee 0f       	add	r30, r30
     63c:	ff 1f       	adc	r31, r31
     63e:	e8 0f       	add	r30, r24
     640:	f9 1f       	adc	r31, r25
     642:	ee 0f       	add	r30, r30
     644:	ff 1f       	adc	r31, r31
     646:	eb 5f       	subi	r30, 0xFB	; 251
     648:	fe 4f       	sbci	r31, 0xFE	; 254
     64a:	01 90       	ld	r0, Z+
     64c:	f0 81       	ld	r31, Z
     64e:	e0 2d       	mov	r30, r0
     650:	20 81       	ld	r18, Z
     652:	81 e0       	ldi	r24, 0x01	; 1
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	0c 90       	ld	r0, X
     658:	02 c0       	rjmp	.+4      	; 0x65e <GPIO_Init+0x34>
     65a:	88 0f       	add	r24, r24
     65c:	99 1f       	adc	r25, r25
     65e:	0a 94       	dec	r0
     660:	e2 f7       	brpl	.-8      	; 0x65a <GPIO_Init+0x30>
     662:	80 95       	com	r24
     664:	82 23       	and	r24, r18
     666:	80 83       	st	Z, r24
     668:	08 95       	ret
     66a:	21 30       	cpi	r18, 0x01	; 1
     66c:	c1 f4       	brne	.+48     	; 0x69e <GPIO_Init+0x74>
     66e:	fc 01       	movw	r30, r24
     670:	ee 0f       	add	r30, r30
     672:	ff 1f       	adc	r31, r31
     674:	e8 0f       	add	r30, r24
     676:	f9 1f       	adc	r31, r25
     678:	ee 0f       	add	r30, r30
     67a:	ff 1f       	adc	r31, r31
     67c:	eb 5f       	subi	r30, 0xFB	; 251
     67e:	fe 4f       	sbci	r31, 0xFE	; 254
     680:	01 90       	ld	r0, Z+
     682:	f0 81       	ld	r31, Z
     684:	e0 2d       	mov	r30, r0
     686:	20 81       	ld	r18, Z
     688:	81 e0       	ldi	r24, 0x01	; 1
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	db 01       	movw	r26, r22
     68e:	0c 90       	ld	r0, X
     690:	02 c0       	rjmp	.+4      	; 0x696 <GPIO_Init+0x6c>
     692:	88 0f       	add	r24, r24
     694:	99 1f       	adc	r25, r25
     696:	0a 94       	dec	r0
     698:	e2 f7       	brpl	.-8      	; 0x692 <GPIO_Init+0x68>
     69a:	82 2b       	or	r24, r18
     69c:	80 83       	st	Z, r24
     69e:	08 95       	ret

000006a0 <GPIO_WritePin>:

void GPIO_WritePin(uint8_t port, uint8_t pin, GPIO_PinState pinState)
{
	GPIO_TypeDef *gpio = &GPIO_descripter[port];
     6a0:	90 e0       	ldi	r25, 0x00	; 0
	
	if(pinState == PIN_RESET)
     6a2:	41 11       	cpse	r20, r1
     6a4:	18 c0       	rjmp	.+48     	; 0x6d6 <GPIO_WritePin+0x36>
	{
		CLRB(*(gpio->PORTn), pin);
     6a6:	fc 01       	movw	r30, r24
     6a8:	ee 0f       	add	r30, r30
     6aa:	ff 1f       	adc	r31, r31
     6ac:	e8 0f       	add	r30, r24
     6ae:	f9 1f       	adc	r31, r25
     6b0:	ee 0f       	add	r30, r30
     6b2:	ff 1f       	adc	r31, r31
     6b4:	eb 5f       	subi	r30, 0xFB	; 251
     6b6:	fe 4f       	sbci	r31, 0xFE	; 254
     6b8:	02 80       	ldd	r0, Z+2	; 0x02
     6ba:	f3 81       	ldd	r31, Z+3	; 0x03
     6bc:	e0 2d       	mov	r30, r0
     6be:	20 81       	ld	r18, Z
     6c0:	81 e0       	ldi	r24, 0x01	; 1
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	02 c0       	rjmp	.+4      	; 0x6ca <GPIO_WritePin+0x2a>
     6c6:	88 0f       	add	r24, r24
     6c8:	99 1f       	adc	r25, r25
     6ca:	6a 95       	dec	r22
     6cc:	e2 f7       	brpl	.-8      	; 0x6c6 <GPIO_WritePin+0x26>
     6ce:	80 95       	com	r24
     6d0:	82 23       	and	r24, r18
     6d2:	80 83       	st	Z, r24
     6d4:	08 95       	ret
	}
	else if(pinState == PIN_SET)
     6d6:	41 30       	cpi	r20, 0x01	; 1
     6d8:	b1 f4       	brne	.+44     	; 0x706 <GPIO_WritePin+0x66>
	{
		SETB(*(gpio->PORTn), pin);
     6da:	fc 01       	movw	r30, r24
     6dc:	ee 0f       	add	r30, r30
     6de:	ff 1f       	adc	r31, r31
     6e0:	e8 0f       	add	r30, r24
     6e2:	f9 1f       	adc	r31, r25
     6e4:	ee 0f       	add	r30, r30
     6e6:	ff 1f       	adc	r31, r31
     6e8:	eb 5f       	subi	r30, 0xFB	; 251
     6ea:	fe 4f       	sbci	r31, 0xFE	; 254
     6ec:	02 80       	ldd	r0, Z+2	; 0x02
     6ee:	f3 81       	ldd	r31, Z+3	; 0x03
     6f0:	e0 2d       	mov	r30, r0
     6f2:	20 81       	ld	r18, Z
     6f4:	81 e0       	ldi	r24, 0x01	; 1
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	02 c0       	rjmp	.+4      	; 0x6fe <GPIO_WritePin+0x5e>
     6fa:	88 0f       	add	r24, r24
     6fc:	99 1f       	adc	r25, r25
     6fe:	6a 95       	dec	r22
     700:	e2 f7       	brpl	.-8      	; 0x6fa <GPIO_WritePin+0x5a>
     702:	82 2b       	or	r24, r18
     704:	80 83       	st	Z, r24
     706:	08 95       	ret

00000708 <UART_Init>:
{
	return;
}

__attribute__((weak)) void UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
     708:	cf 92       	push	r12
     70a:	df 92       	push	r13
     70c:	ef 92       	push	r14
     70e:	ff 92       	push	r15
     710:	0f 93       	push	r16
     712:	1f 93       	push	r17
     714:	cf 93       	push	r28
     716:	df 93       	push	r29
     718:	fc 01       	movw	r30, r24
     71a:	c0 81       	ld	r28, Z
     71c:	d0 e0       	ldi	r29, 0x00	; 0
     71e:	00 97       	sbiw	r24, 0x00	; 0
     720:	09 f4       	brne	.+2      	; 0x724 <UART_Init+0x1c>
     722:	e3 c1       	rjmp	.+966    	; 0xaea <UART_Init+0x3e2>
     724:	8c 01       	movw	r16, r24
     726:	81 85       	ldd	r24, Z+9	; 0x09
     728:	88 23       	and	r24, r24
     72a:	21 f0       	breq	.+8      	; 0x734 <UART_Init+0x2c>
     72c:	81 30       	cpi	r24, 0x01	; 1
     72e:	09 f4       	brne	.+2      	; 0x732 <UART_Init+0x2a>
     730:	41 c0       	rjmp	.+130    	; 0x7b4 <UART_Init+0xac>
     732:	7b c0       	rjmp	.+246    	; 0x82a <UART_Init+0x122>
     734:	81 81       	ldd	r24, Z+1	; 0x01
     736:	92 81       	ldd	r25, Z+2	; 0x02
     738:	a3 81       	ldd	r26, Z+3	; 0x03
     73a:	b4 81       	ldd	r27, Z+4	; 0x04
     73c:	88 0f       	add	r24, r24
     73e:	99 1f       	adc	r25, r25
     740:	aa 1f       	adc	r26, r26
     742:	bb 1f       	adc	r27, r27
     744:	88 0f       	add	r24, r24
     746:	99 1f       	adc	r25, r25
     748:	aa 1f       	adc	r26, r26
     74a:	bb 1f       	adc	r27, r27
     74c:	bc 01       	movw	r22, r24
     74e:	cd 01       	movw	r24, r26
     750:	66 0f       	add	r22, r22
     752:	77 1f       	adc	r23, r23
     754:	88 1f       	adc	r24, r24
     756:	99 1f       	adc	r25, r25
     758:	66 0f       	add	r22, r22
     75a:	77 1f       	adc	r23, r23
     75c:	88 1f       	adc	r24, r24
     75e:	99 1f       	adc	r25, r25
     760:	ce d3       	rcall	.+1948   	; 0xefe <__floatunsisf>
     762:	9b 01       	movw	r18, r22
     764:	ac 01       	movw	r20, r24
     766:	60 e0       	ldi	r22, 0x00	; 0
     768:	74 e2       	ldi	r23, 0x24	; 36
     76a:	84 e7       	ldi	r24, 0x74	; 116
     76c:	9b e4       	ldi	r25, 0x4B	; 75
     76e:	33 d3       	rcall	.+1638   	; 0xdd6 <__divsf3>
     770:	20 e0       	ldi	r18, 0x00	; 0
     772:	30 e0       	ldi	r19, 0x00	; 0
     774:	40 e0       	ldi	r20, 0x00	; 0
     776:	5f e3       	ldi	r21, 0x3F	; 63
     778:	c9 d2       	rcall	.+1426   	; 0xd0c <__subsf3>
     77a:	95 d3       	rcall	.+1834   	; 0xea6 <__fixunssfsi>
     77c:	fe 01       	movw	r30, r28
     77e:	ee 0f       	add	r30, r30
     780:	ff 1f       	adc	r31, r31
     782:	ec 0f       	add	r30, r28
     784:	fd 1f       	adc	r31, r29
     786:	ee 0f       	add	r30, r30
     788:	ff 1f       	adc	r31, r31
     78a:	ee 0f       	add	r30, r30
     78c:	ff 1f       	adc	r31, r31
     78e:	e1 5d       	subi	r30, 0xD1	; 209
     790:	fe 4f       	sbci	r31, 0xFE	; 254
     792:	a0 85       	ldd	r26, Z+8	; 0x08
     794:	b1 85       	ldd	r27, Z+9	; 0x09
     796:	c7 2e       	mov	r12, r23
     798:	d8 2e       	mov	r13, r24
     79a:	e9 2e       	mov	r14, r25
     79c:	ff 24       	eor	r15, r15
     79e:	cc 92       	st	X, r12
     7a0:	a2 85       	ldd	r26, Z+10	; 0x0a
     7a2:	b3 85       	ldd	r27, Z+11	; 0x0b
     7a4:	6c 93       	st	X, r22
     7a6:	02 80       	ldd	r0, Z+2	; 0x02
     7a8:	f3 81       	ldd	r31, Z+3	; 0x03
     7aa:	e0 2d       	mov	r30, r0
     7ac:	80 81       	ld	r24, Z
     7ae:	8d 7f       	andi	r24, 0xFD	; 253
     7b0:	80 83       	st	Z, r24
     7b2:	3b c0       	rjmp	.+118    	; 0x82a <UART_Init+0x122>
     7b4:	81 81       	ldd	r24, Z+1	; 0x01
     7b6:	92 81       	ldd	r25, Z+2	; 0x02
     7b8:	a3 81       	ldd	r26, Z+3	; 0x03
     7ba:	b4 81       	ldd	r27, Z+4	; 0x04
     7bc:	88 0f       	add	r24, r24
     7be:	99 1f       	adc	r25, r25
     7c0:	aa 1f       	adc	r26, r26
     7c2:	bb 1f       	adc	r27, r27
     7c4:	88 0f       	add	r24, r24
     7c6:	99 1f       	adc	r25, r25
     7c8:	aa 1f       	adc	r26, r26
     7ca:	bb 1f       	adc	r27, r27
     7cc:	bc 01       	movw	r22, r24
     7ce:	cd 01       	movw	r24, r26
     7d0:	66 0f       	add	r22, r22
     7d2:	77 1f       	adc	r23, r23
     7d4:	88 1f       	adc	r24, r24
     7d6:	99 1f       	adc	r25, r25
     7d8:	92 d3       	rcall	.+1828   	; 0xefe <__floatunsisf>
     7da:	9b 01       	movw	r18, r22
     7dc:	ac 01       	movw	r20, r24
     7de:	60 e0       	ldi	r22, 0x00	; 0
     7e0:	74 e2       	ldi	r23, 0x24	; 36
     7e2:	84 e7       	ldi	r24, 0x74	; 116
     7e4:	9b e4       	ldi	r25, 0x4B	; 75
     7e6:	f7 d2       	rcall	.+1518   	; 0xdd6 <__divsf3>
     7e8:	20 e0       	ldi	r18, 0x00	; 0
     7ea:	30 e0       	ldi	r19, 0x00	; 0
     7ec:	40 e0       	ldi	r20, 0x00	; 0
     7ee:	5f e3       	ldi	r21, 0x3F	; 63
     7f0:	8d d2       	rcall	.+1306   	; 0xd0c <__subsf3>
     7f2:	59 d3       	rcall	.+1714   	; 0xea6 <__fixunssfsi>
     7f4:	fe 01       	movw	r30, r28
     7f6:	ee 0f       	add	r30, r30
     7f8:	ff 1f       	adc	r31, r31
     7fa:	ec 0f       	add	r30, r28
     7fc:	fd 1f       	adc	r31, r29
     7fe:	ee 0f       	add	r30, r30
     800:	ff 1f       	adc	r31, r31
     802:	ee 0f       	add	r30, r30
     804:	ff 1f       	adc	r31, r31
     806:	e1 5d       	subi	r30, 0xD1	; 209
     808:	fe 4f       	sbci	r31, 0xFE	; 254
     80a:	a0 85       	ldd	r26, Z+8	; 0x08
     80c:	b1 85       	ldd	r27, Z+9	; 0x09
     80e:	c7 2e       	mov	r12, r23
     810:	d8 2e       	mov	r13, r24
     812:	e9 2e       	mov	r14, r25
     814:	ff 24       	eor	r15, r15
     816:	cc 92       	st	X, r12
     818:	a2 85       	ldd	r26, Z+10	; 0x0a
     81a:	b3 85       	ldd	r27, Z+11	; 0x0b
     81c:	6c 93       	st	X, r22
     81e:	02 80       	ldd	r0, Z+2	; 0x02
     820:	f3 81       	ldd	r31, Z+3	; 0x03
     822:	e0 2d       	mov	r30, r0
     824:	80 81       	ld	r24, Z
     826:	82 60       	ori	r24, 0x02	; 2
     828:	80 83       	st	Z, r24
     82a:	f8 01       	movw	r30, r16
     82c:	85 81       	ldd	r24, Z+5	; 0x05
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	09 f4       	brne	.+2      	; 0x834 <UART_Init+0x12c>
     832:	45 c0       	rjmp	.+138    	; 0x8be <UART_Init+0x1b6>
     834:	28 f4       	brcc	.+10     	; 0x840 <UART_Init+0x138>
     836:	88 23       	and	r24, r24
     838:	51 f0       	breq	.+20     	; 0x84e <UART_Init+0x146>
     83a:	81 30       	cpi	r24, 0x01	; 1
     83c:	21 f1       	breq	.+72     	; 0x886 <UART_Init+0x17e>
     83e:	92 c0       	rjmp	.+292    	; 0x964 <UART_Init+0x25c>
     840:	83 30       	cpi	r24, 0x03	; 3
     842:	09 f4       	brne	.+2      	; 0x846 <UART_Init+0x13e>
     844:	58 c0       	rjmp	.+176    	; 0x8f6 <UART_Init+0x1ee>
     846:	84 30       	cpi	r24, 0x04	; 4
     848:	09 f4       	brne	.+2      	; 0x84c <UART_Init+0x144>
     84a:	71 c0       	rjmp	.+226    	; 0x92e <UART_Init+0x226>
     84c:	8b c0       	rjmp	.+278    	; 0x964 <UART_Init+0x25c>
     84e:	fe 01       	movw	r30, r28
     850:	ee 0f       	add	r30, r30
     852:	ff 1f       	adc	r31, r31
     854:	ec 0f       	add	r30, r28
     856:	fd 1f       	adc	r31, r29
     858:	ee 0f       	add	r30, r30
     85a:	ff 1f       	adc	r31, r31
     85c:	ee 0f       	add	r30, r30
     85e:	ff 1f       	adc	r31, r31
     860:	e1 5d       	subi	r30, 0xD1	; 209
     862:	fe 4f       	sbci	r31, 0xFE	; 254
     864:	a4 81       	ldd	r26, Z+4	; 0x04
     866:	b5 81       	ldd	r27, Z+5	; 0x05
     868:	8c 91       	ld	r24, X
     86a:	8b 7f       	andi	r24, 0xFB	; 251
     86c:	8c 93       	st	X, r24
     86e:	a6 81       	ldd	r26, Z+6	; 0x06
     870:	b7 81       	ldd	r27, Z+7	; 0x07
     872:	8c 91       	ld	r24, X
     874:	84 60       	ori	r24, 0x04	; 4
     876:	8c 93       	st	X, r24
     878:	06 80       	ldd	r0, Z+6	; 0x06
     87a:	f7 81       	ldd	r31, Z+7	; 0x07
     87c:	e0 2d       	mov	r30, r0
     87e:	80 81       	ld	r24, Z
     880:	82 60       	ori	r24, 0x02	; 2
     882:	80 83       	st	Z, r24
     884:	6f c0       	rjmp	.+222    	; 0x964 <UART_Init+0x25c>
     886:	fe 01       	movw	r30, r28
     888:	ee 0f       	add	r30, r30
     88a:	ff 1f       	adc	r31, r31
     88c:	ec 0f       	add	r30, r28
     88e:	fd 1f       	adc	r31, r29
     890:	ee 0f       	add	r30, r30
     892:	ff 1f       	adc	r31, r31
     894:	ee 0f       	add	r30, r30
     896:	ff 1f       	adc	r31, r31
     898:	e1 5d       	subi	r30, 0xD1	; 209
     89a:	fe 4f       	sbci	r31, 0xFE	; 254
     89c:	a4 81       	ldd	r26, Z+4	; 0x04
     89e:	b5 81       	ldd	r27, Z+5	; 0x05
     8a0:	8c 91       	ld	r24, X
     8a2:	8b 7f       	andi	r24, 0xFB	; 251
     8a4:	8c 93       	st	X, r24
     8a6:	a6 81       	ldd	r26, Z+6	; 0x06
     8a8:	b7 81       	ldd	r27, Z+7	; 0x07
     8aa:	8c 91       	ld	r24, X
     8ac:	8b 7f       	andi	r24, 0xFB	; 251
     8ae:	8c 93       	st	X, r24
     8b0:	06 80       	ldd	r0, Z+6	; 0x06
     8b2:	f7 81       	ldd	r31, Z+7	; 0x07
     8b4:	e0 2d       	mov	r30, r0
     8b6:	80 81       	ld	r24, Z
     8b8:	8d 7f       	andi	r24, 0xFD	; 253
     8ba:	80 83       	st	Z, r24
     8bc:	53 c0       	rjmp	.+166    	; 0x964 <UART_Init+0x25c>
     8be:	fe 01       	movw	r30, r28
     8c0:	ee 0f       	add	r30, r30
     8c2:	ff 1f       	adc	r31, r31
     8c4:	ec 0f       	add	r30, r28
     8c6:	fd 1f       	adc	r31, r29
     8c8:	ee 0f       	add	r30, r30
     8ca:	ff 1f       	adc	r31, r31
     8cc:	ee 0f       	add	r30, r30
     8ce:	ff 1f       	adc	r31, r31
     8d0:	e1 5d       	subi	r30, 0xD1	; 209
     8d2:	fe 4f       	sbci	r31, 0xFE	; 254
     8d4:	a4 81       	ldd	r26, Z+4	; 0x04
     8d6:	b5 81       	ldd	r27, Z+5	; 0x05
     8d8:	8c 91       	ld	r24, X
     8da:	8b 7f       	andi	r24, 0xFB	; 251
     8dc:	8c 93       	st	X, r24
     8de:	a6 81       	ldd	r26, Z+6	; 0x06
     8e0:	b7 81       	ldd	r27, Z+7	; 0x07
     8e2:	8c 91       	ld	r24, X
     8e4:	8b 7f       	andi	r24, 0xFB	; 251
     8e6:	8c 93       	st	X, r24
     8e8:	06 80       	ldd	r0, Z+6	; 0x06
     8ea:	f7 81       	ldd	r31, Z+7	; 0x07
     8ec:	e0 2d       	mov	r30, r0
     8ee:	80 81       	ld	r24, Z
     8f0:	82 60       	ori	r24, 0x02	; 2
     8f2:	80 83       	st	Z, r24
     8f4:	37 c0       	rjmp	.+110    	; 0x964 <UART_Init+0x25c>
     8f6:	fe 01       	movw	r30, r28
     8f8:	ee 0f       	add	r30, r30
     8fa:	ff 1f       	adc	r31, r31
     8fc:	ec 0f       	add	r30, r28
     8fe:	fd 1f       	adc	r31, r29
     900:	ee 0f       	add	r30, r30
     902:	ff 1f       	adc	r31, r31
     904:	ee 0f       	add	r30, r30
     906:	ff 1f       	adc	r31, r31
     908:	e1 5d       	subi	r30, 0xD1	; 209
     90a:	fe 4f       	sbci	r31, 0xFE	; 254
     90c:	a4 81       	ldd	r26, Z+4	; 0x04
     90e:	b5 81       	ldd	r27, Z+5	; 0x05
     910:	8c 91       	ld	r24, X
     912:	8b 7f       	andi	r24, 0xFB	; 251
     914:	8c 93       	st	X, r24
     916:	a6 81       	ldd	r26, Z+6	; 0x06
     918:	b7 81       	ldd	r27, Z+7	; 0x07
     91a:	8c 91       	ld	r24, X
     91c:	84 60       	ori	r24, 0x04	; 4
     91e:	8c 93       	st	X, r24
     920:	06 80       	ldd	r0, Z+6	; 0x06
     922:	f7 81       	ldd	r31, Z+7	; 0x07
     924:	e0 2d       	mov	r30, r0
     926:	80 81       	ld	r24, Z
     928:	8d 7f       	andi	r24, 0xFD	; 253
     92a:	80 83       	st	Z, r24
     92c:	1b c0       	rjmp	.+54     	; 0x964 <UART_Init+0x25c>
     92e:	fe 01       	movw	r30, r28
     930:	ee 0f       	add	r30, r30
     932:	ff 1f       	adc	r31, r31
     934:	ec 0f       	add	r30, r28
     936:	fd 1f       	adc	r31, r29
     938:	ee 0f       	add	r30, r30
     93a:	ff 1f       	adc	r31, r31
     93c:	ee 0f       	add	r30, r30
     93e:	ff 1f       	adc	r31, r31
     940:	e1 5d       	subi	r30, 0xD1	; 209
     942:	fe 4f       	sbci	r31, 0xFE	; 254
     944:	a4 81       	ldd	r26, Z+4	; 0x04
     946:	b5 81       	ldd	r27, Z+5	; 0x05
     948:	8c 91       	ld	r24, X
     94a:	84 60       	ori	r24, 0x04	; 4
     94c:	8c 93       	st	X, r24
     94e:	a6 81       	ldd	r26, Z+6	; 0x06
     950:	b7 81       	ldd	r27, Z+7	; 0x07
     952:	8c 91       	ld	r24, X
     954:	84 60       	ori	r24, 0x04	; 4
     956:	8c 93       	st	X, r24
     958:	06 80       	ldd	r0, Z+6	; 0x06
     95a:	f7 81       	ldd	r31, Z+7	; 0x07
     95c:	e0 2d       	mov	r30, r0
     95e:	80 81       	ld	r24, Z
     960:	82 60       	ori	r24, 0x02	; 2
     962:	80 83       	st	Z, r24
     964:	f8 01       	movw	r30, r16
     966:	86 81       	ldd	r24, Z+6	; 0x06
     968:	88 23       	and	r24, r24
     96a:	19 f0       	breq	.+6      	; 0x972 <UART_Init+0x26a>
     96c:	81 30       	cpi	r24, 0x01	; 1
     96e:	99 f0       	breq	.+38     	; 0x996 <UART_Init+0x28e>
     970:	23 c0       	rjmp	.+70     	; 0x9b8 <UART_Init+0x2b0>
     972:	fe 01       	movw	r30, r28
     974:	ee 0f       	add	r30, r30
     976:	ff 1f       	adc	r31, r31
     978:	ec 0f       	add	r30, r28
     97a:	fd 1f       	adc	r31, r29
     97c:	ee 0f       	add	r30, r30
     97e:	ff 1f       	adc	r31, r31
     980:	ee 0f       	add	r30, r30
     982:	ff 1f       	adc	r31, r31
     984:	e1 5d       	subi	r30, 0xD1	; 209
     986:	fe 4f       	sbci	r31, 0xFE	; 254
     988:	06 80       	ldd	r0, Z+6	; 0x06
     98a:	f7 81       	ldd	r31, Z+7	; 0x07
     98c:	e0 2d       	mov	r30, r0
     98e:	80 81       	ld	r24, Z
     990:	8f 7e       	andi	r24, 0xEF	; 239
     992:	80 83       	st	Z, r24
     994:	11 c0       	rjmp	.+34     	; 0x9b8 <UART_Init+0x2b0>
     996:	fe 01       	movw	r30, r28
     998:	ee 0f       	add	r30, r30
     99a:	ff 1f       	adc	r31, r31
     99c:	ec 0f       	add	r30, r28
     99e:	fd 1f       	adc	r31, r29
     9a0:	ee 0f       	add	r30, r30
     9a2:	ff 1f       	adc	r31, r31
     9a4:	ee 0f       	add	r30, r30
     9a6:	ff 1f       	adc	r31, r31
     9a8:	e1 5d       	subi	r30, 0xD1	; 209
     9aa:	fe 4f       	sbci	r31, 0xFE	; 254
     9ac:	06 80       	ldd	r0, Z+6	; 0x06
     9ae:	f7 81       	ldd	r31, Z+7	; 0x07
     9b0:	e0 2d       	mov	r30, r0
     9b2:	80 81       	ld	r24, Z
     9b4:	80 61       	ori	r24, 0x10	; 16
     9b6:	80 83       	st	Z, r24
     9b8:	f8 01       	movw	r30, r16
     9ba:	87 81       	ldd	r24, Z+7	; 0x07
     9bc:	81 30       	cpi	r24, 0x01	; 1
     9be:	d9 f0       	breq	.+54     	; 0x9f6 <UART_Init+0x2ee>
     9c0:	18 f0       	brcs	.+6      	; 0x9c8 <UART_Init+0x2c0>
     9c2:	82 30       	cpi	r24, 0x02	; 2
     9c4:	79 f1       	breq	.+94     	; 0xa24 <UART_Init+0x31c>
     9c6:	44 c0       	rjmp	.+136    	; 0xa50 <UART_Init+0x348>
     9c8:	fe 01       	movw	r30, r28
     9ca:	ee 0f       	add	r30, r30
     9cc:	ff 1f       	adc	r31, r31
     9ce:	ec 0f       	add	r30, r28
     9d0:	fd 1f       	adc	r31, r29
     9d2:	ee 0f       	add	r30, r30
     9d4:	ff 1f       	adc	r31, r31
     9d6:	ee 0f       	add	r30, r30
     9d8:	ff 1f       	adc	r31, r31
     9da:	e1 5d       	subi	r30, 0xD1	; 209
     9dc:	fe 4f       	sbci	r31, 0xFE	; 254
     9de:	a6 81       	ldd	r26, Z+6	; 0x06
     9e0:	b7 81       	ldd	r27, Z+7	; 0x07
     9e2:	8c 91       	ld	r24, X
     9e4:	8f 7b       	andi	r24, 0xBF	; 191
     9e6:	8c 93       	st	X, r24
     9e8:	06 80       	ldd	r0, Z+6	; 0x06
     9ea:	f7 81       	ldd	r31, Z+7	; 0x07
     9ec:	e0 2d       	mov	r30, r0
     9ee:	80 81       	ld	r24, Z
     9f0:	8f 7d       	andi	r24, 0xDF	; 223
     9f2:	80 83       	st	Z, r24
     9f4:	2d c0       	rjmp	.+90     	; 0xa50 <UART_Init+0x348>
     9f6:	fe 01       	movw	r30, r28
     9f8:	ee 0f       	add	r30, r30
     9fa:	ff 1f       	adc	r31, r31
     9fc:	ec 0f       	add	r30, r28
     9fe:	fd 1f       	adc	r31, r29
     a00:	ee 0f       	add	r30, r30
     a02:	ff 1f       	adc	r31, r31
     a04:	ee 0f       	add	r30, r30
     a06:	ff 1f       	adc	r31, r31
     a08:	e1 5d       	subi	r30, 0xD1	; 209
     a0a:	fe 4f       	sbci	r31, 0xFE	; 254
     a0c:	a6 81       	ldd	r26, Z+6	; 0x06
     a0e:	b7 81       	ldd	r27, Z+7	; 0x07
     a10:	8c 91       	ld	r24, X
     a12:	80 64       	ori	r24, 0x40	; 64
     a14:	8c 93       	st	X, r24
     a16:	06 80       	ldd	r0, Z+6	; 0x06
     a18:	f7 81       	ldd	r31, Z+7	; 0x07
     a1a:	e0 2d       	mov	r30, r0
     a1c:	80 81       	ld	r24, Z
     a1e:	8f 7d       	andi	r24, 0xDF	; 223
     a20:	80 83       	st	Z, r24
     a22:	16 c0       	rjmp	.+44     	; 0xa50 <UART_Init+0x348>
     a24:	fe 01       	movw	r30, r28
     a26:	ee 0f       	add	r30, r30
     a28:	ff 1f       	adc	r31, r31
     a2a:	ec 0f       	add	r30, r28
     a2c:	fd 1f       	adc	r31, r29
     a2e:	ee 0f       	add	r30, r30
     a30:	ff 1f       	adc	r31, r31
     a32:	ee 0f       	add	r30, r30
     a34:	ff 1f       	adc	r31, r31
     a36:	e1 5d       	subi	r30, 0xD1	; 209
     a38:	fe 4f       	sbci	r31, 0xFE	; 254
     a3a:	a6 81       	ldd	r26, Z+6	; 0x06
     a3c:	b7 81       	ldd	r27, Z+7	; 0x07
     a3e:	8c 91       	ld	r24, X
     a40:	80 64       	ori	r24, 0x40	; 64
     a42:	8c 93       	st	X, r24
     a44:	06 80       	ldd	r0, Z+6	; 0x06
     a46:	f7 81       	ldd	r31, Z+7	; 0x07
     a48:	e0 2d       	mov	r30, r0
     a4a:	80 81       	ld	r24, Z
     a4c:	80 62       	ori	r24, 0x20	; 32
     a4e:	80 83       	st	Z, r24
     a50:	f8 01       	movw	r30, r16
     a52:	80 85       	ldd	r24, Z+8	; 0x08
     a54:	81 30       	cpi	r24, 0x01	; 1
     a56:	b1 f0       	breq	.+44     	; 0xa84 <UART_Init+0x37c>
     a58:	18 f0       	brcs	.+6      	; 0xa60 <UART_Init+0x358>
     a5a:	82 30       	cpi	r24, 0x02	; 2
     a5c:	29 f1       	breq	.+74     	; 0xaa8 <UART_Init+0x3a0>
     a5e:	47 c0       	rjmp	.+142    	; 0xaee <UART_Init+0x3e6>
     a60:	ce 01       	movw	r24, r28
     a62:	88 0f       	add	r24, r24
     a64:	99 1f       	adc	r25, r25
     a66:	c8 0f       	add	r28, r24
     a68:	d9 1f       	adc	r29, r25
     a6a:	cc 0f       	add	r28, r28
     a6c:	dd 1f       	adc	r29, r29
     a6e:	cc 0f       	add	r28, r28
     a70:	dd 1f       	adc	r29, r29
     a72:	c1 5d       	subi	r28, 0xD1	; 209
     a74:	de 4f       	sbci	r29, 0xFE	; 254
     a76:	ec 81       	ldd	r30, Y+4	; 0x04
     a78:	fd 81       	ldd	r31, Y+5	; 0x05
     a7a:	80 81       	ld	r24, Z
     a7c:	80 61       	ori	r24, 0x10	; 16
     a7e:	80 83       	st	Z, r24
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	36 c0       	rjmp	.+108    	; 0xaf0 <UART_Init+0x3e8>
     a84:	ce 01       	movw	r24, r28
     a86:	88 0f       	add	r24, r24
     a88:	99 1f       	adc	r25, r25
     a8a:	c8 0f       	add	r28, r24
     a8c:	d9 1f       	adc	r29, r25
     a8e:	cc 0f       	add	r28, r28
     a90:	dd 1f       	adc	r29, r29
     a92:	cc 0f       	add	r28, r28
     a94:	dd 1f       	adc	r29, r29
     a96:	c1 5d       	subi	r28, 0xD1	; 209
     a98:	de 4f       	sbci	r29, 0xFE	; 254
     a9a:	ec 81       	ldd	r30, Y+4	; 0x04
     a9c:	fd 81       	ldd	r31, Y+5	; 0x05
     a9e:	80 81       	ld	r24, Z
     aa0:	88 60       	ori	r24, 0x08	; 8
     aa2:	80 83       	st	Z, r24
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	24 c0       	rjmp	.+72     	; 0xaf0 <UART_Init+0x3e8>
     aa8:	9e 01       	movw	r18, r28
     aaa:	22 0f       	add	r18, r18
     aac:	33 1f       	adc	r19, r19
     aae:	f9 01       	movw	r30, r18
     ab0:	ec 0f       	add	r30, r28
     ab2:	fd 1f       	adc	r31, r29
     ab4:	ee 0f       	add	r30, r30
     ab6:	ff 1f       	adc	r31, r31
     ab8:	ee 0f       	add	r30, r30
     aba:	ff 1f       	adc	r31, r31
     abc:	e1 5d       	subi	r30, 0xD1	; 209
     abe:	fe 4f       	sbci	r31, 0xFE	; 254
     ac0:	04 80       	ldd	r0, Z+4	; 0x04
     ac2:	f5 81       	ldd	r31, Z+5	; 0x05
     ac4:	e0 2d       	mov	r30, r0
     ac6:	80 81       	ld	r24, Z
     ac8:	88 60       	ori	r24, 0x08	; 8
     aca:	80 83       	st	Z, r24
     acc:	c2 0f       	add	r28, r18
     ace:	d3 1f       	adc	r29, r19
     ad0:	cc 0f       	add	r28, r28
     ad2:	dd 1f       	adc	r29, r29
     ad4:	cc 0f       	add	r28, r28
     ad6:	dd 1f       	adc	r29, r29
     ad8:	c1 5d       	subi	r28, 0xD1	; 209
     ada:	de 4f       	sbci	r29, 0xFE	; 254
     adc:	ec 81       	ldd	r30, Y+4	; 0x04
     ade:	fd 81       	ldd	r31, Y+5	; 0x05
     ae0:	80 81       	ld	r24, Z
     ae2:	80 61       	ori	r24, 0x10	; 16
     ae4:	80 83       	st	Z, r24
     ae6:	80 e0       	ldi	r24, 0x00	; 0
     ae8:	03 c0       	rjmp	.+6      	; 0xaf0 <UART_Init+0x3e8>
     aea:	81 e0       	ldi	r24, 0x01	; 1
     aec:	01 c0       	rjmp	.+2      	; 0xaf0 <UART_Init+0x3e8>
     aee:	80 e0       	ldi	r24, 0x00	; 0
     af0:	df 91       	pop	r29
     af2:	cf 91       	pop	r28
     af4:	1f 91       	pop	r17
     af6:	0f 91       	pop	r16
     af8:	ff 90       	pop	r15
     afa:	ef 90       	pop	r14
     afc:	df 90       	pop	r13
     afe:	cf 90       	pop	r12
     b00:	08 95       	ret

00000b02 <UART_Transmit>:
     b02:	af 92       	push	r10
     b04:	bf 92       	push	r11
     b06:	cf 92       	push	r12
     b08:	df 92       	push	r13
     b0a:	ef 92       	push	r14
     b0c:	ff 92       	push	r15
     b0e:	0f 93       	push	r16
     b10:	1f 93       	push	r17
     b12:	cf 93       	push	r28
     b14:	df 93       	push	r29
     b16:	8c 01       	movw	r16, r24
     b18:	ec 01       	movw	r28, r24
     b1a:	88 81       	ld	r24, Y
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	1e 8a       	std	Y+22, r1	; 0x16
     b20:	5f 87       	std	Y+15, r21	; 0x0f
     b22:	4e 87       	std	Y+14, r20	; 0x0e
     b24:	5b 8b       	std	Y+19, r21	; 0x13
     b26:	4a 8b       	std	Y+18, r20	; 0x12
     b28:	2d 81       	ldd	r18, Y+5	; 0x05
     b2a:	24 30       	cpi	r18, 0x04	; 4
     b2c:	41 f4       	brne	.+16     	; 0xb3e <UART_Transmit+0x3c>
     b2e:	2f 81       	ldd	r18, Y+7	; 0x07
     b30:	21 11       	cpse	r18, r1
     b32:	08 c0       	rjmp	.+16     	; 0xb44 <UART_Transmit+0x42>
     b34:	e6 2e       	mov	r14, r22
     b36:	f7 2e       	mov	r15, r23
     b38:	60 e0       	ldi	r22, 0x00	; 0
     b3a:	70 e0       	ldi	r23, 0x00	; 0
     b3c:	05 c0       	rjmp	.+10     	; 0xb48 <UART_Transmit+0x46>
     b3e:	e1 2c       	mov	r14, r1
     b40:	f1 2c       	mov	r15, r1
     b42:	02 c0       	rjmp	.+4      	; 0xb48 <UART_Transmit+0x46>
     b44:	e1 2c       	mov	r14, r1
     b46:	f1 2c       	mov	r15, r1
     b48:	45 2b       	or	r20, r21
     b4a:	a9 f1       	breq	.+106    	; 0xbb6 <UART_Transmit+0xb4>
     b4c:	a6 2e       	mov	r10, r22
     b4e:	b7 2e       	mov	r11, r23
     b50:	d7 01       	movw	r26, r14
     b52:	20 e0       	ldi	r18, 0x00	; 0
     b54:	30 e0       	ldi	r19, 0x00	; 0
     b56:	bc 01       	movw	r22, r24
     b58:	66 0f       	add	r22, r22
     b5a:	77 1f       	adc	r23, r23
     b5c:	68 0f       	add	r22, r24
     b5e:	79 1f       	adc	r23, r25
     b60:	66 0f       	add	r22, r22
     b62:	77 1f       	adc	r23, r23
     b64:	66 0f       	add	r22, r22
     b66:	77 1f       	adc	r23, r23
     b68:	61 5d       	subi	r22, 0xD1	; 209
     b6a:	7e 4f       	sbci	r23, 0xFE	; 254
     b6c:	6b 01       	movw	r12, r22
     b6e:	d2 e0       	ldi	r29, 0x02	; 2
     b70:	cd 0e       	add	r12, r29
     b72:	d1 1c       	adc	r13, r1
     b74:	e6 01       	movw	r28, r12
     b76:	e8 81       	ld	r30, Y
     b78:	f9 81       	ldd	r31, Y+1	; 0x01
     b7a:	90 81       	ld	r25, Z
     b7c:	95 ff       	sbrs	r25, 5
     b7e:	fd cf       	rjmp	.-6      	; 0xb7a <UART_Transmit+0x78>
     b80:	e1 14       	cp	r14, r1
     b82:	f1 04       	cpc	r15, r1
     b84:	39 f4       	brne	.+14     	; 0xb94 <UART_Transmit+0x92>
     b86:	eb 01       	movw	r28, r22
     b88:	e8 81       	ld	r30, Y
     b8a:	f9 81       	ldd	r31, Y+1	; 0x01
     b8c:	e5 01       	movw	r28, r10
     b8e:	88 81       	ld	r24, Y
     b90:	80 83       	st	Z, r24
     b92:	05 c0       	rjmp	.+10     	; 0xb9e <UART_Transmit+0x9c>
     b94:	eb 01       	movw	r28, r22
     b96:	e8 81       	ld	r30, Y
     b98:	f9 81       	ldd	r31, Y+1	; 0x01
     b9a:	8c 91       	ld	r24, X
     b9c:	80 83       	st	Z, r24
     b9e:	2f 5f       	subi	r18, 0xFF	; 255
     ba0:	3f 4f       	sbci	r19, 0xFF	; 255
     ba2:	df ef       	ldi	r29, 0xFF	; 255
     ba4:	ad 1a       	sub	r10, r29
     ba6:	bd 0a       	sbc	r11, r29
     ba8:	12 96       	adiw	r26, 0x02	; 2
     baa:	f8 01       	movw	r30, r16
     bac:	42 89       	ldd	r20, Z+18	; 0x12
     bae:	53 89       	ldd	r21, Z+19	; 0x13
     bb0:	24 17       	cp	r18, r20
     bb2:	35 07       	cpc	r19, r21
     bb4:	f8 f2       	brcs	.-66     	; 0xb74 <UART_Transmit+0x72>
     bb6:	80 e0       	ldi	r24, 0x00	; 0
     bb8:	df 91       	pop	r29
     bba:	cf 91       	pop	r28
     bbc:	1f 91       	pop	r17
     bbe:	0f 91       	pop	r16
     bc0:	ff 90       	pop	r15
     bc2:	ef 90       	pop	r14
     bc4:	df 90       	pop	r13
     bc6:	cf 90       	pop	r12
     bc8:	bf 90       	pop	r11
     bca:	af 90       	pop	r10
     bcc:	08 95       	ret

00000bce <UART_Receive>:
     bce:	cf 92       	push	r12
     bd0:	df 92       	push	r13
     bd2:	ef 92       	push	r14
     bd4:	ff 92       	push	r15
     bd6:	0f 93       	push	r16
     bd8:	1f 93       	push	r17
     bda:	cf 93       	push	r28
     bdc:	df 93       	push	r29
     bde:	7c 01       	movw	r14, r24
     be0:	fc 01       	movw	r30, r24
     be2:	80 81       	ld	r24, Z
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	16 8a       	std	Z+22, r1	; 0x16
     be8:	51 8b       	std	Z+17, r21	; 0x11
     bea:	40 8b       	std	Z+16, r20	; 0x10
     bec:	55 8b       	std	Z+21, r21	; 0x15
     bee:	44 8b       	std	Z+20, r20	; 0x14
     bf0:	25 81       	ldd	r18, Z+5	; 0x05
     bf2:	24 30       	cpi	r18, 0x04	; 4
     bf4:	41 f4       	brne	.+16     	; 0xc06 <UART_Receive+0x38>
     bf6:	27 81       	ldd	r18, Z+7	; 0x07
     bf8:	21 11       	cpse	r18, r1
     bfa:	08 c0       	rjmp	.+16     	; 0xc0c <UART_Receive+0x3e>
     bfc:	06 2f       	mov	r16, r22
     bfe:	17 2f       	mov	r17, r23
     c00:	60 e0       	ldi	r22, 0x00	; 0
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	05 c0       	rjmp	.+10     	; 0xc10 <UART_Receive+0x42>
     c06:	00 e0       	ldi	r16, 0x00	; 0
     c08:	10 e0       	ldi	r17, 0x00	; 0
     c0a:	02 c0       	rjmp	.+4      	; 0xc10 <UART_Receive+0x42>
     c0c:	00 e0       	ldi	r16, 0x00	; 0
     c0e:	10 e0       	ldi	r17, 0x00	; 0
     c10:	f7 01       	movw	r30, r14
     c12:	22 89       	ldd	r18, Z+18	; 0x12
     c14:	33 89       	ldd	r19, Z+19	; 0x13
     c16:	23 2b       	or	r18, r19
     c18:	b1 f1       	breq	.+108    	; 0xc86 <UART_Receive+0xb8>
     c1a:	a8 01       	movw	r20, r16
     c1c:	c6 2e       	mov	r12, r22
     c1e:	d7 2e       	mov	r13, r23
     c20:	60 e0       	ldi	r22, 0x00	; 0
     c22:	70 e0       	ldi	r23, 0x00	; 0
     c24:	ec 01       	movw	r28, r24
     c26:	cc 0f       	add	r28, r28
     c28:	dd 1f       	adc	r29, r29
     c2a:	c8 0f       	add	r28, r24
     c2c:	d9 1f       	adc	r29, r25
     c2e:	cc 0f       	add	r28, r28
     c30:	dd 1f       	adc	r29, r29
     c32:	cc 0f       	add	r28, r28
     c34:	dd 1f       	adc	r29, r29
     c36:	c1 5d       	subi	r28, 0xD1	; 209
     c38:	de 4f       	sbci	r29, 0xFE	; 254
     c3a:	de 01       	movw	r26, r28
     c3c:	12 96       	adiw	r26, 0x02	; 2
     c3e:	10 c0       	rjmp	.+32     	; 0xc60 <UART_Receive+0x92>
     c40:	01 15       	cp	r16, r1
     c42:	11 05       	cpc	r17, r1
     c44:	31 f4       	brne	.+12     	; 0xc52 <UART_Receive+0x84>
     c46:	e8 81       	ld	r30, Y
     c48:	f9 81       	ldd	r31, Y+1	; 0x01
     c4a:	80 81       	ld	r24, Z
     c4c:	f6 01       	movw	r30, r12
     c4e:	80 83       	st	Z, r24
     c50:	07 c0       	rjmp	.+14     	; 0xc60 <UART_Receive+0x92>
     c52:	e8 81       	ld	r30, Y
     c54:	f9 81       	ldd	r31, Y+1	; 0x01
     c56:	20 81       	ld	r18, Z
     c58:	30 e0       	ldi	r19, 0x00	; 0
     c5a:	fa 01       	movw	r30, r20
     c5c:	31 83       	std	Z+1, r19	; 0x01
     c5e:	20 83       	st	Z, r18
     c60:	ed 91       	ld	r30, X+
     c62:	fc 91       	ld	r31, X
     c64:	11 97       	sbiw	r26, 0x01	; 1
     c66:	90 81       	ld	r25, Z
     c68:	99 23       	and	r25, r25
     c6a:	54 f7       	brge	.-44     	; 0xc40 <UART_Receive+0x72>
     c6c:	6f 5f       	subi	r22, 0xFF	; 255
     c6e:	7f 4f       	sbci	r23, 0xFF	; 255
     c70:	4e 5f       	subi	r20, 0xFE	; 254
     c72:	5f 4f       	sbci	r21, 0xFF	; 255
     c74:	ff ef       	ldi	r31, 0xFF	; 255
     c76:	cf 1a       	sub	r12, r31
     c78:	df 0a       	sbc	r13, r31
     c7a:	f7 01       	movw	r30, r14
     c7c:	82 89       	ldd	r24, Z+18	; 0x12
     c7e:	93 89       	ldd	r25, Z+19	; 0x13
     c80:	68 17       	cp	r22, r24
     c82:	79 07       	cpc	r23, r25
     c84:	68 f3       	brcs	.-38     	; 0xc60 <UART_Receive+0x92>
     c86:	80 e0       	ldi	r24, 0x00	; 0
     c88:	df 91       	pop	r29
     c8a:	cf 91       	pop	r28
     c8c:	1f 91       	pop	r17
     c8e:	0f 91       	pop	r16
     c90:	ff 90       	pop	r15
     c92:	ef 90       	pop	r14
     c94:	df 90       	pop	r13
     c96:	cf 90       	pop	r12
     c98:	08 95       	ret

00000c9a <UART_Receive_IT>:
     c9a:	fc 01       	movw	r30, r24
     c9c:	20 81       	ld	r18, Z
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	75 87       	std	Z+13, r23	; 0x0d
     ca2:	64 87       	std	Z+12, r22	; 0x0c
     ca4:	51 8b       	std	Z+17, r21	; 0x11
     ca6:	40 8b       	std	Z+16, r20	; 0x10
     ca8:	55 8b       	std	Z+21, r21	; 0x15
     caa:	44 8b       	std	Z+20, r20	; 0x14
     cac:	f9 01       	movw	r30, r18
     cae:	ee 0f       	add	r30, r30
     cb0:	ff 1f       	adc	r31, r31
     cb2:	e2 0f       	add	r30, r18
     cb4:	f3 1f       	adc	r31, r19
     cb6:	ee 0f       	add	r30, r30
     cb8:	ff 1f       	adc	r31, r31
     cba:	ee 0f       	add	r30, r30
     cbc:	ff 1f       	adc	r31, r31
     cbe:	e1 5d       	subi	r30, 0xD1	; 209
     cc0:	fe 4f       	sbci	r31, 0xFE	; 254
     cc2:	04 80       	ldd	r0, Z+4	; 0x04
     cc4:	f5 81       	ldd	r31, Z+5	; 0x05
     cc6:	e0 2d       	mov	r30, r0
     cc8:	80 81       	ld	r24, Z
     cca:	80 68       	ori	r24, 0x80	; 128
     ccc:	80 83       	st	Z, r24
     cce:	80 e0       	ldi	r24, 0x00	; 0
     cd0:	08 95       	ret

00000cd2 <UART_TxIRQHandler>:
     cd2:	98 cc       	rjmp	.-1744   	; 0x604 <UART_TxCpltCallback>
     cd4:	08 95       	ret

00000cd6 <UART_RxIRQHandler>:
{
	UART_TxCpltCallback(huart);
}

void UART_RxIRQHandler(UART_HandleTypeDef *huart)
{
     cd6:	0f 93       	push	r16
     cd8:	1f 93       	push	r17
     cda:	cf 93       	push	r28
     cdc:	df 93       	push	r29
     cde:	ec 01       	movw	r28, r24
	UART_Receive(huart, huart->pRxBuffPtr, huart->RxXferSize, 100);
     ce0:	48 89       	ldd	r20, Y+16	; 0x10
     ce2:	59 89       	ldd	r21, Y+17	; 0x11
     ce4:	6c 85       	ldd	r22, Y+12	; 0x0c
     ce6:	7d 85       	ldd	r23, Y+13	; 0x0d
     ce8:	04 e6       	ldi	r16, 0x64	; 100
     cea:	10 e0       	ldi	r17, 0x00	; 0
     cec:	20 e0       	ldi	r18, 0x00	; 0
     cee:	30 e0       	ldi	r19, 0x00	; 0
     cf0:	6e df       	rcall	.-292    	; 0xbce <UART_Receive>
	UART_RxCpltCallback(huart);
     cf2:	ce 01       	movw	r24, r28
     cf4:	88 dc       	rcall	.-1776   	; 0x606 <UART_RxCpltCallback>
}
     cf6:	df 91       	pop	r29
     cf8:	cf 91       	pop	r28
     cfa:	1f 91       	pop	r17
     cfc:	0f 91       	pop	r16
     cfe:	08 95       	ret

00000d00 <main>:
#include "main.h"


int main(void)
{
    hwInit();
     d00:	90 dc       	rcall	.-1760   	; 0x622 <hwInit>
	apInit();
     d02:	e3 d9       	rcall	.-3130   	; 0xca <apInit>
	
	apMain();
     d04:	ea d9       	rcall	.-3116   	; 0xda <apMain>
     d06:	80 e0       	ldi	r24, 0x00	; 0
}
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	08 95       	ret

00000d0c <__subsf3>:
     d0c:	50 58       	subi	r21, 0x80	; 128

00000d0e <__addsf3>:
     d0e:	bb 27       	eor	r27, r27
     d10:	aa 27       	eor	r26, r26
     d12:	0e d0       	rcall	.+28     	; 0xd30 <__addsf3x>
     d14:	48 c1       	rjmp	.+656    	; 0xfa6 <__fp_round>
     d16:	39 d1       	rcall	.+626    	; 0xf8a <__fp_pscA>
     d18:	30 f0       	brcs	.+12     	; 0xd26 <__addsf3+0x18>
     d1a:	3e d1       	rcall	.+636    	; 0xf98 <__fp_pscB>
     d1c:	20 f0       	brcs	.+8      	; 0xd26 <__addsf3+0x18>
     d1e:	31 f4       	brne	.+12     	; 0xd2c <__addsf3+0x1e>
     d20:	9f 3f       	cpi	r25, 0xFF	; 255
     d22:	11 f4       	brne	.+4      	; 0xd28 <__addsf3+0x1a>
     d24:	1e f4       	brtc	.+6      	; 0xd2c <__addsf3+0x1e>
     d26:	2e c1       	rjmp	.+604    	; 0xf84 <__fp_nan>
     d28:	0e f4       	brtc	.+2      	; 0xd2c <__addsf3+0x1e>
     d2a:	e0 95       	com	r30
     d2c:	e7 fb       	bst	r30, 7
     d2e:	24 c1       	rjmp	.+584    	; 0xf78 <__fp_inf>

00000d30 <__addsf3x>:
     d30:	e9 2f       	mov	r30, r25
     d32:	4a d1       	rcall	.+660    	; 0xfc8 <__fp_split3>
     d34:	80 f3       	brcs	.-32     	; 0xd16 <__addsf3+0x8>
     d36:	ba 17       	cp	r27, r26
     d38:	62 07       	cpc	r22, r18
     d3a:	73 07       	cpc	r23, r19
     d3c:	84 07       	cpc	r24, r20
     d3e:	95 07       	cpc	r25, r21
     d40:	18 f0       	brcs	.+6      	; 0xd48 <__addsf3x+0x18>
     d42:	71 f4       	brne	.+28     	; 0xd60 <__addsf3x+0x30>
     d44:	9e f5       	brtc	.+102    	; 0xdac <__addsf3x+0x7c>
     d46:	62 c1       	rjmp	.+708    	; 0x100c <__fp_zero>
     d48:	0e f4       	brtc	.+2      	; 0xd4c <__addsf3x+0x1c>
     d4a:	e0 95       	com	r30
     d4c:	0b 2e       	mov	r0, r27
     d4e:	ba 2f       	mov	r27, r26
     d50:	a0 2d       	mov	r26, r0
     d52:	0b 01       	movw	r0, r22
     d54:	b9 01       	movw	r22, r18
     d56:	90 01       	movw	r18, r0
     d58:	0c 01       	movw	r0, r24
     d5a:	ca 01       	movw	r24, r20
     d5c:	a0 01       	movw	r20, r0
     d5e:	11 24       	eor	r1, r1
     d60:	ff 27       	eor	r31, r31
     d62:	59 1b       	sub	r21, r25
     d64:	99 f0       	breq	.+38     	; 0xd8c <__addsf3x+0x5c>
     d66:	59 3f       	cpi	r21, 0xF9	; 249
     d68:	50 f4       	brcc	.+20     	; 0xd7e <__addsf3x+0x4e>
     d6a:	50 3e       	cpi	r21, 0xE0	; 224
     d6c:	68 f1       	brcs	.+90     	; 0xdc8 <__addsf3x+0x98>
     d6e:	1a 16       	cp	r1, r26
     d70:	f0 40       	sbci	r31, 0x00	; 0
     d72:	a2 2f       	mov	r26, r18
     d74:	23 2f       	mov	r18, r19
     d76:	34 2f       	mov	r19, r20
     d78:	44 27       	eor	r20, r20
     d7a:	58 5f       	subi	r21, 0xF8	; 248
     d7c:	f3 cf       	rjmp	.-26     	; 0xd64 <__addsf3x+0x34>
     d7e:	46 95       	lsr	r20
     d80:	37 95       	ror	r19
     d82:	27 95       	ror	r18
     d84:	a7 95       	ror	r26
     d86:	f0 40       	sbci	r31, 0x00	; 0
     d88:	53 95       	inc	r21
     d8a:	c9 f7       	brne	.-14     	; 0xd7e <__addsf3x+0x4e>
     d8c:	7e f4       	brtc	.+30     	; 0xdac <__addsf3x+0x7c>
     d8e:	1f 16       	cp	r1, r31
     d90:	ba 0b       	sbc	r27, r26
     d92:	62 0b       	sbc	r22, r18
     d94:	73 0b       	sbc	r23, r19
     d96:	84 0b       	sbc	r24, r20
     d98:	ba f0       	brmi	.+46     	; 0xdc8 <__addsf3x+0x98>
     d9a:	91 50       	subi	r25, 0x01	; 1
     d9c:	a1 f0       	breq	.+40     	; 0xdc6 <__addsf3x+0x96>
     d9e:	ff 0f       	add	r31, r31
     da0:	bb 1f       	adc	r27, r27
     da2:	66 1f       	adc	r22, r22
     da4:	77 1f       	adc	r23, r23
     da6:	88 1f       	adc	r24, r24
     da8:	c2 f7       	brpl	.-16     	; 0xd9a <__addsf3x+0x6a>
     daa:	0e c0       	rjmp	.+28     	; 0xdc8 <__addsf3x+0x98>
     dac:	ba 0f       	add	r27, r26
     dae:	62 1f       	adc	r22, r18
     db0:	73 1f       	adc	r23, r19
     db2:	84 1f       	adc	r24, r20
     db4:	48 f4       	brcc	.+18     	; 0xdc8 <__addsf3x+0x98>
     db6:	87 95       	ror	r24
     db8:	77 95       	ror	r23
     dba:	67 95       	ror	r22
     dbc:	b7 95       	ror	r27
     dbe:	f7 95       	ror	r31
     dc0:	9e 3f       	cpi	r25, 0xFE	; 254
     dc2:	08 f0       	brcs	.+2      	; 0xdc6 <__addsf3x+0x96>
     dc4:	b3 cf       	rjmp	.-154    	; 0xd2c <__addsf3+0x1e>
     dc6:	93 95       	inc	r25
     dc8:	88 0f       	add	r24, r24
     dca:	08 f0       	brcs	.+2      	; 0xdce <__addsf3x+0x9e>
     dcc:	99 27       	eor	r25, r25
     dce:	ee 0f       	add	r30, r30
     dd0:	97 95       	ror	r25
     dd2:	87 95       	ror	r24
     dd4:	08 95       	ret

00000dd6 <__divsf3>:
     dd6:	0c d0       	rcall	.+24     	; 0xdf0 <__divsf3x>
     dd8:	e6 c0       	rjmp	.+460    	; 0xfa6 <__fp_round>
     dda:	de d0       	rcall	.+444    	; 0xf98 <__fp_pscB>
     ddc:	40 f0       	brcs	.+16     	; 0xdee <__divsf3+0x18>
     dde:	d5 d0       	rcall	.+426    	; 0xf8a <__fp_pscA>
     de0:	30 f0       	brcs	.+12     	; 0xdee <__divsf3+0x18>
     de2:	21 f4       	brne	.+8      	; 0xdec <__divsf3+0x16>
     de4:	5f 3f       	cpi	r21, 0xFF	; 255
     de6:	19 f0       	breq	.+6      	; 0xdee <__divsf3+0x18>
     de8:	c7 c0       	rjmp	.+398    	; 0xf78 <__fp_inf>
     dea:	51 11       	cpse	r21, r1
     dec:	10 c1       	rjmp	.+544    	; 0x100e <__fp_szero>
     dee:	ca c0       	rjmp	.+404    	; 0xf84 <__fp_nan>

00000df0 <__divsf3x>:
     df0:	eb d0       	rcall	.+470    	; 0xfc8 <__fp_split3>
     df2:	98 f3       	brcs	.-26     	; 0xdda <__divsf3+0x4>

00000df4 <__divsf3_pse>:
     df4:	99 23       	and	r25, r25
     df6:	c9 f3       	breq	.-14     	; 0xdea <__divsf3+0x14>
     df8:	55 23       	and	r21, r21
     dfa:	b1 f3       	breq	.-20     	; 0xde8 <__divsf3+0x12>
     dfc:	95 1b       	sub	r25, r21
     dfe:	55 0b       	sbc	r21, r21
     e00:	bb 27       	eor	r27, r27
     e02:	aa 27       	eor	r26, r26
     e04:	62 17       	cp	r22, r18
     e06:	73 07       	cpc	r23, r19
     e08:	84 07       	cpc	r24, r20
     e0a:	38 f0       	brcs	.+14     	; 0xe1a <__divsf3_pse+0x26>
     e0c:	9f 5f       	subi	r25, 0xFF	; 255
     e0e:	5f 4f       	sbci	r21, 0xFF	; 255
     e10:	22 0f       	add	r18, r18
     e12:	33 1f       	adc	r19, r19
     e14:	44 1f       	adc	r20, r20
     e16:	aa 1f       	adc	r26, r26
     e18:	a9 f3       	breq	.-22     	; 0xe04 <__divsf3_pse+0x10>
     e1a:	33 d0       	rcall	.+102    	; 0xe82 <__divsf3_pse+0x8e>
     e1c:	0e 2e       	mov	r0, r30
     e1e:	3a f0       	brmi	.+14     	; 0xe2e <__divsf3_pse+0x3a>
     e20:	e0 e8       	ldi	r30, 0x80	; 128
     e22:	30 d0       	rcall	.+96     	; 0xe84 <__divsf3_pse+0x90>
     e24:	91 50       	subi	r25, 0x01	; 1
     e26:	50 40       	sbci	r21, 0x00	; 0
     e28:	e6 95       	lsr	r30
     e2a:	00 1c       	adc	r0, r0
     e2c:	ca f7       	brpl	.-14     	; 0xe20 <__divsf3_pse+0x2c>
     e2e:	29 d0       	rcall	.+82     	; 0xe82 <__divsf3_pse+0x8e>
     e30:	fe 2f       	mov	r31, r30
     e32:	27 d0       	rcall	.+78     	; 0xe82 <__divsf3_pse+0x8e>
     e34:	66 0f       	add	r22, r22
     e36:	77 1f       	adc	r23, r23
     e38:	88 1f       	adc	r24, r24
     e3a:	bb 1f       	adc	r27, r27
     e3c:	26 17       	cp	r18, r22
     e3e:	37 07       	cpc	r19, r23
     e40:	48 07       	cpc	r20, r24
     e42:	ab 07       	cpc	r26, r27
     e44:	b0 e8       	ldi	r27, 0x80	; 128
     e46:	09 f0       	breq	.+2      	; 0xe4a <__divsf3_pse+0x56>
     e48:	bb 0b       	sbc	r27, r27
     e4a:	80 2d       	mov	r24, r0
     e4c:	bf 01       	movw	r22, r30
     e4e:	ff 27       	eor	r31, r31
     e50:	93 58       	subi	r25, 0x83	; 131
     e52:	5f 4f       	sbci	r21, 0xFF	; 255
     e54:	2a f0       	brmi	.+10     	; 0xe60 <__divsf3_pse+0x6c>
     e56:	9e 3f       	cpi	r25, 0xFE	; 254
     e58:	51 05       	cpc	r21, r1
     e5a:	68 f0       	brcs	.+26     	; 0xe76 <__divsf3_pse+0x82>
     e5c:	8d c0       	rjmp	.+282    	; 0xf78 <__fp_inf>
     e5e:	d7 c0       	rjmp	.+430    	; 0x100e <__fp_szero>
     e60:	5f 3f       	cpi	r21, 0xFF	; 255
     e62:	ec f3       	brlt	.-6      	; 0xe5e <__divsf3_pse+0x6a>
     e64:	98 3e       	cpi	r25, 0xE8	; 232
     e66:	dc f3       	brlt	.-10     	; 0xe5e <__divsf3_pse+0x6a>
     e68:	86 95       	lsr	r24
     e6a:	77 95       	ror	r23
     e6c:	67 95       	ror	r22
     e6e:	b7 95       	ror	r27
     e70:	f7 95       	ror	r31
     e72:	9f 5f       	subi	r25, 0xFF	; 255
     e74:	c9 f7       	brne	.-14     	; 0xe68 <__divsf3_pse+0x74>
     e76:	88 0f       	add	r24, r24
     e78:	91 1d       	adc	r25, r1
     e7a:	96 95       	lsr	r25
     e7c:	87 95       	ror	r24
     e7e:	97 f9       	bld	r25, 7
     e80:	08 95       	ret
     e82:	e1 e0       	ldi	r30, 0x01	; 1
     e84:	66 0f       	add	r22, r22
     e86:	77 1f       	adc	r23, r23
     e88:	88 1f       	adc	r24, r24
     e8a:	bb 1f       	adc	r27, r27
     e8c:	62 17       	cp	r22, r18
     e8e:	73 07       	cpc	r23, r19
     e90:	84 07       	cpc	r24, r20
     e92:	ba 07       	cpc	r27, r26
     e94:	20 f0       	brcs	.+8      	; 0xe9e <__divsf3_pse+0xaa>
     e96:	62 1b       	sub	r22, r18
     e98:	73 0b       	sbc	r23, r19
     e9a:	84 0b       	sbc	r24, r20
     e9c:	ba 0b       	sbc	r27, r26
     e9e:	ee 1f       	adc	r30, r30
     ea0:	88 f7       	brcc	.-30     	; 0xe84 <__divsf3_pse+0x90>
     ea2:	e0 95       	com	r30
     ea4:	08 95       	ret

00000ea6 <__fixunssfsi>:
     ea6:	98 d0       	rcall	.+304    	; 0xfd8 <__fp_splitA>
     ea8:	88 f0       	brcs	.+34     	; 0xecc <__fixunssfsi+0x26>
     eaa:	9f 57       	subi	r25, 0x7F	; 127
     eac:	90 f0       	brcs	.+36     	; 0xed2 <__fixunssfsi+0x2c>
     eae:	b9 2f       	mov	r27, r25
     eb0:	99 27       	eor	r25, r25
     eb2:	b7 51       	subi	r27, 0x17	; 23
     eb4:	a0 f0       	brcs	.+40     	; 0xede <__fixunssfsi+0x38>
     eb6:	d1 f0       	breq	.+52     	; 0xeec <__fixunssfsi+0x46>
     eb8:	66 0f       	add	r22, r22
     eba:	77 1f       	adc	r23, r23
     ebc:	88 1f       	adc	r24, r24
     ebe:	99 1f       	adc	r25, r25
     ec0:	1a f0       	brmi	.+6      	; 0xec8 <__fixunssfsi+0x22>
     ec2:	ba 95       	dec	r27
     ec4:	c9 f7       	brne	.-14     	; 0xeb8 <__fixunssfsi+0x12>
     ec6:	12 c0       	rjmp	.+36     	; 0xeec <__fixunssfsi+0x46>
     ec8:	b1 30       	cpi	r27, 0x01	; 1
     eca:	81 f0       	breq	.+32     	; 0xeec <__fixunssfsi+0x46>
     ecc:	9f d0       	rcall	.+318    	; 0x100c <__fp_zero>
     ece:	b1 e0       	ldi	r27, 0x01	; 1
     ed0:	08 95       	ret
     ed2:	9c c0       	rjmp	.+312    	; 0x100c <__fp_zero>
     ed4:	67 2f       	mov	r22, r23
     ed6:	78 2f       	mov	r23, r24
     ed8:	88 27       	eor	r24, r24
     eda:	b8 5f       	subi	r27, 0xF8	; 248
     edc:	39 f0       	breq	.+14     	; 0xeec <__fixunssfsi+0x46>
     ede:	b9 3f       	cpi	r27, 0xF9	; 249
     ee0:	cc f3       	brlt	.-14     	; 0xed4 <__fixunssfsi+0x2e>
     ee2:	86 95       	lsr	r24
     ee4:	77 95       	ror	r23
     ee6:	67 95       	ror	r22
     ee8:	b3 95       	inc	r27
     eea:	d9 f7       	brne	.-10     	; 0xee2 <__fixunssfsi+0x3c>
     eec:	3e f4       	brtc	.+14     	; 0xefc <__fixunssfsi+0x56>
     eee:	90 95       	com	r25
     ef0:	80 95       	com	r24
     ef2:	70 95       	com	r23
     ef4:	61 95       	neg	r22
     ef6:	7f 4f       	sbci	r23, 0xFF	; 255
     ef8:	8f 4f       	sbci	r24, 0xFF	; 255
     efa:	9f 4f       	sbci	r25, 0xFF	; 255
     efc:	08 95       	ret

00000efe <__floatunsisf>:
     efe:	e8 94       	clt
     f00:	09 c0       	rjmp	.+18     	; 0xf14 <__floatsisf+0x12>

00000f02 <__floatsisf>:
     f02:	97 fb       	bst	r25, 7
     f04:	3e f4       	brtc	.+14     	; 0xf14 <__floatsisf+0x12>
     f06:	90 95       	com	r25
     f08:	80 95       	com	r24
     f0a:	70 95       	com	r23
     f0c:	61 95       	neg	r22
     f0e:	7f 4f       	sbci	r23, 0xFF	; 255
     f10:	8f 4f       	sbci	r24, 0xFF	; 255
     f12:	9f 4f       	sbci	r25, 0xFF	; 255
     f14:	99 23       	and	r25, r25
     f16:	a9 f0       	breq	.+42     	; 0xf42 <__floatsisf+0x40>
     f18:	f9 2f       	mov	r31, r25
     f1a:	96 e9       	ldi	r25, 0x96	; 150
     f1c:	bb 27       	eor	r27, r27
     f1e:	93 95       	inc	r25
     f20:	f6 95       	lsr	r31
     f22:	87 95       	ror	r24
     f24:	77 95       	ror	r23
     f26:	67 95       	ror	r22
     f28:	b7 95       	ror	r27
     f2a:	f1 11       	cpse	r31, r1
     f2c:	f8 cf       	rjmp	.-16     	; 0xf1e <__floatsisf+0x1c>
     f2e:	fa f4       	brpl	.+62     	; 0xf6e <__floatsisf+0x6c>
     f30:	bb 0f       	add	r27, r27
     f32:	11 f4       	brne	.+4      	; 0xf38 <__floatsisf+0x36>
     f34:	60 ff       	sbrs	r22, 0
     f36:	1b c0       	rjmp	.+54     	; 0xf6e <__floatsisf+0x6c>
     f38:	6f 5f       	subi	r22, 0xFF	; 255
     f3a:	7f 4f       	sbci	r23, 0xFF	; 255
     f3c:	8f 4f       	sbci	r24, 0xFF	; 255
     f3e:	9f 4f       	sbci	r25, 0xFF	; 255
     f40:	16 c0       	rjmp	.+44     	; 0xf6e <__floatsisf+0x6c>
     f42:	88 23       	and	r24, r24
     f44:	11 f0       	breq	.+4      	; 0xf4a <__floatsisf+0x48>
     f46:	96 e9       	ldi	r25, 0x96	; 150
     f48:	11 c0       	rjmp	.+34     	; 0xf6c <__floatsisf+0x6a>
     f4a:	77 23       	and	r23, r23
     f4c:	21 f0       	breq	.+8      	; 0xf56 <__floatsisf+0x54>
     f4e:	9e e8       	ldi	r25, 0x8E	; 142
     f50:	87 2f       	mov	r24, r23
     f52:	76 2f       	mov	r23, r22
     f54:	05 c0       	rjmp	.+10     	; 0xf60 <__floatsisf+0x5e>
     f56:	66 23       	and	r22, r22
     f58:	71 f0       	breq	.+28     	; 0xf76 <__floatsisf+0x74>
     f5a:	96 e8       	ldi	r25, 0x86	; 134
     f5c:	86 2f       	mov	r24, r22
     f5e:	70 e0       	ldi	r23, 0x00	; 0
     f60:	60 e0       	ldi	r22, 0x00	; 0
     f62:	2a f0       	brmi	.+10     	; 0xf6e <__floatsisf+0x6c>
     f64:	9a 95       	dec	r25
     f66:	66 0f       	add	r22, r22
     f68:	77 1f       	adc	r23, r23
     f6a:	88 1f       	adc	r24, r24
     f6c:	da f7       	brpl	.-10     	; 0xf64 <__floatsisf+0x62>
     f6e:	88 0f       	add	r24, r24
     f70:	96 95       	lsr	r25
     f72:	87 95       	ror	r24
     f74:	97 f9       	bld	r25, 7
     f76:	08 95       	ret

00000f78 <__fp_inf>:
     f78:	97 f9       	bld	r25, 7
     f7a:	9f 67       	ori	r25, 0x7F	; 127
     f7c:	80 e8       	ldi	r24, 0x80	; 128
     f7e:	70 e0       	ldi	r23, 0x00	; 0
     f80:	60 e0       	ldi	r22, 0x00	; 0
     f82:	08 95       	ret

00000f84 <__fp_nan>:
     f84:	9f ef       	ldi	r25, 0xFF	; 255
     f86:	80 ec       	ldi	r24, 0xC0	; 192
     f88:	08 95       	ret

00000f8a <__fp_pscA>:
     f8a:	00 24       	eor	r0, r0
     f8c:	0a 94       	dec	r0
     f8e:	16 16       	cp	r1, r22
     f90:	17 06       	cpc	r1, r23
     f92:	18 06       	cpc	r1, r24
     f94:	09 06       	cpc	r0, r25
     f96:	08 95       	ret

00000f98 <__fp_pscB>:
     f98:	00 24       	eor	r0, r0
     f9a:	0a 94       	dec	r0
     f9c:	12 16       	cp	r1, r18
     f9e:	13 06       	cpc	r1, r19
     fa0:	14 06       	cpc	r1, r20
     fa2:	05 06       	cpc	r0, r21
     fa4:	08 95       	ret

00000fa6 <__fp_round>:
     fa6:	09 2e       	mov	r0, r25
     fa8:	03 94       	inc	r0
     faa:	00 0c       	add	r0, r0
     fac:	11 f4       	brne	.+4      	; 0xfb2 <__fp_round+0xc>
     fae:	88 23       	and	r24, r24
     fb0:	52 f0       	brmi	.+20     	; 0xfc6 <__fp_round+0x20>
     fb2:	bb 0f       	add	r27, r27
     fb4:	40 f4       	brcc	.+16     	; 0xfc6 <__fp_round+0x20>
     fb6:	bf 2b       	or	r27, r31
     fb8:	11 f4       	brne	.+4      	; 0xfbe <__fp_round+0x18>
     fba:	60 ff       	sbrs	r22, 0
     fbc:	04 c0       	rjmp	.+8      	; 0xfc6 <__fp_round+0x20>
     fbe:	6f 5f       	subi	r22, 0xFF	; 255
     fc0:	7f 4f       	sbci	r23, 0xFF	; 255
     fc2:	8f 4f       	sbci	r24, 0xFF	; 255
     fc4:	9f 4f       	sbci	r25, 0xFF	; 255
     fc6:	08 95       	ret

00000fc8 <__fp_split3>:
     fc8:	57 fd       	sbrc	r21, 7
     fca:	90 58       	subi	r25, 0x80	; 128
     fcc:	44 0f       	add	r20, r20
     fce:	55 1f       	adc	r21, r21
     fd0:	59 f0       	breq	.+22     	; 0xfe8 <__fp_splitA+0x10>
     fd2:	5f 3f       	cpi	r21, 0xFF	; 255
     fd4:	71 f0       	breq	.+28     	; 0xff2 <__fp_splitA+0x1a>
     fd6:	47 95       	ror	r20

00000fd8 <__fp_splitA>:
     fd8:	88 0f       	add	r24, r24
     fda:	97 fb       	bst	r25, 7
     fdc:	99 1f       	adc	r25, r25
     fde:	61 f0       	breq	.+24     	; 0xff8 <__fp_splitA+0x20>
     fe0:	9f 3f       	cpi	r25, 0xFF	; 255
     fe2:	79 f0       	breq	.+30     	; 0x1002 <__fp_splitA+0x2a>
     fe4:	87 95       	ror	r24
     fe6:	08 95       	ret
     fe8:	12 16       	cp	r1, r18
     fea:	13 06       	cpc	r1, r19
     fec:	14 06       	cpc	r1, r20
     fee:	55 1f       	adc	r21, r21
     ff0:	f2 cf       	rjmp	.-28     	; 0xfd6 <__fp_split3+0xe>
     ff2:	46 95       	lsr	r20
     ff4:	f1 df       	rcall	.-30     	; 0xfd8 <__fp_splitA>
     ff6:	08 c0       	rjmp	.+16     	; 0x1008 <__fp_splitA+0x30>
     ff8:	16 16       	cp	r1, r22
     ffa:	17 06       	cpc	r1, r23
     ffc:	18 06       	cpc	r1, r24
     ffe:	99 1f       	adc	r25, r25
    1000:	f1 cf       	rjmp	.-30     	; 0xfe4 <__fp_splitA+0xc>
    1002:	86 95       	lsr	r24
    1004:	71 05       	cpc	r23, r1
    1006:	61 05       	cpc	r22, r1
    1008:	08 94       	sec
    100a:	08 95       	ret

0000100c <__fp_zero>:
    100c:	e8 94       	clt

0000100e <__fp_szero>:
    100e:	bb 27       	eor	r27, r27
    1010:	66 27       	eor	r22, r22
    1012:	77 27       	eor	r23, r23
    1014:	cb 01       	movw	r24, r22
    1016:	97 f9       	bld	r25, 7
    1018:	08 95       	ret

0000101a <__udivmodsi4>:
    101a:	a1 e2       	ldi	r26, 0x21	; 33
    101c:	1a 2e       	mov	r1, r26
    101e:	aa 1b       	sub	r26, r26
    1020:	bb 1b       	sub	r27, r27
    1022:	fd 01       	movw	r30, r26
    1024:	0d c0       	rjmp	.+26     	; 0x1040 <__udivmodsi4_ep>

00001026 <__udivmodsi4_loop>:
    1026:	aa 1f       	adc	r26, r26
    1028:	bb 1f       	adc	r27, r27
    102a:	ee 1f       	adc	r30, r30
    102c:	ff 1f       	adc	r31, r31
    102e:	a2 17       	cp	r26, r18
    1030:	b3 07       	cpc	r27, r19
    1032:	e4 07       	cpc	r30, r20
    1034:	f5 07       	cpc	r31, r21
    1036:	20 f0       	brcs	.+8      	; 0x1040 <__udivmodsi4_ep>
    1038:	a2 1b       	sub	r26, r18
    103a:	b3 0b       	sbc	r27, r19
    103c:	e4 0b       	sbc	r30, r20
    103e:	f5 0b       	sbc	r31, r21

00001040 <__udivmodsi4_ep>:
    1040:	66 1f       	adc	r22, r22
    1042:	77 1f       	adc	r23, r23
    1044:	88 1f       	adc	r24, r24
    1046:	99 1f       	adc	r25, r25
    1048:	1a 94       	dec	r1
    104a:	69 f7       	brne	.-38     	; 0x1026 <__udivmodsi4_loop>
    104c:	60 95       	com	r22
    104e:	70 95       	com	r23
    1050:	80 95       	com	r24
    1052:	90 95       	com	r25
    1054:	9b 01       	movw	r18, r22
    1056:	ac 01       	movw	r20, r24
    1058:	bd 01       	movw	r22, r26
    105a:	cf 01       	movw	r24, r30
    105c:	08 95       	ret

0000105e <vsnprintf>:
    105e:	0f 93       	push	r16
    1060:	1f 93       	push	r17
    1062:	cf 93       	push	r28
    1064:	df 93       	push	r29
    1066:	cd b7       	in	r28, 0x3d	; 61
    1068:	de b7       	in	r29, 0x3e	; 62
    106a:	2e 97       	sbiw	r28, 0x0e	; 14
    106c:	0f b6       	in	r0, 0x3f	; 63
    106e:	f8 94       	cli
    1070:	de bf       	out	0x3e, r29	; 62
    1072:	0f be       	out	0x3f, r0	; 63
    1074:	cd bf       	out	0x3d, r28	; 61
    1076:	8c 01       	movw	r16, r24
    1078:	fa 01       	movw	r30, r20
    107a:	86 e0       	ldi	r24, 0x06	; 6
    107c:	8c 83       	std	Y+4, r24	; 0x04
    107e:	1a 83       	std	Y+2, r17	; 0x02
    1080:	09 83       	std	Y+1, r16	; 0x01
    1082:	77 ff       	sbrs	r23, 7
    1084:	02 c0       	rjmp	.+4      	; 0x108a <vsnprintf+0x2c>
    1086:	60 e0       	ldi	r22, 0x00	; 0
    1088:	70 e8       	ldi	r23, 0x80	; 128
    108a:	cb 01       	movw	r24, r22
    108c:	01 97       	sbiw	r24, 0x01	; 1
    108e:	9e 83       	std	Y+6, r25	; 0x06
    1090:	8d 83       	std	Y+5, r24	; 0x05
    1092:	a9 01       	movw	r20, r18
    1094:	bf 01       	movw	r22, r30
    1096:	ce 01       	movw	r24, r28
    1098:	01 96       	adiw	r24, 0x01	; 1
    109a:	19 d0       	rcall	.+50     	; 0x10ce <vfprintf>
    109c:	4d 81       	ldd	r20, Y+5	; 0x05
    109e:	5e 81       	ldd	r21, Y+6	; 0x06
    10a0:	57 fd       	sbrc	r21, 7
    10a2:	0a c0       	rjmp	.+20     	; 0x10b8 <vsnprintf+0x5a>
    10a4:	2f 81       	ldd	r18, Y+7	; 0x07
    10a6:	38 85       	ldd	r19, Y+8	; 0x08
    10a8:	42 17       	cp	r20, r18
    10aa:	53 07       	cpc	r21, r19
    10ac:	0c f4       	brge	.+2      	; 0x10b0 <vsnprintf+0x52>
    10ae:	9a 01       	movw	r18, r20
    10b0:	f8 01       	movw	r30, r16
    10b2:	e2 0f       	add	r30, r18
    10b4:	f3 1f       	adc	r31, r19
    10b6:	10 82       	st	Z, r1
    10b8:	2e 96       	adiw	r28, 0x0e	; 14
    10ba:	0f b6       	in	r0, 0x3f	; 63
    10bc:	f8 94       	cli
    10be:	de bf       	out	0x3e, r29	; 62
    10c0:	0f be       	out	0x3f, r0	; 63
    10c2:	cd bf       	out	0x3d, r28	; 61
    10c4:	df 91       	pop	r29
    10c6:	cf 91       	pop	r28
    10c8:	1f 91       	pop	r17
    10ca:	0f 91       	pop	r16
    10cc:	08 95       	ret

000010ce <vfprintf>:
    10ce:	2f 92       	push	r2
    10d0:	3f 92       	push	r3
    10d2:	4f 92       	push	r4
    10d4:	5f 92       	push	r5
    10d6:	6f 92       	push	r6
    10d8:	7f 92       	push	r7
    10da:	8f 92       	push	r8
    10dc:	9f 92       	push	r9
    10de:	af 92       	push	r10
    10e0:	bf 92       	push	r11
    10e2:	cf 92       	push	r12
    10e4:	df 92       	push	r13
    10e6:	ef 92       	push	r14
    10e8:	ff 92       	push	r15
    10ea:	0f 93       	push	r16
    10ec:	1f 93       	push	r17
    10ee:	cf 93       	push	r28
    10f0:	df 93       	push	r29
    10f2:	cd b7       	in	r28, 0x3d	; 61
    10f4:	de b7       	in	r29, 0x3e	; 62
    10f6:	2b 97       	sbiw	r28, 0x0b	; 11
    10f8:	0f b6       	in	r0, 0x3f	; 63
    10fa:	f8 94       	cli
    10fc:	de bf       	out	0x3e, r29	; 62
    10fe:	0f be       	out	0x3f, r0	; 63
    1100:	cd bf       	out	0x3d, r28	; 61
    1102:	6c 01       	movw	r12, r24
    1104:	7b 01       	movw	r14, r22
    1106:	8a 01       	movw	r16, r20
    1108:	fc 01       	movw	r30, r24
    110a:	17 82       	std	Z+7, r1	; 0x07
    110c:	16 82       	std	Z+6, r1	; 0x06
    110e:	83 81       	ldd	r24, Z+3	; 0x03
    1110:	81 ff       	sbrs	r24, 1
    1112:	bf c1       	rjmp	.+894    	; 0x1492 <__stack+0x393>
    1114:	ce 01       	movw	r24, r28
    1116:	01 96       	adiw	r24, 0x01	; 1
    1118:	3c 01       	movw	r6, r24
    111a:	f6 01       	movw	r30, r12
    111c:	93 81       	ldd	r25, Z+3	; 0x03
    111e:	f7 01       	movw	r30, r14
    1120:	93 fd       	sbrc	r25, 3
    1122:	85 91       	lpm	r24, Z+
    1124:	93 ff       	sbrs	r25, 3
    1126:	81 91       	ld	r24, Z+
    1128:	7f 01       	movw	r14, r30
    112a:	88 23       	and	r24, r24
    112c:	09 f4       	brne	.+2      	; 0x1130 <__stack+0x31>
    112e:	ad c1       	rjmp	.+858    	; 0x148a <__stack+0x38b>
    1130:	85 32       	cpi	r24, 0x25	; 37
    1132:	39 f4       	brne	.+14     	; 0x1142 <__stack+0x43>
    1134:	93 fd       	sbrc	r25, 3
    1136:	85 91       	lpm	r24, Z+
    1138:	93 ff       	sbrs	r25, 3
    113a:	81 91       	ld	r24, Z+
    113c:	7f 01       	movw	r14, r30
    113e:	85 32       	cpi	r24, 0x25	; 37
    1140:	21 f4       	brne	.+8      	; 0x114a <__stack+0x4b>
    1142:	b6 01       	movw	r22, r12
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	d6 d1       	rcall	.+940    	; 0x14f4 <fputc>
    1148:	e8 cf       	rjmp	.-48     	; 0x111a <__stack+0x1b>
    114a:	91 2c       	mov	r9, r1
    114c:	21 2c       	mov	r2, r1
    114e:	31 2c       	mov	r3, r1
    1150:	ff e1       	ldi	r31, 0x1F	; 31
    1152:	f3 15       	cp	r31, r3
    1154:	d8 f0       	brcs	.+54     	; 0x118c <__stack+0x8d>
    1156:	8b 32       	cpi	r24, 0x2B	; 43
    1158:	79 f0       	breq	.+30     	; 0x1178 <__stack+0x79>
    115a:	38 f4       	brcc	.+14     	; 0x116a <__stack+0x6b>
    115c:	80 32       	cpi	r24, 0x20	; 32
    115e:	79 f0       	breq	.+30     	; 0x117e <__stack+0x7f>
    1160:	83 32       	cpi	r24, 0x23	; 35
    1162:	a1 f4       	brne	.+40     	; 0x118c <__stack+0x8d>
    1164:	23 2d       	mov	r18, r3
    1166:	20 61       	ori	r18, 0x10	; 16
    1168:	1d c0       	rjmp	.+58     	; 0x11a4 <__stack+0xa5>
    116a:	8d 32       	cpi	r24, 0x2D	; 45
    116c:	61 f0       	breq	.+24     	; 0x1186 <__stack+0x87>
    116e:	80 33       	cpi	r24, 0x30	; 48
    1170:	69 f4       	brne	.+26     	; 0x118c <__stack+0x8d>
    1172:	23 2d       	mov	r18, r3
    1174:	21 60       	ori	r18, 0x01	; 1
    1176:	16 c0       	rjmp	.+44     	; 0x11a4 <__stack+0xa5>
    1178:	83 2d       	mov	r24, r3
    117a:	82 60       	ori	r24, 0x02	; 2
    117c:	38 2e       	mov	r3, r24
    117e:	e3 2d       	mov	r30, r3
    1180:	e4 60       	ori	r30, 0x04	; 4
    1182:	3e 2e       	mov	r3, r30
    1184:	2a c0       	rjmp	.+84     	; 0x11da <__stack+0xdb>
    1186:	f3 2d       	mov	r31, r3
    1188:	f8 60       	ori	r31, 0x08	; 8
    118a:	1d c0       	rjmp	.+58     	; 0x11c6 <__stack+0xc7>
    118c:	37 fc       	sbrc	r3, 7
    118e:	2d c0       	rjmp	.+90     	; 0x11ea <__stack+0xeb>
    1190:	20 ed       	ldi	r18, 0xD0	; 208
    1192:	28 0f       	add	r18, r24
    1194:	2a 30       	cpi	r18, 0x0A	; 10
    1196:	40 f0       	brcs	.+16     	; 0x11a8 <__stack+0xa9>
    1198:	8e 32       	cpi	r24, 0x2E	; 46
    119a:	b9 f4       	brne	.+46     	; 0x11ca <__stack+0xcb>
    119c:	36 fc       	sbrc	r3, 6
    119e:	75 c1       	rjmp	.+746    	; 0x148a <__stack+0x38b>
    11a0:	23 2d       	mov	r18, r3
    11a2:	20 64       	ori	r18, 0x40	; 64
    11a4:	32 2e       	mov	r3, r18
    11a6:	19 c0       	rjmp	.+50     	; 0x11da <__stack+0xdb>
    11a8:	36 fe       	sbrs	r3, 6
    11aa:	06 c0       	rjmp	.+12     	; 0x11b8 <__stack+0xb9>
    11ac:	8a e0       	ldi	r24, 0x0A	; 10
    11ae:	98 9e       	mul	r9, r24
    11b0:	20 0d       	add	r18, r0
    11b2:	11 24       	eor	r1, r1
    11b4:	92 2e       	mov	r9, r18
    11b6:	11 c0       	rjmp	.+34     	; 0x11da <__stack+0xdb>
    11b8:	ea e0       	ldi	r30, 0x0A	; 10
    11ba:	2e 9e       	mul	r2, r30
    11bc:	20 0d       	add	r18, r0
    11be:	11 24       	eor	r1, r1
    11c0:	22 2e       	mov	r2, r18
    11c2:	f3 2d       	mov	r31, r3
    11c4:	f0 62       	ori	r31, 0x20	; 32
    11c6:	3f 2e       	mov	r3, r31
    11c8:	08 c0       	rjmp	.+16     	; 0x11da <__stack+0xdb>
    11ca:	8c 36       	cpi	r24, 0x6C	; 108
    11cc:	21 f4       	brne	.+8      	; 0x11d6 <__stack+0xd7>
    11ce:	83 2d       	mov	r24, r3
    11d0:	80 68       	ori	r24, 0x80	; 128
    11d2:	38 2e       	mov	r3, r24
    11d4:	02 c0       	rjmp	.+4      	; 0x11da <__stack+0xdb>
    11d6:	88 36       	cpi	r24, 0x68	; 104
    11d8:	41 f4       	brne	.+16     	; 0x11ea <__stack+0xeb>
    11da:	f7 01       	movw	r30, r14
    11dc:	93 fd       	sbrc	r25, 3
    11de:	85 91       	lpm	r24, Z+
    11e0:	93 ff       	sbrs	r25, 3
    11e2:	81 91       	ld	r24, Z+
    11e4:	7f 01       	movw	r14, r30
    11e6:	81 11       	cpse	r24, r1
    11e8:	b3 cf       	rjmp	.-154    	; 0x1150 <__stack+0x51>
    11ea:	98 2f       	mov	r25, r24
    11ec:	9f 7d       	andi	r25, 0xDF	; 223
    11ee:	95 54       	subi	r25, 0x45	; 69
    11f0:	93 30       	cpi	r25, 0x03	; 3
    11f2:	28 f4       	brcc	.+10     	; 0x11fe <__stack+0xff>
    11f4:	0c 5f       	subi	r16, 0xFC	; 252
    11f6:	1f 4f       	sbci	r17, 0xFF	; 255
    11f8:	9f e3       	ldi	r25, 0x3F	; 63
    11fa:	99 83       	std	Y+1, r25	; 0x01
    11fc:	0d c0       	rjmp	.+26     	; 0x1218 <__stack+0x119>
    11fe:	83 36       	cpi	r24, 0x63	; 99
    1200:	31 f0       	breq	.+12     	; 0x120e <__stack+0x10f>
    1202:	83 37       	cpi	r24, 0x73	; 115
    1204:	71 f0       	breq	.+28     	; 0x1222 <__stack+0x123>
    1206:	83 35       	cpi	r24, 0x53	; 83
    1208:	09 f0       	breq	.+2      	; 0x120c <__stack+0x10d>
    120a:	55 c0       	rjmp	.+170    	; 0x12b6 <__stack+0x1b7>
    120c:	20 c0       	rjmp	.+64     	; 0x124e <__stack+0x14f>
    120e:	f8 01       	movw	r30, r16
    1210:	80 81       	ld	r24, Z
    1212:	89 83       	std	Y+1, r24	; 0x01
    1214:	0e 5f       	subi	r16, 0xFE	; 254
    1216:	1f 4f       	sbci	r17, 0xFF	; 255
    1218:	88 24       	eor	r8, r8
    121a:	83 94       	inc	r8
    121c:	91 2c       	mov	r9, r1
    121e:	53 01       	movw	r10, r6
    1220:	12 c0       	rjmp	.+36     	; 0x1246 <__stack+0x147>
    1222:	28 01       	movw	r4, r16
    1224:	f2 e0       	ldi	r31, 0x02	; 2
    1226:	4f 0e       	add	r4, r31
    1228:	51 1c       	adc	r5, r1
    122a:	f8 01       	movw	r30, r16
    122c:	a0 80       	ld	r10, Z
    122e:	b1 80       	ldd	r11, Z+1	; 0x01
    1230:	36 fe       	sbrs	r3, 6
    1232:	03 c0       	rjmp	.+6      	; 0x123a <__stack+0x13b>
    1234:	69 2d       	mov	r22, r9
    1236:	70 e0       	ldi	r23, 0x00	; 0
    1238:	02 c0       	rjmp	.+4      	; 0x123e <__stack+0x13f>
    123a:	6f ef       	ldi	r22, 0xFF	; 255
    123c:	7f ef       	ldi	r23, 0xFF	; 255
    123e:	c5 01       	movw	r24, r10
    1240:	4e d1       	rcall	.+668    	; 0x14de <strnlen>
    1242:	4c 01       	movw	r8, r24
    1244:	82 01       	movw	r16, r4
    1246:	f3 2d       	mov	r31, r3
    1248:	ff 77       	andi	r31, 0x7F	; 127
    124a:	3f 2e       	mov	r3, r31
    124c:	15 c0       	rjmp	.+42     	; 0x1278 <__stack+0x179>
    124e:	28 01       	movw	r4, r16
    1250:	22 e0       	ldi	r18, 0x02	; 2
    1252:	42 0e       	add	r4, r18
    1254:	51 1c       	adc	r5, r1
    1256:	f8 01       	movw	r30, r16
    1258:	a0 80       	ld	r10, Z
    125a:	b1 80       	ldd	r11, Z+1	; 0x01
    125c:	36 fe       	sbrs	r3, 6
    125e:	03 c0       	rjmp	.+6      	; 0x1266 <__stack+0x167>
    1260:	69 2d       	mov	r22, r9
    1262:	70 e0       	ldi	r23, 0x00	; 0
    1264:	02 c0       	rjmp	.+4      	; 0x126a <__stack+0x16b>
    1266:	6f ef       	ldi	r22, 0xFF	; 255
    1268:	7f ef       	ldi	r23, 0xFF	; 255
    126a:	c5 01       	movw	r24, r10
    126c:	2d d1       	rcall	.+602    	; 0x14c8 <strnlen_P>
    126e:	4c 01       	movw	r8, r24
    1270:	f3 2d       	mov	r31, r3
    1272:	f0 68       	ori	r31, 0x80	; 128
    1274:	3f 2e       	mov	r3, r31
    1276:	82 01       	movw	r16, r4
    1278:	33 fc       	sbrc	r3, 3
    127a:	19 c0       	rjmp	.+50     	; 0x12ae <__stack+0x1af>
    127c:	82 2d       	mov	r24, r2
    127e:	90 e0       	ldi	r25, 0x00	; 0
    1280:	88 16       	cp	r8, r24
    1282:	99 06       	cpc	r9, r25
    1284:	a0 f4       	brcc	.+40     	; 0x12ae <__stack+0x1af>
    1286:	b6 01       	movw	r22, r12
    1288:	80 e2       	ldi	r24, 0x20	; 32
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	33 d1       	rcall	.+614    	; 0x14f4 <fputc>
    128e:	2a 94       	dec	r2
    1290:	f5 cf       	rjmp	.-22     	; 0x127c <__stack+0x17d>
    1292:	f5 01       	movw	r30, r10
    1294:	37 fc       	sbrc	r3, 7
    1296:	85 91       	lpm	r24, Z+
    1298:	37 fe       	sbrs	r3, 7
    129a:	81 91       	ld	r24, Z+
    129c:	5f 01       	movw	r10, r30
    129e:	b6 01       	movw	r22, r12
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	28 d1       	rcall	.+592    	; 0x14f4 <fputc>
    12a4:	21 10       	cpse	r2, r1
    12a6:	2a 94       	dec	r2
    12a8:	21 e0       	ldi	r18, 0x01	; 1
    12aa:	82 1a       	sub	r8, r18
    12ac:	91 08       	sbc	r9, r1
    12ae:	81 14       	cp	r8, r1
    12b0:	91 04       	cpc	r9, r1
    12b2:	79 f7       	brne	.-34     	; 0x1292 <__stack+0x193>
    12b4:	e1 c0       	rjmp	.+450    	; 0x1478 <__stack+0x379>
    12b6:	84 36       	cpi	r24, 0x64	; 100
    12b8:	11 f0       	breq	.+4      	; 0x12be <__stack+0x1bf>
    12ba:	89 36       	cpi	r24, 0x69	; 105
    12bc:	39 f5       	brne	.+78     	; 0x130c <__stack+0x20d>
    12be:	f8 01       	movw	r30, r16
    12c0:	37 fe       	sbrs	r3, 7
    12c2:	07 c0       	rjmp	.+14     	; 0x12d2 <__stack+0x1d3>
    12c4:	60 81       	ld	r22, Z
    12c6:	71 81       	ldd	r23, Z+1	; 0x01
    12c8:	82 81       	ldd	r24, Z+2	; 0x02
    12ca:	93 81       	ldd	r25, Z+3	; 0x03
    12cc:	0c 5f       	subi	r16, 0xFC	; 252
    12ce:	1f 4f       	sbci	r17, 0xFF	; 255
    12d0:	08 c0       	rjmp	.+16     	; 0x12e2 <__stack+0x1e3>
    12d2:	60 81       	ld	r22, Z
    12d4:	71 81       	ldd	r23, Z+1	; 0x01
    12d6:	07 2e       	mov	r0, r23
    12d8:	00 0c       	add	r0, r0
    12da:	88 0b       	sbc	r24, r24
    12dc:	99 0b       	sbc	r25, r25
    12de:	0e 5f       	subi	r16, 0xFE	; 254
    12e0:	1f 4f       	sbci	r17, 0xFF	; 255
    12e2:	f3 2d       	mov	r31, r3
    12e4:	ff 76       	andi	r31, 0x6F	; 111
    12e6:	3f 2e       	mov	r3, r31
    12e8:	97 ff       	sbrs	r25, 7
    12ea:	09 c0       	rjmp	.+18     	; 0x12fe <__stack+0x1ff>
    12ec:	90 95       	com	r25
    12ee:	80 95       	com	r24
    12f0:	70 95       	com	r23
    12f2:	61 95       	neg	r22
    12f4:	7f 4f       	sbci	r23, 0xFF	; 255
    12f6:	8f 4f       	sbci	r24, 0xFF	; 255
    12f8:	9f 4f       	sbci	r25, 0xFF	; 255
    12fa:	f0 68       	ori	r31, 0x80	; 128
    12fc:	3f 2e       	mov	r3, r31
    12fe:	2a e0       	ldi	r18, 0x0A	; 10
    1300:	30 e0       	ldi	r19, 0x00	; 0
    1302:	a3 01       	movw	r20, r6
    1304:	33 d1       	rcall	.+614    	; 0x156c <__ultoa_invert>
    1306:	88 2e       	mov	r8, r24
    1308:	86 18       	sub	r8, r6
    130a:	44 c0       	rjmp	.+136    	; 0x1394 <__stack+0x295>
    130c:	85 37       	cpi	r24, 0x75	; 117
    130e:	31 f4       	brne	.+12     	; 0x131c <__stack+0x21d>
    1310:	23 2d       	mov	r18, r3
    1312:	2f 7e       	andi	r18, 0xEF	; 239
    1314:	b2 2e       	mov	r11, r18
    1316:	2a e0       	ldi	r18, 0x0A	; 10
    1318:	30 e0       	ldi	r19, 0x00	; 0
    131a:	25 c0       	rjmp	.+74     	; 0x1366 <__stack+0x267>
    131c:	93 2d       	mov	r25, r3
    131e:	99 7f       	andi	r25, 0xF9	; 249
    1320:	b9 2e       	mov	r11, r25
    1322:	8f 36       	cpi	r24, 0x6F	; 111
    1324:	c1 f0       	breq	.+48     	; 0x1356 <__stack+0x257>
    1326:	18 f4       	brcc	.+6      	; 0x132e <__stack+0x22f>
    1328:	88 35       	cpi	r24, 0x58	; 88
    132a:	79 f0       	breq	.+30     	; 0x134a <__stack+0x24b>
    132c:	ae c0       	rjmp	.+348    	; 0x148a <__stack+0x38b>
    132e:	80 37       	cpi	r24, 0x70	; 112
    1330:	19 f0       	breq	.+6      	; 0x1338 <__stack+0x239>
    1332:	88 37       	cpi	r24, 0x78	; 120
    1334:	21 f0       	breq	.+8      	; 0x133e <__stack+0x23f>
    1336:	a9 c0       	rjmp	.+338    	; 0x148a <__stack+0x38b>
    1338:	e9 2f       	mov	r30, r25
    133a:	e0 61       	ori	r30, 0x10	; 16
    133c:	be 2e       	mov	r11, r30
    133e:	b4 fe       	sbrs	r11, 4
    1340:	0d c0       	rjmp	.+26     	; 0x135c <__stack+0x25d>
    1342:	fb 2d       	mov	r31, r11
    1344:	f4 60       	ori	r31, 0x04	; 4
    1346:	bf 2e       	mov	r11, r31
    1348:	09 c0       	rjmp	.+18     	; 0x135c <__stack+0x25d>
    134a:	34 fe       	sbrs	r3, 4
    134c:	0a c0       	rjmp	.+20     	; 0x1362 <__stack+0x263>
    134e:	29 2f       	mov	r18, r25
    1350:	26 60       	ori	r18, 0x06	; 6
    1352:	b2 2e       	mov	r11, r18
    1354:	06 c0       	rjmp	.+12     	; 0x1362 <__stack+0x263>
    1356:	28 e0       	ldi	r18, 0x08	; 8
    1358:	30 e0       	ldi	r19, 0x00	; 0
    135a:	05 c0       	rjmp	.+10     	; 0x1366 <__stack+0x267>
    135c:	20 e1       	ldi	r18, 0x10	; 16
    135e:	30 e0       	ldi	r19, 0x00	; 0
    1360:	02 c0       	rjmp	.+4      	; 0x1366 <__stack+0x267>
    1362:	20 e1       	ldi	r18, 0x10	; 16
    1364:	32 e0       	ldi	r19, 0x02	; 2
    1366:	f8 01       	movw	r30, r16
    1368:	b7 fe       	sbrs	r11, 7
    136a:	07 c0       	rjmp	.+14     	; 0x137a <__stack+0x27b>
    136c:	60 81       	ld	r22, Z
    136e:	71 81       	ldd	r23, Z+1	; 0x01
    1370:	82 81       	ldd	r24, Z+2	; 0x02
    1372:	93 81       	ldd	r25, Z+3	; 0x03
    1374:	0c 5f       	subi	r16, 0xFC	; 252
    1376:	1f 4f       	sbci	r17, 0xFF	; 255
    1378:	06 c0       	rjmp	.+12     	; 0x1386 <__stack+0x287>
    137a:	60 81       	ld	r22, Z
    137c:	71 81       	ldd	r23, Z+1	; 0x01
    137e:	80 e0       	ldi	r24, 0x00	; 0
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	0e 5f       	subi	r16, 0xFE	; 254
    1384:	1f 4f       	sbci	r17, 0xFF	; 255
    1386:	a3 01       	movw	r20, r6
    1388:	f1 d0       	rcall	.+482    	; 0x156c <__ultoa_invert>
    138a:	88 2e       	mov	r8, r24
    138c:	86 18       	sub	r8, r6
    138e:	fb 2d       	mov	r31, r11
    1390:	ff 77       	andi	r31, 0x7F	; 127
    1392:	3f 2e       	mov	r3, r31
    1394:	36 fe       	sbrs	r3, 6
    1396:	0d c0       	rjmp	.+26     	; 0x13b2 <__stack+0x2b3>
    1398:	23 2d       	mov	r18, r3
    139a:	2e 7f       	andi	r18, 0xFE	; 254
    139c:	a2 2e       	mov	r10, r18
    139e:	89 14       	cp	r8, r9
    13a0:	58 f4       	brcc	.+22     	; 0x13b8 <__stack+0x2b9>
    13a2:	34 fe       	sbrs	r3, 4
    13a4:	0b c0       	rjmp	.+22     	; 0x13bc <__stack+0x2bd>
    13a6:	32 fc       	sbrc	r3, 2
    13a8:	09 c0       	rjmp	.+18     	; 0x13bc <__stack+0x2bd>
    13aa:	83 2d       	mov	r24, r3
    13ac:	8e 7e       	andi	r24, 0xEE	; 238
    13ae:	a8 2e       	mov	r10, r24
    13b0:	05 c0       	rjmp	.+10     	; 0x13bc <__stack+0x2bd>
    13b2:	b8 2c       	mov	r11, r8
    13b4:	a3 2c       	mov	r10, r3
    13b6:	03 c0       	rjmp	.+6      	; 0x13be <__stack+0x2bf>
    13b8:	b8 2c       	mov	r11, r8
    13ba:	01 c0       	rjmp	.+2      	; 0x13be <__stack+0x2bf>
    13bc:	b9 2c       	mov	r11, r9
    13be:	a4 fe       	sbrs	r10, 4
    13c0:	0f c0       	rjmp	.+30     	; 0x13e0 <__stack+0x2e1>
    13c2:	fe 01       	movw	r30, r28
    13c4:	e8 0d       	add	r30, r8
    13c6:	f1 1d       	adc	r31, r1
    13c8:	80 81       	ld	r24, Z
    13ca:	80 33       	cpi	r24, 0x30	; 48
    13cc:	21 f4       	brne	.+8      	; 0x13d6 <__stack+0x2d7>
    13ce:	9a 2d       	mov	r25, r10
    13d0:	99 7e       	andi	r25, 0xE9	; 233
    13d2:	a9 2e       	mov	r10, r25
    13d4:	09 c0       	rjmp	.+18     	; 0x13e8 <__stack+0x2e9>
    13d6:	a2 fe       	sbrs	r10, 2
    13d8:	06 c0       	rjmp	.+12     	; 0x13e6 <__stack+0x2e7>
    13da:	b3 94       	inc	r11
    13dc:	b3 94       	inc	r11
    13de:	04 c0       	rjmp	.+8      	; 0x13e8 <__stack+0x2e9>
    13e0:	8a 2d       	mov	r24, r10
    13e2:	86 78       	andi	r24, 0x86	; 134
    13e4:	09 f0       	breq	.+2      	; 0x13e8 <__stack+0x2e9>
    13e6:	b3 94       	inc	r11
    13e8:	a3 fc       	sbrc	r10, 3
    13ea:	10 c0       	rjmp	.+32     	; 0x140c <__stack+0x30d>
    13ec:	a0 fe       	sbrs	r10, 0
    13ee:	06 c0       	rjmp	.+12     	; 0x13fc <__stack+0x2fd>
    13f0:	b2 14       	cp	r11, r2
    13f2:	80 f4       	brcc	.+32     	; 0x1414 <__stack+0x315>
    13f4:	28 0c       	add	r2, r8
    13f6:	92 2c       	mov	r9, r2
    13f8:	9b 18       	sub	r9, r11
    13fa:	0d c0       	rjmp	.+26     	; 0x1416 <__stack+0x317>
    13fc:	b2 14       	cp	r11, r2
    13fe:	58 f4       	brcc	.+22     	; 0x1416 <__stack+0x317>
    1400:	b6 01       	movw	r22, r12
    1402:	80 e2       	ldi	r24, 0x20	; 32
    1404:	90 e0       	ldi	r25, 0x00	; 0
    1406:	76 d0       	rcall	.+236    	; 0x14f4 <fputc>
    1408:	b3 94       	inc	r11
    140a:	f8 cf       	rjmp	.-16     	; 0x13fc <__stack+0x2fd>
    140c:	b2 14       	cp	r11, r2
    140e:	18 f4       	brcc	.+6      	; 0x1416 <__stack+0x317>
    1410:	2b 18       	sub	r2, r11
    1412:	02 c0       	rjmp	.+4      	; 0x1418 <__stack+0x319>
    1414:	98 2c       	mov	r9, r8
    1416:	21 2c       	mov	r2, r1
    1418:	a4 fe       	sbrs	r10, 4
    141a:	0f c0       	rjmp	.+30     	; 0x143a <__stack+0x33b>
    141c:	b6 01       	movw	r22, r12
    141e:	80 e3       	ldi	r24, 0x30	; 48
    1420:	90 e0       	ldi	r25, 0x00	; 0
    1422:	68 d0       	rcall	.+208    	; 0x14f4 <fputc>
    1424:	a2 fe       	sbrs	r10, 2
    1426:	16 c0       	rjmp	.+44     	; 0x1454 <__stack+0x355>
    1428:	a1 fc       	sbrc	r10, 1
    142a:	03 c0       	rjmp	.+6      	; 0x1432 <__stack+0x333>
    142c:	88 e7       	ldi	r24, 0x78	; 120
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	02 c0       	rjmp	.+4      	; 0x1436 <__stack+0x337>
    1432:	88 e5       	ldi	r24, 0x58	; 88
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	b6 01       	movw	r22, r12
    1438:	0c c0       	rjmp	.+24     	; 0x1452 <__stack+0x353>
    143a:	8a 2d       	mov	r24, r10
    143c:	86 78       	andi	r24, 0x86	; 134
    143e:	51 f0       	breq	.+20     	; 0x1454 <__stack+0x355>
    1440:	a1 fe       	sbrs	r10, 1
    1442:	02 c0       	rjmp	.+4      	; 0x1448 <__stack+0x349>
    1444:	8b e2       	ldi	r24, 0x2B	; 43
    1446:	01 c0       	rjmp	.+2      	; 0x144a <__stack+0x34b>
    1448:	80 e2       	ldi	r24, 0x20	; 32
    144a:	a7 fc       	sbrc	r10, 7
    144c:	8d e2       	ldi	r24, 0x2D	; 45
    144e:	b6 01       	movw	r22, r12
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	50 d0       	rcall	.+160    	; 0x14f4 <fputc>
    1454:	89 14       	cp	r8, r9
    1456:	30 f4       	brcc	.+12     	; 0x1464 <__stack+0x365>
    1458:	b6 01       	movw	r22, r12
    145a:	80 e3       	ldi	r24, 0x30	; 48
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	4a d0       	rcall	.+148    	; 0x14f4 <fputc>
    1460:	9a 94       	dec	r9
    1462:	f8 cf       	rjmp	.-16     	; 0x1454 <__stack+0x355>
    1464:	8a 94       	dec	r8
    1466:	f3 01       	movw	r30, r6
    1468:	e8 0d       	add	r30, r8
    146a:	f1 1d       	adc	r31, r1
    146c:	80 81       	ld	r24, Z
    146e:	b6 01       	movw	r22, r12
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	40 d0       	rcall	.+128    	; 0x14f4 <fputc>
    1474:	81 10       	cpse	r8, r1
    1476:	f6 cf       	rjmp	.-20     	; 0x1464 <__stack+0x365>
    1478:	22 20       	and	r2, r2
    147a:	09 f4       	brne	.+2      	; 0x147e <__stack+0x37f>
    147c:	4e ce       	rjmp	.-868    	; 0x111a <__stack+0x1b>
    147e:	b6 01       	movw	r22, r12
    1480:	80 e2       	ldi	r24, 0x20	; 32
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	37 d0       	rcall	.+110    	; 0x14f4 <fputc>
    1486:	2a 94       	dec	r2
    1488:	f7 cf       	rjmp	.-18     	; 0x1478 <__stack+0x379>
    148a:	f6 01       	movw	r30, r12
    148c:	86 81       	ldd	r24, Z+6	; 0x06
    148e:	97 81       	ldd	r25, Z+7	; 0x07
    1490:	02 c0       	rjmp	.+4      	; 0x1496 <__stack+0x397>
    1492:	8f ef       	ldi	r24, 0xFF	; 255
    1494:	9f ef       	ldi	r25, 0xFF	; 255
    1496:	2b 96       	adiw	r28, 0x0b	; 11
    1498:	0f b6       	in	r0, 0x3f	; 63
    149a:	f8 94       	cli
    149c:	de bf       	out	0x3e, r29	; 62
    149e:	0f be       	out	0x3f, r0	; 63
    14a0:	cd bf       	out	0x3d, r28	; 61
    14a2:	df 91       	pop	r29
    14a4:	cf 91       	pop	r28
    14a6:	1f 91       	pop	r17
    14a8:	0f 91       	pop	r16
    14aa:	ff 90       	pop	r15
    14ac:	ef 90       	pop	r14
    14ae:	df 90       	pop	r13
    14b0:	cf 90       	pop	r12
    14b2:	bf 90       	pop	r11
    14b4:	af 90       	pop	r10
    14b6:	9f 90       	pop	r9
    14b8:	8f 90       	pop	r8
    14ba:	7f 90       	pop	r7
    14bc:	6f 90       	pop	r6
    14be:	5f 90       	pop	r5
    14c0:	4f 90       	pop	r4
    14c2:	3f 90       	pop	r3
    14c4:	2f 90       	pop	r2
    14c6:	08 95       	ret

000014c8 <strnlen_P>:
    14c8:	fc 01       	movw	r30, r24
    14ca:	05 90       	lpm	r0, Z+
    14cc:	61 50       	subi	r22, 0x01	; 1
    14ce:	70 40       	sbci	r23, 0x00	; 0
    14d0:	01 10       	cpse	r0, r1
    14d2:	d8 f7       	brcc	.-10     	; 0x14ca <strnlen_P+0x2>
    14d4:	80 95       	com	r24
    14d6:	90 95       	com	r25
    14d8:	8e 0f       	add	r24, r30
    14da:	9f 1f       	adc	r25, r31
    14dc:	08 95       	ret

000014de <strnlen>:
    14de:	fc 01       	movw	r30, r24
    14e0:	61 50       	subi	r22, 0x01	; 1
    14e2:	70 40       	sbci	r23, 0x00	; 0
    14e4:	01 90       	ld	r0, Z+
    14e6:	01 10       	cpse	r0, r1
    14e8:	d8 f7       	brcc	.-10     	; 0x14e0 <strnlen+0x2>
    14ea:	80 95       	com	r24
    14ec:	90 95       	com	r25
    14ee:	8e 0f       	add	r24, r30
    14f0:	9f 1f       	adc	r25, r31
    14f2:	08 95       	ret

000014f4 <fputc>:
    14f4:	0f 93       	push	r16
    14f6:	1f 93       	push	r17
    14f8:	cf 93       	push	r28
    14fa:	df 93       	push	r29
    14fc:	fb 01       	movw	r30, r22
    14fe:	23 81       	ldd	r18, Z+3	; 0x03
    1500:	21 fd       	sbrc	r18, 1
    1502:	03 c0       	rjmp	.+6      	; 0x150a <fputc+0x16>
    1504:	8f ef       	ldi	r24, 0xFF	; 255
    1506:	9f ef       	ldi	r25, 0xFF	; 255
    1508:	2c c0       	rjmp	.+88     	; 0x1562 <fputc+0x6e>
    150a:	22 ff       	sbrs	r18, 2
    150c:	16 c0       	rjmp	.+44     	; 0x153a <fputc+0x46>
    150e:	46 81       	ldd	r20, Z+6	; 0x06
    1510:	57 81       	ldd	r21, Z+7	; 0x07
    1512:	24 81       	ldd	r18, Z+4	; 0x04
    1514:	35 81       	ldd	r19, Z+5	; 0x05
    1516:	42 17       	cp	r20, r18
    1518:	53 07       	cpc	r21, r19
    151a:	44 f4       	brge	.+16     	; 0x152c <fputc+0x38>
    151c:	a0 81       	ld	r26, Z
    151e:	b1 81       	ldd	r27, Z+1	; 0x01
    1520:	9d 01       	movw	r18, r26
    1522:	2f 5f       	subi	r18, 0xFF	; 255
    1524:	3f 4f       	sbci	r19, 0xFF	; 255
    1526:	31 83       	std	Z+1, r19	; 0x01
    1528:	20 83       	st	Z, r18
    152a:	8c 93       	st	X, r24
    152c:	26 81       	ldd	r18, Z+6	; 0x06
    152e:	37 81       	ldd	r19, Z+7	; 0x07
    1530:	2f 5f       	subi	r18, 0xFF	; 255
    1532:	3f 4f       	sbci	r19, 0xFF	; 255
    1534:	37 83       	std	Z+7, r19	; 0x07
    1536:	26 83       	std	Z+6, r18	; 0x06
    1538:	14 c0       	rjmp	.+40     	; 0x1562 <fputc+0x6e>
    153a:	8b 01       	movw	r16, r22
    153c:	ec 01       	movw	r28, r24
    153e:	fb 01       	movw	r30, r22
    1540:	00 84       	ldd	r0, Z+8	; 0x08
    1542:	f1 85       	ldd	r31, Z+9	; 0x09
    1544:	e0 2d       	mov	r30, r0
    1546:	09 95       	icall
    1548:	89 2b       	or	r24, r25
    154a:	e1 f6       	brne	.-72     	; 0x1504 <fputc+0x10>
    154c:	d8 01       	movw	r26, r16
    154e:	16 96       	adiw	r26, 0x06	; 6
    1550:	8d 91       	ld	r24, X+
    1552:	9c 91       	ld	r25, X
    1554:	17 97       	sbiw	r26, 0x07	; 7
    1556:	01 96       	adiw	r24, 0x01	; 1
    1558:	17 96       	adiw	r26, 0x07	; 7
    155a:	9c 93       	st	X, r25
    155c:	8e 93       	st	-X, r24
    155e:	16 97       	sbiw	r26, 0x06	; 6
    1560:	ce 01       	movw	r24, r28
    1562:	df 91       	pop	r29
    1564:	cf 91       	pop	r28
    1566:	1f 91       	pop	r17
    1568:	0f 91       	pop	r16
    156a:	08 95       	ret

0000156c <__ultoa_invert>:
    156c:	fa 01       	movw	r30, r20
    156e:	aa 27       	eor	r26, r26
    1570:	28 30       	cpi	r18, 0x08	; 8
    1572:	51 f1       	breq	.+84     	; 0x15c8 <__ultoa_invert+0x5c>
    1574:	20 31       	cpi	r18, 0x10	; 16
    1576:	81 f1       	breq	.+96     	; 0x15d8 <__ultoa_invert+0x6c>
    1578:	e8 94       	clt
    157a:	6f 93       	push	r22
    157c:	6e 7f       	andi	r22, 0xFE	; 254
    157e:	6e 5f       	subi	r22, 0xFE	; 254
    1580:	7f 4f       	sbci	r23, 0xFF	; 255
    1582:	8f 4f       	sbci	r24, 0xFF	; 255
    1584:	9f 4f       	sbci	r25, 0xFF	; 255
    1586:	af 4f       	sbci	r26, 0xFF	; 255
    1588:	b1 e0       	ldi	r27, 0x01	; 1
    158a:	3e d0       	rcall	.+124    	; 0x1608 <__ultoa_invert+0x9c>
    158c:	b4 e0       	ldi	r27, 0x04	; 4
    158e:	3c d0       	rcall	.+120    	; 0x1608 <__ultoa_invert+0x9c>
    1590:	67 0f       	add	r22, r23
    1592:	78 1f       	adc	r23, r24
    1594:	89 1f       	adc	r24, r25
    1596:	9a 1f       	adc	r25, r26
    1598:	a1 1d       	adc	r26, r1
    159a:	68 0f       	add	r22, r24
    159c:	79 1f       	adc	r23, r25
    159e:	8a 1f       	adc	r24, r26
    15a0:	91 1d       	adc	r25, r1
    15a2:	a1 1d       	adc	r26, r1
    15a4:	6a 0f       	add	r22, r26
    15a6:	71 1d       	adc	r23, r1
    15a8:	81 1d       	adc	r24, r1
    15aa:	91 1d       	adc	r25, r1
    15ac:	a1 1d       	adc	r26, r1
    15ae:	20 d0       	rcall	.+64     	; 0x15f0 <__ultoa_invert+0x84>
    15b0:	09 f4       	brne	.+2      	; 0x15b4 <__ultoa_invert+0x48>
    15b2:	68 94       	set
    15b4:	3f 91       	pop	r19
    15b6:	2a e0       	ldi	r18, 0x0A	; 10
    15b8:	26 9f       	mul	r18, r22
    15ba:	11 24       	eor	r1, r1
    15bc:	30 19       	sub	r19, r0
    15be:	30 5d       	subi	r19, 0xD0	; 208
    15c0:	31 93       	st	Z+, r19
    15c2:	de f6       	brtc	.-74     	; 0x157a <__ultoa_invert+0xe>
    15c4:	cf 01       	movw	r24, r30
    15c6:	08 95       	ret
    15c8:	46 2f       	mov	r20, r22
    15ca:	47 70       	andi	r20, 0x07	; 7
    15cc:	40 5d       	subi	r20, 0xD0	; 208
    15ce:	41 93       	st	Z+, r20
    15d0:	b3 e0       	ldi	r27, 0x03	; 3
    15d2:	0f d0       	rcall	.+30     	; 0x15f2 <__ultoa_invert+0x86>
    15d4:	c9 f7       	brne	.-14     	; 0x15c8 <__ultoa_invert+0x5c>
    15d6:	f6 cf       	rjmp	.-20     	; 0x15c4 <__ultoa_invert+0x58>
    15d8:	46 2f       	mov	r20, r22
    15da:	4f 70       	andi	r20, 0x0F	; 15
    15dc:	40 5d       	subi	r20, 0xD0	; 208
    15de:	4a 33       	cpi	r20, 0x3A	; 58
    15e0:	18 f0       	brcs	.+6      	; 0x15e8 <__ultoa_invert+0x7c>
    15e2:	49 5d       	subi	r20, 0xD9	; 217
    15e4:	31 fd       	sbrc	r19, 1
    15e6:	40 52       	subi	r20, 0x20	; 32
    15e8:	41 93       	st	Z+, r20
    15ea:	02 d0       	rcall	.+4      	; 0x15f0 <__ultoa_invert+0x84>
    15ec:	a9 f7       	brne	.-22     	; 0x15d8 <__ultoa_invert+0x6c>
    15ee:	ea cf       	rjmp	.-44     	; 0x15c4 <__ultoa_invert+0x58>
    15f0:	b4 e0       	ldi	r27, 0x04	; 4
    15f2:	a6 95       	lsr	r26
    15f4:	97 95       	ror	r25
    15f6:	87 95       	ror	r24
    15f8:	77 95       	ror	r23
    15fa:	67 95       	ror	r22
    15fc:	ba 95       	dec	r27
    15fe:	c9 f7       	brne	.-14     	; 0x15f2 <__ultoa_invert+0x86>
    1600:	00 97       	sbiw	r24, 0x00	; 0
    1602:	61 05       	cpc	r22, r1
    1604:	71 05       	cpc	r23, r1
    1606:	08 95       	ret
    1608:	9b 01       	movw	r18, r22
    160a:	ac 01       	movw	r20, r24
    160c:	0a 2e       	mov	r0, r26
    160e:	06 94       	lsr	r0
    1610:	57 95       	ror	r21
    1612:	47 95       	ror	r20
    1614:	37 95       	ror	r19
    1616:	27 95       	ror	r18
    1618:	ba 95       	dec	r27
    161a:	c9 f7       	brne	.-14     	; 0x160e <__ultoa_invert+0xa2>
    161c:	62 0f       	add	r22, r18
    161e:	73 1f       	adc	r23, r19
    1620:	84 1f       	adc	r24, r20
    1622:	95 1f       	adc	r25, r21
    1624:	a0 1d       	adc	r26, r0
    1626:	08 95       	ret

00001628 <_exit>:
    1628:	f8 94       	cli

0000162a <__stop_program>:
    162a:	ff cf       	rjmp	.-2      	; 0x162a <__stop_program>
