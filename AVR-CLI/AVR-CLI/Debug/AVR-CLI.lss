
AVR-CLI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000062  00800100  00001092  00001126  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001092  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000225  00800162  00800162  00001188  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001188  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000011e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00001220  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d59  00000000  00000000  00001408  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fdf  00000000  00000000  00003161  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000eac  00000000  00000000  00004140  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000045c  00000000  00000000  00004fec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000089b  00000000  00000000  00005448  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012dc  00000000  00000000  00005ce3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  00006fbf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
       6:	00 00       	nop
       8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
       a:	00 00       	nop
       c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
       e:	00 00       	nop
      10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
      12:	00 00       	nop
      14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
      16:	00 00       	nop
      18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
      22:	00 00       	nop
      24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
      26:	00 00       	nop
      28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
      32:	00 00       	nop
      34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
      36:	00 00       	nop
      38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
      42:	00 00       	nop
      44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
      46:	00 00       	nop
      48:	56 c0       	rjmp	.+172    	; 0xf6 <__vector_18>
      4a:	00 00       	nop
      4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
      52:	00 00       	nop
      54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
      56:	00 00       	nop
      58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
      62:	00 00       	nop
      64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
      66:	00 00       	nop
      68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
      72:	00 00       	nop
      74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
      76:	00 00       	nop
      78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
      82:	00 00       	nop
      84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
      86:	00 00       	nop
      88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e2 e9       	ldi	r30, 0x92	; 146
      a0:	f0 e1       	ldi	r31, 0x10	; 16
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a2 36       	cpi	r26, 0x62	; 98
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	23 e0       	ldi	r18, 0x03	; 3
      b4:	a2 e6       	ldi	r26, 0x62	; 98
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a7 38       	cpi	r26, 0x87	; 135
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	73 d3       	rcall	.+1766   	; 0x7aa <main>
      c4:	e4 c7       	rjmp	.+4040   	; 0x108e <_exit>

000000c6 <__bad_interrupt>:
      c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <apInit>:
﻿#include "ap.h"

void apInit(void)
{
	uartOpen(_DEF_UART0, 115200);
      c8:	40 e0       	ldi	r20, 0x00	; 0
      ca:	52 ec       	ldi	r21, 0xC2	; 194
      cc:	61 e0       	ldi	r22, 0x01	; 1
      ce:	70 e0       	ldi	r23, 0x00	; 0
      d0:	80 e0       	ldi	r24, 0x00	; 0
      d2:	53 c0       	rjmp	.+166    	; 0x17a <uartOpen>
      d4:	08 95       	ret

000000d6 <apMain>:
		/*
		gpioPinToggle(_DEF_GPIO0);
		_delay_ms(500);
		*/
		
		uartPrintf(_DEF_UART0, "uart0 : %s\n", str);
      d6:	07 e4       	ldi	r16, 0x47	; 71
      d8:	11 e0       	ldi	r17, 0x01	; 1
      da:	c5 e5       	ldi	r28, 0x55	; 85
      dc:	d1 e0       	ldi	r29, 0x01	; 1
      de:	1f 93       	push	r17
      e0:	0f 93       	push	r16
      e2:	df 93       	push	r29
      e4:	cf 93       	push	r28
      e6:	1f 92       	push	r1
      e8:	90 d0       	rcall	.+288    	; 0x20a <uartPrintf>
      ea:	0f 90       	pop	r0
      ec:	0f 90       	pop	r0
      ee:	0f 90       	pop	r0
      f0:	0f 90       	pop	r0
      f2:	0f 90       	pop	r0
      f4:	f4 cf       	rjmp	.-24     	; 0xde <apMain+0x8>

000000f6 <__vector_18>:
﻿#include "main.h"
#include "atmega128_it.h"


ISR(USART0_RX_vect)
{
      f6:	1f 92       	push	r1
      f8:	0f 92       	push	r0
      fa:	0f b6       	in	r0, 0x3f	; 63
      fc:	0f 92       	push	r0
      fe:	11 24       	eor	r1, r1
	
     100:	0f 90       	pop	r0
     102:	0f be       	out	0x3f, r0	; 63
     104:	0f 90       	pop	r0
     106:	1f 90       	pop	r1
     108:	18 95       	reti

0000010a <bspInit>:
﻿#include "bsp.h"


void bspInit(void)
{
     10a:	08 95       	ret

0000010c <qbufferCreate>:
{

}

bool qbufferCreate(qbuffer_t *p_node, uint8_t *p_buf, uint32_t length)
{
     10c:	fc 01       	movw	r30, r24
	bool ret = true;

	p_node->in    = 0;
     10e:	10 82       	st	Z, r1
     110:	11 82       	std	Z+1, r1	; 0x01
     112:	12 82       	std	Z+2, r1	; 0x02
     114:	13 82       	std	Z+3, r1	; 0x03
	p_node->out   = 0;
     116:	14 82       	std	Z+4, r1	; 0x04
     118:	15 82       	std	Z+5, r1	; 0x05
     11a:	16 82       	std	Z+6, r1	; 0x06
     11c:	17 82       	std	Z+7, r1	; 0x07
	p_node->len   = length;
     11e:	20 87       	std	Z+8, r18	; 0x08
     120:	31 87       	std	Z+9, r19	; 0x09
     122:	42 87       	std	Z+10, r20	; 0x0a
     124:	53 87       	std	Z+11, r21	; 0x0b
	p_node->p_buf = p_buf;
     126:	75 87       	std	Z+13, r23	; 0x0d
     128:	64 87       	std	Z+12, r22	; 0x0c

	return ret;
}
     12a:	81 e0       	ldi	r24, 0x01	; 1
     12c:	08 95       	ret

0000012e <gpioPinMode>:
	}
	return ret;
}

bool gpioPinMode(uint8_t ch, uint8_t mode)
{
     12e:	cf 93       	push	r28
     130:	df 93       	push	r29
     132:	00 d0       	rcall	.+0      	; 0x134 <gpioPinMode+0x6>
     134:	cd b7       	in	r28, 0x3d	; 61
     136:	de b7       	in	r29, 0x3e	; 62
	bool ret = false;
	
	GPIO_InitTypeDef GPIO_InitStruct = {0};
     138:	1a 82       	std	Y+2, r1	; 0x02
     13a:	19 82       	std	Y+1, r1	; 0x01
	
	if (ch < 0 || ch >= GPIO_MAX_CH) return ret;
     13c:	81 11       	cpse	r24, r1
     13e:	0f c0       	rjmp	.+30     	; 0x15e <gpioPinMode+0x30>
	
	switch(mode)
     140:	61 30       	cpi	r22, 0x01	; 1
     142:	11 f4       	brne	.+4      	; 0x148 <gpioPinMode+0x1a>
		case _DEF_INPUT:
			GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
		break;
		
		case _DEF_OUTPUT:
			GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT;
     144:	81 e0       	ldi	r24, 0x01	; 1
     146:	8a 83       	std	Y+2, r24	; 0x02
		break;
		default:
		break;
	}
	
	GPIO_InitStruct.Pin = gpio_tbl[ch].pin;
     148:	e0 e0       	ldi	r30, 0x00	; 0
     14a:	f1 e0       	ldi	r31, 0x01	; 1
     14c:	81 81       	ldd	r24, Z+1	; 0x01
     14e:	89 83       	std	Y+1, r24	; 0x01
	GPIO_Init(gpio_tbl[ch].port, &GPIO_InitStruct);
     150:	be 01       	movw	r22, r28
     152:	6f 5f       	subi	r22, 0xFF	; 255
     154:	7f 4f       	sbci	r23, 0xFF	; 255
     156:	80 81       	ld	r24, Z
     158:	8a d0       	rcall	.+276    	; 0x26e <GPIO_Init>
	ret = true;
	
	return ret;
     15a:	81 e0       	ldi	r24, 0x01	; 1
     15c:	01 c0       	rjmp	.+2      	; 0x160 <gpioPinMode+0x32>
{
	bool ret = false;
	
	GPIO_InitTypeDef GPIO_InitStruct = {0};
	
	if (ch < 0 || ch >= GPIO_MAX_CH) return ret;
     15e:	80 e0       	ldi	r24, 0x00	; 0
	GPIO_InitStruct.Pin = gpio_tbl[ch].pin;
	GPIO_Init(gpio_tbl[ch].port, &GPIO_InitStruct);
	ret = true;
	
	return ret;
}
     160:	0f 90       	pop	r0
     162:	0f 90       	pop	r0
     164:	df 91       	pop	r29
     166:	cf 91       	pop	r28
     168:	08 95       	ret

0000016a <gpioInit>:
{
	bool ret = true;
	
	for(int i = 0; i < GPIO_MAX_CH; i++)
	{
		gpioPinMode(i, gpio_tbl[i].mode);
     16a:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     16e:	80 e0       	ldi	r24, 0x00	; 0
     170:	de df       	rcall	.-68     	; 0x12e <gpioPinMode>
	}
	return ret;
}
     172:	81 e0       	ldi	r24, 0x01	; 1
     174:	08 95       	ret

00000176 <uartInit>:
		qbufferRead(&qbuffer[ch], &ret, 1);
		break;
	}

	return ret;
}
     176:	81 e0       	ldi	r24, 0x01	; 1
     178:	08 95       	ret

0000017a <uartOpen>:
     17a:	81 11       	cpse	r24, r1
     17c:	1e c0       	rjmp	.+60     	; 0x1ba <uartOpen+0x40>
     17e:	e0 e7       	ldi	r30, 0x70	; 112
     180:	f3 e0       	ldi	r31, 0x03	; 3
     182:	10 82       	st	Z, r1
     184:	41 83       	std	Z+1, r20	; 0x01
     186:	52 83       	std	Z+2, r21	; 0x02
     188:	63 83       	std	Z+3, r22	; 0x03
     18a:	74 83       	std	Z+4, r23	; 0x04
     18c:	16 82       	std	Z+6, r1	; 0x06
     18e:	17 82       	std	Z+7, r1	; 0x07
     190:	15 82       	std	Z+5, r1	; 0x05
     192:	82 e0       	ldi	r24, 0x02	; 2
     194:	80 87       	std	Z+8, r24	; 0x08
     196:	11 86       	std	Z+9, r1	; 0x09
     198:	20 e0       	ldi	r18, 0x00	; 0
     19a:	32 e0       	ldi	r19, 0x02	; 2
     19c:	40 e0       	ldi	r20, 0x00	; 0
     19e:	50 e0       	ldi	r21, 0x00	; 0
     1a0:	62 e6       	ldi	r22, 0x62	; 98
     1a2:	71 e0       	ldi	r23, 0x01	; 1
     1a4:	82 e6       	ldi	r24, 0x62	; 98
     1a6:	93 e0       	ldi	r25, 0x03	; 3
     1a8:	b1 df       	rcall	.-158    	; 0x10c <qbufferCreate>
     1aa:	80 e7       	ldi	r24, 0x70	; 112
     1ac:	93 e0       	ldi	r25, 0x03	; 3
     1ae:	9a d0       	rcall	.+308    	; 0x2e4 <UART_Init>
     1b0:	91 e0       	ldi	r25, 0x01	; 1
     1b2:	88 23       	and	r24, r24
     1b4:	19 f0       	breq	.+6      	; 0x1bc <uartOpen+0x42>
     1b6:	90 e0       	ldi	r25, 0x00	; 0
     1b8:	01 c0       	rjmp	.+2      	; 0x1bc <uartOpen+0x42>
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	89 2f       	mov	r24, r25
     1be:	08 95       	ret

000001c0 <uartWrite>:

uint32_t uartWrite(uint8_t ch, uint8_t *p_data, uint32_t length)
{
     1c0:	cf 92       	push	r12
     1c2:	df 92       	push	r13
     1c4:	ef 92       	push	r14
     1c6:	ff 92       	push	r15
     1c8:	0f 93       	push	r16
     1ca:	1f 93       	push	r17
     1cc:	69 01       	movw	r12, r18
     1ce:	7a 01       	movw	r14, r20
	uint32_t ret = 0;
	StatusTypeDef status;
	switch(ch)
     1d0:	81 11       	cpse	r24, r1
     1d2:	0b c0       	rjmp	.+22     	; 0x1ea <uartWrite+0x2a>
	{
		case _DEF_UART0:
		status = UART_Transmit(&huart1, p_data, length, 100);
     1d4:	04 e6       	ldi	r16, 0x64	; 100
     1d6:	10 e0       	ldi	r17, 0x00	; 0
     1d8:	20 e0       	ldi	r18, 0x00	; 0
     1da:	30 e0       	ldi	r19, 0x00	; 0
     1dc:	a6 01       	movw	r20, r12
     1de:	80 e7       	ldi	r24, 0x70	; 112
     1e0:	93 e0       	ldi	r25, 0x03	; 3
     1e2:	7d d2       	rcall	.+1274   	; 0x6de <UART_Transmit>
		if (status == OK)
     1e4:	88 23       	and	r24, r24
     1e6:	41 f0       	breq	.+16     	; 0x1f8 <uartWrite+0x38>
     1e8:	04 c0       	rjmp	.+8      	; 0x1f2 <uartWrite+0x32>
	return ret;
}

uint32_t uartWrite(uint8_t ch, uint8_t *p_data, uint32_t length)
{
	uint32_t ret = 0;
     1ea:	c1 2c       	mov	r12, r1
     1ec:	d1 2c       	mov	r13, r1
     1ee:	76 01       	movw	r14, r12
     1f0:	03 c0       	rjmp	.+6      	; 0x1f8 <uartWrite+0x38>
     1f2:	c1 2c       	mov	r12, r1
     1f4:	d1 2c       	mov	r13, r1
     1f6:	76 01       	movw	r14, r12
			ret = length;
		}
		break;
	}
	return ret;
}
     1f8:	c7 01       	movw	r24, r14
     1fa:	b6 01       	movw	r22, r12
     1fc:	1f 91       	pop	r17
     1fe:	0f 91       	pop	r16
     200:	ff 90       	pop	r15
     202:	ef 90       	pop	r14
     204:	df 90       	pop	r13
     206:	cf 90       	pop	r12
     208:	08 95       	ret

0000020a <uartPrintf>:

uint32_t uartPrintf(uint8_t ch, char *fmt, ...)
{
     20a:	cf 93       	push	r28
     20c:	df 93       	push	r29
     20e:	cd b7       	in	r28, 0x3d	; 61
     210:	de b7       	in	r29, 0x3e	; 62
     212:	da 95       	dec	r29
     214:	0f b6       	in	r0, 0x3f	; 63
     216:	f8 94       	cli
     218:	de bf       	out	0x3e, r29	; 62
     21a:	0f be       	out	0x3f, r0	; 63
     21c:	cd bf       	out	0x3d, r28	; 61
	va_list args;
	int len;
	uint32_t ret;

	va_start(args, fmt);
	len = vsnprintf(buf, 256, fmt, args);
     21e:	9e 01       	movw	r18, r28
     220:	28 5f       	subi	r18, 0xF8	; 248
     222:	3e 4f       	sbci	r19, 0xFE	; 254
     224:	ca 5f       	subi	r28, 0xFA	; 250
     226:	de 4f       	sbci	r29, 0xFE	; 254
     228:	48 81       	ld	r20, Y
     22a:	59 81       	ldd	r21, Y+1	; 0x01
     22c:	c6 50       	subi	r28, 0x06	; 6
     22e:	d1 40       	sbci	r29, 0x01	; 1
     230:	60 e0       	ldi	r22, 0x00	; 0
     232:	71 e0       	ldi	r23, 0x01	; 1
     234:	ce 01       	movw	r24, r28
     236:	01 96       	adiw	r24, 0x01	; 1
     238:	45 d4       	rcall	.+2186   	; 0xac4 <vsnprintf>

	ret = uartWrite(ch, (uint8_t *)buf, len);
     23a:	9c 01       	movw	r18, r24
     23c:	99 0f       	add	r25, r25
     23e:	44 0b       	sbc	r20, r20
     240:	55 0b       	sbc	r21, r21
     242:	be 01       	movw	r22, r28
     244:	6f 5f       	subi	r22, 0xFF	; 255
     246:	7f 4f       	sbci	r23, 0xFF	; 255
     248:	cb 5f       	subi	r28, 0xFB	; 251
     24a:	de 4f       	sbci	r29, 0xFE	; 254
     24c:	88 81       	ld	r24, Y
     24e:	c5 50       	subi	r28, 0x05	; 5
     250:	d1 40       	sbci	r29, 0x01	; 1
     252:	b6 df       	rcall	.-148    	; 0x1c0 <uartWrite>

	va_end(args);
	return ret;
}
     254:	d3 95       	inc	r29
     256:	0f b6       	in	r0, 0x3f	; 63
     258:	f8 94       	cli
     25a:	de bf       	out	0x3e, r29	; 62
     25c:	0f be       	out	0x3f, r0	; 63
     25e:	cd bf       	out	0x3d, r28	; 61
     260:	df 91       	pop	r29
     262:	cf 91       	pop	r28
     264:	08 95       	ret

00000266 <hwInit>:
﻿#include "hw.h"

void hwInit(void)
{
	bspInit();
     266:	51 df       	rcall	.-350    	; 0x10a <bspInit>
	gpioInit();
     268:	80 df       	rcall	.-256    	; 0x16a <gpioInit>
	uartInit();
     26a:	85 cf       	rjmp	.-246    	; 0x176 <uartInit>
     26c:	08 95       	ret

0000026e <GPIO_Init>:
     26e:	90 e0       	ldi	r25, 0x00	; 0
	
void GPIO_Init(uint8_t port, GPIO_InitTypeDef *GPIO_Init)
{
	GPIO_TypeDef *gpio = &GPIO_descripter[port];
	
	if(GPIO_Init->Mode == GPIO_MODE_INPUT)
     270:	db 01       	movw	r26, r22
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	2c 91       	ld	r18, X
     276:	11 97       	sbiw	r26, 0x01	; 1
     278:	21 11       	cpse	r18, r1
     27a:	19 c0       	rjmp	.+50     	; 0x2ae <GPIO_Init+0x40>
	{
		CLRB(*(gpio->DDRn), GPIO_Init->Pin);
     27c:	fc 01       	movw	r30, r24
     27e:	ee 0f       	add	r30, r30
     280:	ff 1f       	adc	r31, r31
     282:	e8 0f       	add	r30, r24
     284:	f9 1f       	adc	r31, r25
     286:	ee 0f       	add	r30, r30
     288:	ff 1f       	adc	r31, r31
     28a:	eb 5f       	subi	r30, 0xFB	; 251
     28c:	fe 4f       	sbci	r31, 0xFE	; 254
     28e:	01 90       	ld	r0, Z+
     290:	f0 81       	ld	r31, Z
     292:	e0 2d       	mov	r30, r0
     294:	20 81       	ld	r18, Z
     296:	81 e0       	ldi	r24, 0x01	; 1
     298:	90 e0       	ldi	r25, 0x00	; 0
     29a:	0c 90       	ld	r0, X
     29c:	02 c0       	rjmp	.+4      	; 0x2a2 <GPIO_Init+0x34>
     29e:	88 0f       	add	r24, r24
     2a0:	99 1f       	adc	r25, r25
     2a2:	0a 94       	dec	r0
     2a4:	e2 f7       	brpl	.-8      	; 0x29e <GPIO_Init+0x30>
     2a6:	80 95       	com	r24
     2a8:	82 23       	and	r24, r18
     2aa:	80 83       	st	Z, r24
     2ac:	08 95       	ret
	}
	else if(GPIO_Init->Mode == GPIO_MODE_OUTPUT)
     2ae:	21 30       	cpi	r18, 0x01	; 1
     2b0:	c1 f4       	brne	.+48     	; 0x2e2 <GPIO_Init+0x74>
	{
		SETB(*(gpio->DDRn), GPIO_Init->Pin);
     2b2:	fc 01       	movw	r30, r24
     2b4:	ee 0f       	add	r30, r30
     2b6:	ff 1f       	adc	r31, r31
     2b8:	e8 0f       	add	r30, r24
     2ba:	f9 1f       	adc	r31, r25
     2bc:	ee 0f       	add	r30, r30
     2be:	ff 1f       	adc	r31, r31
     2c0:	eb 5f       	subi	r30, 0xFB	; 251
     2c2:	fe 4f       	sbci	r31, 0xFE	; 254
     2c4:	01 90       	ld	r0, Z+
     2c6:	f0 81       	ld	r31, Z
     2c8:	e0 2d       	mov	r30, r0
     2ca:	20 81       	ld	r18, Z
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	db 01       	movw	r26, r22
     2d2:	0c 90       	ld	r0, X
     2d4:	02 c0       	rjmp	.+4      	; 0x2da <GPIO_Init+0x6c>
     2d6:	88 0f       	add	r24, r24
     2d8:	99 1f       	adc	r25, r25
     2da:	0a 94       	dec	r0
     2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <GPIO_Init+0x68>
     2de:	82 2b       	or	r24, r18
     2e0:	80 83       	st	Z, r24
     2e2:	08 95       	ret

000002e4 <UART_Init>:
	{&UDR0, &UCSR0A, &UCSR0B, &UCSR0C, &UBRR0H, &UBRR0L},
	{&UDR1, &UCSR1A, &UCSR1B, &UCSR1C, &UBRR1H, &UBRR1L},	
};

StatusTypeDef UART_Init(UART_HandleTypeDef *huart)
{
     2e4:	cf 92       	push	r12
     2e6:	df 92       	push	r13
     2e8:	ef 92       	push	r14
     2ea:	ff 92       	push	r15
     2ec:	0f 93       	push	r16
     2ee:	1f 93       	push	r17
     2f0:	cf 93       	push	r28
     2f2:	df 93       	push	r29
	uint32_t temp;
	USART_TypeDef *usart = &USART_descripter[huart->USARTn];
     2f4:	fc 01       	movw	r30, r24
     2f6:	c0 81       	ld	r28, Z
     2f8:	d0 e0       	ldi	r29, 0x00	; 0
	if (huart == NULL)
     2fa:	00 97       	sbiw	r24, 0x00	; 0
     2fc:	09 f4       	brne	.+2      	; 0x300 <UART_Init+0x1c>
     2fe:	e3 c1       	rjmp	.+966    	; 0x6c6 <__LOCK_REGION_LENGTH__+0x2c6>
     300:	8c 01       	movw	r16, r24
	{
		return ERROR;
	}
	
	
	switch(huart->Init.OverSampling)
     302:	81 85       	ldd	r24, Z+9	; 0x09
     304:	88 23       	and	r24, r24
     306:	21 f0       	breq	.+8      	; 0x310 <UART_Init+0x2c>
     308:	81 30       	cpi	r24, 0x01	; 1
     30a:	09 f4       	brne	.+2      	; 0x30e <UART_Init+0x2a>
     30c:	41 c0       	rjmp	.+130    	; 0x390 <UART_Init+0xac>
     30e:	7b c0       	rjmp	.+246    	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
	{
		case UART_OVERSAMPLING_8:
		temp = (float)(F_CPU / (float)(16 * huart->Init.BaudRate)) - 0.5; //-1.0 + 0.5 => for rounding
     310:	81 81       	ldd	r24, Z+1	; 0x01
     312:	92 81       	ldd	r25, Z+2	; 0x02
     314:	a3 81       	ldd	r26, Z+3	; 0x03
     316:	b4 81       	ldd	r27, Z+4	; 0x04
     318:	88 0f       	add	r24, r24
     31a:	99 1f       	adc	r25, r25
     31c:	aa 1f       	adc	r26, r26
     31e:	bb 1f       	adc	r27, r27
     320:	88 0f       	add	r24, r24
     322:	99 1f       	adc	r25, r25
     324:	aa 1f       	adc	r26, r26
     326:	bb 1f       	adc	r27, r27
     328:	bc 01       	movw	r22, r24
     32a:	cd 01       	movw	r24, r26
     32c:	66 0f       	add	r22, r22
     32e:	77 1f       	adc	r23, r23
     330:	88 1f       	adc	r24, r24
     332:	99 1f       	adc	r25, r25
     334:	66 0f       	add	r22, r22
     336:	77 1f       	adc	r23, r23
     338:	88 1f       	adc	r24, r24
     33a:	99 1f       	adc	r25, r25
     33c:	35 d3       	rcall	.+1642   	; 0x9a8 <__floatunsisf>
     33e:	9b 01       	movw	r18, r22
     340:	ac 01       	movw	r20, r24
     342:	60 e0       	ldi	r22, 0x00	; 0
     344:	74 e2       	ldi	r23, 0x24	; 36
     346:	84 e7       	ldi	r24, 0x74	; 116
     348:	9b e4       	ldi	r25, 0x4B	; 75
     34a:	9a d2       	rcall	.+1332   	; 0x880 <__divsf3>
     34c:	20 e0       	ldi	r18, 0x00	; 0
     34e:	30 e0       	ldi	r19, 0x00	; 0
     350:	40 e0       	ldi	r20, 0x00	; 0
     352:	5f e3       	ldi	r21, 0x3F	; 63
     354:	30 d2       	rcall	.+1120   	; 0x7b6 <__subsf3>
     356:	fc d2       	rcall	.+1528   	; 0x950 <__fixunssfsi>
		*(usart->UBRRnH) = (temp >> 8) & 0xFF;
     358:	fe 01       	movw	r30, r28
     35a:	ee 0f       	add	r30, r30
     35c:	ff 1f       	adc	r31, r31
     35e:	ec 0f       	add	r30, r28
     360:	fd 1f       	adc	r31, r29
     362:	ee 0f       	add	r30, r30
     364:	ff 1f       	adc	r31, r31
     366:	ee 0f       	add	r30, r30
     368:	ff 1f       	adc	r31, r31
     36a:	e1 5d       	subi	r30, 0xD1	; 209
     36c:	fe 4f       	sbci	r31, 0xFE	; 254
     36e:	a0 85       	ldd	r26, Z+8	; 0x08
     370:	b1 85       	ldd	r27, Z+9	; 0x09
     372:	c7 2e       	mov	r12, r23
     374:	d8 2e       	mov	r13, r24
     376:	e9 2e       	mov	r14, r25
     378:	ff 24       	eor	r15, r15
     37a:	cc 92       	st	X, r12
		*(usart->UBRRnL) = temp & 0xFF;
     37c:	a2 85       	ldd	r26, Z+10	; 0x0a
     37e:	b3 85       	ldd	r27, Z+11	; 0x0b
     380:	6c 93       	st	X, r22
		CLRB(*(usart->UCSRnA), 1);
     382:	02 80       	ldd	r0, Z+2	; 0x02
     384:	f3 81       	ldd	r31, Z+3	; 0x03
     386:	e0 2d       	mov	r30, r0
     388:	80 81       	ld	r24, Z
     38a:	8d 7f       	andi	r24, 0xFD	; 253
     38c:	80 83       	st	Z, r24
		break;
     38e:	3b c0       	rjmp	.+118    	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
		case UART_OVERSAMPLING_16:
		temp = (float)(F_CPU / (float)(8 * huart->Init.BaudRate)) - 0.5;
     390:	81 81       	ldd	r24, Z+1	; 0x01
     392:	92 81       	ldd	r25, Z+2	; 0x02
     394:	a3 81       	ldd	r26, Z+3	; 0x03
     396:	b4 81       	ldd	r27, Z+4	; 0x04
     398:	88 0f       	add	r24, r24
     39a:	99 1f       	adc	r25, r25
     39c:	aa 1f       	adc	r26, r26
     39e:	bb 1f       	adc	r27, r27
     3a0:	88 0f       	add	r24, r24
     3a2:	99 1f       	adc	r25, r25
     3a4:	aa 1f       	adc	r26, r26
     3a6:	bb 1f       	adc	r27, r27
     3a8:	bc 01       	movw	r22, r24
     3aa:	cd 01       	movw	r24, r26
     3ac:	66 0f       	add	r22, r22
     3ae:	77 1f       	adc	r23, r23
     3b0:	88 1f       	adc	r24, r24
     3b2:	99 1f       	adc	r25, r25
     3b4:	f9 d2       	rcall	.+1522   	; 0x9a8 <__floatunsisf>
     3b6:	9b 01       	movw	r18, r22
     3b8:	ac 01       	movw	r20, r24
     3ba:	60 e0       	ldi	r22, 0x00	; 0
     3bc:	74 e2       	ldi	r23, 0x24	; 36
     3be:	84 e7       	ldi	r24, 0x74	; 116
     3c0:	9b e4       	ldi	r25, 0x4B	; 75
     3c2:	5e d2       	rcall	.+1212   	; 0x880 <__divsf3>
     3c4:	20 e0       	ldi	r18, 0x00	; 0
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	40 e0       	ldi	r20, 0x00	; 0
     3ca:	5f e3       	ldi	r21, 0x3F	; 63
     3cc:	f4 d1       	rcall	.+1000   	; 0x7b6 <__subsf3>
     3ce:	c0 d2       	rcall	.+1408   	; 0x950 <__fixunssfsi>
		*(usart->UBRRnH) = (temp >> 8) & 0xFF;
     3d0:	fe 01       	movw	r30, r28
     3d2:	ee 0f       	add	r30, r30
     3d4:	ff 1f       	adc	r31, r31
     3d6:	ec 0f       	add	r30, r28
     3d8:	fd 1f       	adc	r31, r29
     3da:	ee 0f       	add	r30, r30
     3dc:	ff 1f       	adc	r31, r31
     3de:	ee 0f       	add	r30, r30
     3e0:	ff 1f       	adc	r31, r31
     3e2:	e1 5d       	subi	r30, 0xD1	; 209
     3e4:	fe 4f       	sbci	r31, 0xFE	; 254
     3e6:	a0 85       	ldd	r26, Z+8	; 0x08
     3e8:	b1 85       	ldd	r27, Z+9	; 0x09
     3ea:	c7 2e       	mov	r12, r23
     3ec:	d8 2e       	mov	r13, r24
     3ee:	e9 2e       	mov	r14, r25
     3f0:	ff 24       	eor	r15, r15
     3f2:	cc 92       	st	X, r12
		*(usart->UBRRnL) = temp & 0xFF;
     3f4:	a2 85       	ldd	r26, Z+10	; 0x0a
     3f6:	b3 85       	ldd	r27, Z+11	; 0x0b
     3f8:	6c 93       	st	X, r22
		SETB(*(usart->UCSRnA), 1);
     3fa:	02 80       	ldd	r0, Z+2	; 0x02
     3fc:	f3 81       	ldd	r31, Z+3	; 0x03
     3fe:	e0 2d       	mov	r30, r0
     400:	80 81       	ld	r24, Z
     402:	82 60       	ori	r24, 0x02	; 2
     404:	80 83       	st	Z, r24
		break;
		default:
		break;
	}
	
	switch(huart->Init.WordLength)
     406:	f8 01       	movw	r30, r16
     408:	85 81       	ldd	r24, Z+5	; 0x05
     40a:	82 30       	cpi	r24, 0x02	; 2
     40c:	09 f4       	brne	.+2      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     40e:	45 c0       	rjmp	.+138    	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
     410:	28 f4       	brcc	.+10     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     412:	88 23       	and	r24, r24
     414:	51 f0       	breq	.+20     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     416:	81 30       	cpi	r24, 0x01	; 1
     418:	21 f1       	breq	.+72     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
     41a:	92 c0       	rjmp	.+292    	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     41c:	83 30       	cpi	r24, 0x03	; 3
     41e:	09 f4       	brne	.+2      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     420:	58 c0       	rjmp	.+176    	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
     422:	84 30       	cpi	r24, 0x04	; 4
     424:	09 f4       	brne	.+2      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     426:	71 c0       	rjmp	.+226    	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
     428:	8b c0       	rjmp	.+278    	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
	{
		case UART_WORDLENGTH_8B:
		CLRB(*(usart->UCSRnB), 2);
     42a:	fe 01       	movw	r30, r28
     42c:	ee 0f       	add	r30, r30
     42e:	ff 1f       	adc	r31, r31
     430:	ec 0f       	add	r30, r28
     432:	fd 1f       	adc	r31, r29
     434:	ee 0f       	add	r30, r30
     436:	ff 1f       	adc	r31, r31
     438:	ee 0f       	add	r30, r30
     43a:	ff 1f       	adc	r31, r31
     43c:	e1 5d       	subi	r30, 0xD1	; 209
     43e:	fe 4f       	sbci	r31, 0xFE	; 254
     440:	a4 81       	ldd	r26, Z+4	; 0x04
     442:	b5 81       	ldd	r27, Z+5	; 0x05
     444:	8c 91       	ld	r24, X
     446:	8b 7f       	andi	r24, 0xFB	; 251
     448:	8c 93       	st	X, r24
		SETB(*(usart->UCSRnC), 2);
     44a:	a6 81       	ldd	r26, Z+6	; 0x06
     44c:	b7 81       	ldd	r27, Z+7	; 0x07
     44e:	8c 91       	ld	r24, X
     450:	84 60       	ori	r24, 0x04	; 4
     452:	8c 93       	st	X, r24
		SETB(*(usart->UCSRnC), 1);
     454:	06 80       	ldd	r0, Z+6	; 0x06
     456:	f7 81       	ldd	r31, Z+7	; 0x07
     458:	e0 2d       	mov	r30, r0
     45a:	80 81       	ld	r24, Z
     45c:	82 60       	ori	r24, 0x02	; 2
     45e:	80 83       	st	Z, r24
		break;
     460:	6f c0       	rjmp	.+222    	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
		case UART_WORDLENGTH_5B:
		CLRB(*(usart->UCSRnB), 2);
     462:	fe 01       	movw	r30, r28
     464:	ee 0f       	add	r30, r30
     466:	ff 1f       	adc	r31, r31
     468:	ec 0f       	add	r30, r28
     46a:	fd 1f       	adc	r31, r29
     46c:	ee 0f       	add	r30, r30
     46e:	ff 1f       	adc	r31, r31
     470:	ee 0f       	add	r30, r30
     472:	ff 1f       	adc	r31, r31
     474:	e1 5d       	subi	r30, 0xD1	; 209
     476:	fe 4f       	sbci	r31, 0xFE	; 254
     478:	a4 81       	ldd	r26, Z+4	; 0x04
     47a:	b5 81       	ldd	r27, Z+5	; 0x05
     47c:	8c 91       	ld	r24, X
     47e:	8b 7f       	andi	r24, 0xFB	; 251
     480:	8c 93       	st	X, r24
		CLRB(*(usart->UCSRnC), 2);
     482:	a6 81       	ldd	r26, Z+6	; 0x06
     484:	b7 81       	ldd	r27, Z+7	; 0x07
     486:	8c 91       	ld	r24, X
     488:	8b 7f       	andi	r24, 0xFB	; 251
     48a:	8c 93       	st	X, r24
		CLRB(*(usart->UCSRnC), 1);
     48c:	06 80       	ldd	r0, Z+6	; 0x06
     48e:	f7 81       	ldd	r31, Z+7	; 0x07
     490:	e0 2d       	mov	r30, r0
     492:	80 81       	ld	r24, Z
     494:	8d 7f       	andi	r24, 0xFD	; 253
     496:	80 83       	st	Z, r24
		break;
     498:	53 c0       	rjmp	.+166    	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
		case UART_WORDLENGTH_6B:
		CLRB(*(usart->UCSRnB), 2);
     49a:	fe 01       	movw	r30, r28
     49c:	ee 0f       	add	r30, r30
     49e:	ff 1f       	adc	r31, r31
     4a0:	ec 0f       	add	r30, r28
     4a2:	fd 1f       	adc	r31, r29
     4a4:	ee 0f       	add	r30, r30
     4a6:	ff 1f       	adc	r31, r31
     4a8:	ee 0f       	add	r30, r30
     4aa:	ff 1f       	adc	r31, r31
     4ac:	e1 5d       	subi	r30, 0xD1	; 209
     4ae:	fe 4f       	sbci	r31, 0xFE	; 254
     4b0:	a4 81       	ldd	r26, Z+4	; 0x04
     4b2:	b5 81       	ldd	r27, Z+5	; 0x05
     4b4:	8c 91       	ld	r24, X
     4b6:	8b 7f       	andi	r24, 0xFB	; 251
     4b8:	8c 93       	st	X, r24
		CLRB(*(usart->UCSRnC), 2);
     4ba:	a6 81       	ldd	r26, Z+6	; 0x06
     4bc:	b7 81       	ldd	r27, Z+7	; 0x07
     4be:	8c 91       	ld	r24, X
     4c0:	8b 7f       	andi	r24, 0xFB	; 251
     4c2:	8c 93       	st	X, r24
		SETB(*(usart->UCSRnC), 1);
     4c4:	06 80       	ldd	r0, Z+6	; 0x06
     4c6:	f7 81       	ldd	r31, Z+7	; 0x07
     4c8:	e0 2d       	mov	r30, r0
     4ca:	80 81       	ld	r24, Z
     4cc:	82 60       	ori	r24, 0x02	; 2
     4ce:	80 83       	st	Z, r24
		break;
     4d0:	37 c0       	rjmp	.+110    	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
		case UART_WORDLENGTH_7B:
		CLRB(*(usart->UCSRnB), 2);
     4d2:	fe 01       	movw	r30, r28
     4d4:	ee 0f       	add	r30, r30
     4d6:	ff 1f       	adc	r31, r31
     4d8:	ec 0f       	add	r30, r28
     4da:	fd 1f       	adc	r31, r29
     4dc:	ee 0f       	add	r30, r30
     4de:	ff 1f       	adc	r31, r31
     4e0:	ee 0f       	add	r30, r30
     4e2:	ff 1f       	adc	r31, r31
     4e4:	e1 5d       	subi	r30, 0xD1	; 209
     4e6:	fe 4f       	sbci	r31, 0xFE	; 254
     4e8:	a4 81       	ldd	r26, Z+4	; 0x04
     4ea:	b5 81       	ldd	r27, Z+5	; 0x05
     4ec:	8c 91       	ld	r24, X
     4ee:	8b 7f       	andi	r24, 0xFB	; 251
     4f0:	8c 93       	st	X, r24
		SETB(*(usart->UCSRnC), 2);
     4f2:	a6 81       	ldd	r26, Z+6	; 0x06
     4f4:	b7 81       	ldd	r27, Z+7	; 0x07
     4f6:	8c 91       	ld	r24, X
     4f8:	84 60       	ori	r24, 0x04	; 4
     4fa:	8c 93       	st	X, r24
		CLRB(*(usart->UCSRnC), 1);
     4fc:	06 80       	ldd	r0, Z+6	; 0x06
     4fe:	f7 81       	ldd	r31, Z+7	; 0x07
     500:	e0 2d       	mov	r30, r0
     502:	80 81       	ld	r24, Z
     504:	8d 7f       	andi	r24, 0xFD	; 253
     506:	80 83       	st	Z, r24
		break;
     508:	1b c0       	rjmp	.+54     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
		case UART_WORDLENGTH_9B:
		SETB(*(usart->UCSRnB), 2);
     50a:	fe 01       	movw	r30, r28
     50c:	ee 0f       	add	r30, r30
     50e:	ff 1f       	adc	r31, r31
     510:	ec 0f       	add	r30, r28
     512:	fd 1f       	adc	r31, r29
     514:	ee 0f       	add	r30, r30
     516:	ff 1f       	adc	r31, r31
     518:	ee 0f       	add	r30, r30
     51a:	ff 1f       	adc	r31, r31
     51c:	e1 5d       	subi	r30, 0xD1	; 209
     51e:	fe 4f       	sbci	r31, 0xFE	; 254
     520:	a4 81       	ldd	r26, Z+4	; 0x04
     522:	b5 81       	ldd	r27, Z+5	; 0x05
     524:	8c 91       	ld	r24, X
     526:	84 60       	ori	r24, 0x04	; 4
     528:	8c 93       	st	X, r24
		SETB(*(usart->UCSRnC), 2);
     52a:	a6 81       	ldd	r26, Z+6	; 0x06
     52c:	b7 81       	ldd	r27, Z+7	; 0x07
     52e:	8c 91       	ld	r24, X
     530:	84 60       	ori	r24, 0x04	; 4
     532:	8c 93       	st	X, r24
		SETB(*(usart->UCSRnC), 1);
     534:	06 80       	ldd	r0, Z+6	; 0x06
     536:	f7 81       	ldd	r31, Z+7	; 0x07
     538:	e0 2d       	mov	r30, r0
     53a:	80 81       	ld	r24, Z
     53c:	82 60       	ori	r24, 0x02	; 2
     53e:	80 83       	st	Z, r24
		break;
		default:
		break;
	}
	
	switch(huart->Init.StopBits)
     540:	f8 01       	movw	r30, r16
     542:	86 81       	ldd	r24, Z+6	; 0x06
     544:	88 23       	and	r24, r24
     546:	19 f0       	breq	.+6      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
     548:	81 30       	cpi	r24, 0x01	; 1
     54a:	99 f0       	breq	.+38     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
     54c:	23 c0       	rjmp	.+70     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
	{
		case UART_STOPBITS_1:
		CLRB(*(usart->UCSRnC), 4);
     54e:	fe 01       	movw	r30, r28
     550:	ee 0f       	add	r30, r30
     552:	ff 1f       	adc	r31, r31
     554:	ec 0f       	add	r30, r28
     556:	fd 1f       	adc	r31, r29
     558:	ee 0f       	add	r30, r30
     55a:	ff 1f       	adc	r31, r31
     55c:	ee 0f       	add	r30, r30
     55e:	ff 1f       	adc	r31, r31
     560:	e1 5d       	subi	r30, 0xD1	; 209
     562:	fe 4f       	sbci	r31, 0xFE	; 254
     564:	06 80       	ldd	r0, Z+6	; 0x06
     566:	f7 81       	ldd	r31, Z+7	; 0x07
     568:	e0 2d       	mov	r30, r0
     56a:	80 81       	ld	r24, Z
     56c:	8f 7e       	andi	r24, 0xEF	; 239
     56e:	80 83       	st	Z, r24
		break;
     570:	11 c0       	rjmp	.+34     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
		case UART_STOPBITS_2:
		SETB(*(usart->UCSRnC), 4);
     572:	fe 01       	movw	r30, r28
     574:	ee 0f       	add	r30, r30
     576:	ff 1f       	adc	r31, r31
     578:	ec 0f       	add	r30, r28
     57a:	fd 1f       	adc	r31, r29
     57c:	ee 0f       	add	r30, r30
     57e:	ff 1f       	adc	r31, r31
     580:	ee 0f       	add	r30, r30
     582:	ff 1f       	adc	r31, r31
     584:	e1 5d       	subi	r30, 0xD1	; 209
     586:	fe 4f       	sbci	r31, 0xFE	; 254
     588:	06 80       	ldd	r0, Z+6	; 0x06
     58a:	f7 81       	ldd	r31, Z+7	; 0x07
     58c:	e0 2d       	mov	r30, r0
     58e:	80 81       	ld	r24, Z
     590:	80 61       	ori	r24, 0x10	; 16
     592:	80 83       	st	Z, r24
		break;
	}
	
	switch(huart->Init.Parity)
     594:	f8 01       	movw	r30, r16
     596:	87 81       	ldd	r24, Z+7	; 0x07
     598:	81 30       	cpi	r24, 0x01	; 1
     59a:	d9 f0       	breq	.+54     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
     59c:	18 f0       	brcs	.+6      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
     59e:	82 30       	cpi	r24, 0x02	; 2
     5a0:	79 f1       	breq	.+94     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
     5a2:	44 c0       	rjmp	.+136    	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
	{
		case UART_PARITY_NONE:
		CLRB(*(usart->UCSRnC), 6);
     5a4:	fe 01       	movw	r30, r28
     5a6:	ee 0f       	add	r30, r30
     5a8:	ff 1f       	adc	r31, r31
     5aa:	ec 0f       	add	r30, r28
     5ac:	fd 1f       	adc	r31, r29
     5ae:	ee 0f       	add	r30, r30
     5b0:	ff 1f       	adc	r31, r31
     5b2:	ee 0f       	add	r30, r30
     5b4:	ff 1f       	adc	r31, r31
     5b6:	e1 5d       	subi	r30, 0xD1	; 209
     5b8:	fe 4f       	sbci	r31, 0xFE	; 254
     5ba:	a6 81       	ldd	r26, Z+6	; 0x06
     5bc:	b7 81       	ldd	r27, Z+7	; 0x07
     5be:	8c 91       	ld	r24, X
     5c0:	8f 7b       	andi	r24, 0xBF	; 191
     5c2:	8c 93       	st	X, r24
		CLRB(*(usart->UCSRnC), 5);
     5c4:	06 80       	ldd	r0, Z+6	; 0x06
     5c6:	f7 81       	ldd	r31, Z+7	; 0x07
     5c8:	e0 2d       	mov	r30, r0
     5ca:	80 81       	ld	r24, Z
     5cc:	8f 7d       	andi	r24, 0xDF	; 223
     5ce:	80 83       	st	Z, r24
		break;
     5d0:	2d c0       	rjmp	.+90     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
		case UART_PARITY_EVEN:
		SETB(*(usart->UCSRnC), 6);
     5d2:	fe 01       	movw	r30, r28
     5d4:	ee 0f       	add	r30, r30
     5d6:	ff 1f       	adc	r31, r31
     5d8:	ec 0f       	add	r30, r28
     5da:	fd 1f       	adc	r31, r29
     5dc:	ee 0f       	add	r30, r30
     5de:	ff 1f       	adc	r31, r31
     5e0:	ee 0f       	add	r30, r30
     5e2:	ff 1f       	adc	r31, r31
     5e4:	e1 5d       	subi	r30, 0xD1	; 209
     5e6:	fe 4f       	sbci	r31, 0xFE	; 254
     5e8:	a6 81       	ldd	r26, Z+6	; 0x06
     5ea:	b7 81       	ldd	r27, Z+7	; 0x07
     5ec:	8c 91       	ld	r24, X
     5ee:	80 64       	ori	r24, 0x40	; 64
     5f0:	8c 93       	st	X, r24
		CLRB(*(usart->UCSRnC), 5);
     5f2:	06 80       	ldd	r0, Z+6	; 0x06
     5f4:	f7 81       	ldd	r31, Z+7	; 0x07
     5f6:	e0 2d       	mov	r30, r0
     5f8:	80 81       	ld	r24, Z
     5fa:	8f 7d       	andi	r24, 0xDF	; 223
     5fc:	80 83       	st	Z, r24
		break;
     5fe:	16 c0       	rjmp	.+44     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
		case  UART_PARITY_ODD:
		SETB(*(usart->UCSRnC), 6);
     600:	fe 01       	movw	r30, r28
     602:	ee 0f       	add	r30, r30
     604:	ff 1f       	adc	r31, r31
     606:	ec 0f       	add	r30, r28
     608:	fd 1f       	adc	r31, r29
     60a:	ee 0f       	add	r30, r30
     60c:	ff 1f       	adc	r31, r31
     60e:	ee 0f       	add	r30, r30
     610:	ff 1f       	adc	r31, r31
     612:	e1 5d       	subi	r30, 0xD1	; 209
     614:	fe 4f       	sbci	r31, 0xFE	; 254
     616:	a6 81       	ldd	r26, Z+6	; 0x06
     618:	b7 81       	ldd	r27, Z+7	; 0x07
     61a:	8c 91       	ld	r24, X
     61c:	80 64       	ori	r24, 0x40	; 64
     61e:	8c 93       	st	X, r24
		SETB(*(usart->UCSRnC), 5);
     620:	06 80       	ldd	r0, Z+6	; 0x06
     622:	f7 81       	ldd	r31, Z+7	; 0x07
     624:	e0 2d       	mov	r30, r0
     626:	80 81       	ld	r24, Z
     628:	80 62       	ori	r24, 0x20	; 32
     62a:	80 83       	st	Z, r24
		default:
		break;
	}
	
	
	switch(huart->Init.Mode)
     62c:	f8 01       	movw	r30, r16
     62e:	80 85       	ldd	r24, Z+8	; 0x08
     630:	81 30       	cpi	r24, 0x01	; 1
     632:	b1 f0       	breq	.+44     	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
     634:	18 f0       	brcs	.+6      	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
     636:	82 30       	cpi	r24, 0x02	; 2
     638:	29 f1       	breq	.+74     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
     63a:	47 c0       	rjmp	.+142    	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
	{
		case UART_MODE_RX:
		SETB(*(usart->UCSRnB), 4);
     63c:	ce 01       	movw	r24, r28
     63e:	88 0f       	add	r24, r24
     640:	99 1f       	adc	r25, r25
     642:	c8 0f       	add	r28, r24
     644:	d9 1f       	adc	r29, r25
     646:	cc 0f       	add	r28, r28
     648:	dd 1f       	adc	r29, r29
     64a:	cc 0f       	add	r28, r28
     64c:	dd 1f       	adc	r29, r29
     64e:	c1 5d       	subi	r28, 0xD1	; 209
     650:	de 4f       	sbci	r29, 0xFE	; 254
     652:	ec 81       	ldd	r30, Y+4	; 0x04
     654:	fd 81       	ldd	r31, Y+5	; 0x05
     656:	80 81       	ld	r24, Z
     658:	80 61       	ori	r24, 0x10	; 16
     65a:	80 83       	st	Z, r24
		default:
		break;
	}
	
	
	return OK;
     65c:	80 e0       	ldi	r24, 0x00	; 0
	
	switch(huart->Init.Mode)
	{
		case UART_MODE_RX:
		SETB(*(usart->UCSRnB), 4);
		break;
     65e:	36 c0       	rjmp	.+108    	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
		case UART_MODE_TX:
		SETB(*(usart->UCSRnB), 3);
     660:	ce 01       	movw	r24, r28
     662:	88 0f       	add	r24, r24
     664:	99 1f       	adc	r25, r25
     666:	c8 0f       	add	r28, r24
     668:	d9 1f       	adc	r29, r25
     66a:	cc 0f       	add	r28, r28
     66c:	dd 1f       	adc	r29, r29
     66e:	cc 0f       	add	r28, r28
     670:	dd 1f       	adc	r29, r29
     672:	c1 5d       	subi	r28, 0xD1	; 209
     674:	de 4f       	sbci	r29, 0xFE	; 254
     676:	ec 81       	ldd	r30, Y+4	; 0x04
     678:	fd 81       	ldd	r31, Y+5	; 0x05
     67a:	80 81       	ld	r24, Z
     67c:	88 60       	ori	r24, 0x08	; 8
     67e:	80 83       	st	Z, r24
		default:
		break;
	}
	
	
	return OK;
     680:	80 e0       	ldi	r24, 0x00	; 0
		case UART_MODE_RX:
		SETB(*(usart->UCSRnB), 4);
		break;
		case UART_MODE_TX:
		SETB(*(usart->UCSRnB), 3);
		break;
     682:	24 c0       	rjmp	.+72     	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
		case UART_MODE_RX_TX:
		SETB(*(usart->UCSRnB), 3);
     684:	9e 01       	movw	r18, r28
     686:	22 0f       	add	r18, r18
     688:	33 1f       	adc	r19, r19
     68a:	f9 01       	movw	r30, r18
     68c:	ec 0f       	add	r30, r28
     68e:	fd 1f       	adc	r31, r29
     690:	ee 0f       	add	r30, r30
     692:	ff 1f       	adc	r31, r31
     694:	ee 0f       	add	r30, r30
     696:	ff 1f       	adc	r31, r31
     698:	e1 5d       	subi	r30, 0xD1	; 209
     69a:	fe 4f       	sbci	r31, 0xFE	; 254
     69c:	04 80       	ldd	r0, Z+4	; 0x04
     69e:	f5 81       	ldd	r31, Z+5	; 0x05
     6a0:	e0 2d       	mov	r30, r0
     6a2:	80 81       	ld	r24, Z
     6a4:	88 60       	ori	r24, 0x08	; 8
     6a6:	80 83       	st	Z, r24
		SETB(*(usart->UCSRnB), 4);
     6a8:	c2 0f       	add	r28, r18
     6aa:	d3 1f       	adc	r29, r19
     6ac:	cc 0f       	add	r28, r28
     6ae:	dd 1f       	adc	r29, r29
     6b0:	cc 0f       	add	r28, r28
     6b2:	dd 1f       	adc	r29, r29
     6b4:	c1 5d       	subi	r28, 0xD1	; 209
     6b6:	de 4f       	sbci	r29, 0xFE	; 254
     6b8:	ec 81       	ldd	r30, Y+4	; 0x04
     6ba:	fd 81       	ldd	r31, Y+5	; 0x05
     6bc:	80 81       	ld	r24, Z
     6be:	80 61       	ori	r24, 0x10	; 16
     6c0:	80 83       	st	Z, r24
		default:
		break;
	}
	
	
	return OK;
     6c2:	80 e0       	ldi	r24, 0x00	; 0
		SETB(*(usart->UCSRnB), 3);
		break;
		case UART_MODE_RX_TX:
		SETB(*(usart->UCSRnB), 3);
		SETB(*(usart->UCSRnB), 4);
		break;
     6c4:	03 c0       	rjmp	.+6      	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
{
	uint32_t temp;
	USART_TypeDef *usart = &USART_descripter[huart->USARTn];
	if (huart == NULL)
	{
		return ERROR;
     6c6:	81 e0       	ldi	r24, 0x01	; 1
     6c8:	01 c0       	rjmp	.+2      	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
		default:
		break;
	}
	
	
	return OK;
     6ca:	80 e0       	ldi	r24, 0x00	; 0
}
     6cc:	df 91       	pop	r29
     6ce:	cf 91       	pop	r28
     6d0:	1f 91       	pop	r17
     6d2:	0f 91       	pop	r16
     6d4:	ff 90       	pop	r15
     6d6:	ef 90       	pop	r14
     6d8:	df 90       	pop	r13
     6da:	cf 90       	pop	r12
     6dc:	08 95       	ret

000006de <UART_Transmit>:

StatusTypeDef UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
     6de:	af 92       	push	r10
     6e0:	bf 92       	push	r11
     6e2:	cf 92       	push	r12
     6e4:	df 92       	push	r13
     6e6:	ef 92       	push	r14
     6e8:	ff 92       	push	r15
     6ea:	0f 93       	push	r16
     6ec:	1f 93       	push	r17
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	8c 01       	movw	r16, r24
	uint8_t		*pdata8bits		= NULL;
	uint16_t	*pdata16bits	= NULL;
	USART_TypeDef *usart		= &USART_descripter[huart->USARTn];
     6f4:	ec 01       	movw	r28, r24
     6f6:	88 81       	ld	r24, Y
     6f8:	90 e0       	ldi	r25, 0x00	; 0
	
	huart->ErrorCode			= UART_ERROR_NONE;
     6fa:	1e 8a       	std	Y+22, r1	; 0x16
	
	huart->TxXferSize			= Size;
     6fc:	5f 87       	std	Y+15, r21	; 0x0f
     6fe:	4e 87       	std	Y+14, r20	; 0x0e
	huart->TxXferCount			= Size;
     700:	5b 8b       	std	Y+19, r21	; 0x13
     702:	4a 8b       	std	Y+18, r20	; 0x12
	

	
	if (huart->Init.WordLength == UART_WORDLENGTH_9B && huart->Init.Parity == UART_PARITY_NONE)
     704:	2d 81       	ldd	r18, Y+5	; 0x05
     706:	24 30       	cpi	r18, 0x04	; 4
     708:	41 f4       	brne	.+16     	; 0x71a <UART_Transmit+0x3c>
     70a:	2f 81       	ldd	r18, Y+7	; 0x07
     70c:	21 11       	cpse	r18, r1
     70e:	08 c0       	rjmp	.+16     	; 0x720 <UART_Transmit+0x42>
	{
		pdata8bits	= NULL;
		pdata16bits = (uint16_t *) pData;
     710:	e6 2e       	mov	r14, r22
     712:	f7 2e       	mov	r15, r23
	

	
	if (huart->Init.WordLength == UART_WORDLENGTH_9B && huart->Init.Parity == UART_PARITY_NONE)
	{
		pdata8bits	= NULL;
     714:	60 e0       	ldi	r22, 0x00	; 0
     716:	70 e0       	ldi	r23, 0x00	; 0
     718:	05 c0       	rjmp	.+10     	; 0x724 <UART_Transmit+0x46>
		pdata16bits = (uint16_t *) pData;
	}
	else
	{
		pdata8bits	= pData;
		pdata16bits = NULL;
     71a:	e1 2c       	mov	r14, r1
     71c:	f1 2c       	mov	r15, r1
     71e:	02 c0       	rjmp	.+4      	; 0x724 <UART_Transmit+0x46>
     720:	e1 2c       	mov	r14, r1
     722:	f1 2c       	mov	r15, r1
	}
	

	for(int i = 0; i < huart->TxXferCount; i++)
     724:	45 2b       	or	r20, r21
     726:	a9 f1       	breq	.+106    	; 0x792 <UART_Transmit+0xb4>
     728:	a6 2e       	mov	r10, r22
     72a:	b7 2e       	mov	r11, r23
     72c:	d7 01       	movw	r26, r14
     72e:	20 e0       	ldi	r18, 0x00	; 0
     730:	30 e0       	ldi	r19, 0x00	; 0
	{
		while (!(*(usart->UCSRnA) & 0x20));
     732:	bc 01       	movw	r22, r24
     734:	66 0f       	add	r22, r22
     736:	77 1f       	adc	r23, r23
     738:	68 0f       	add	r22, r24
     73a:	79 1f       	adc	r23, r25
     73c:	66 0f       	add	r22, r22
     73e:	77 1f       	adc	r23, r23
     740:	66 0f       	add	r22, r22
     742:	77 1f       	adc	r23, r23
     744:	61 5d       	subi	r22, 0xD1	; 209
     746:	7e 4f       	sbci	r23, 0xFE	; 254
     748:	6b 01       	movw	r12, r22
     74a:	d2 e0       	ldi	r29, 0x02	; 2
     74c:	cd 0e       	add	r12, r29
     74e:	d1 1c       	adc	r13, r1
     750:	e6 01       	movw	r28, r12
     752:	e8 81       	ld	r30, Y
     754:	f9 81       	ldd	r31, Y+1	; 0x01
     756:	90 81       	ld	r25, Z
     758:	95 ff       	sbrs	r25, 5
     75a:	fd cf       	rjmp	.-6      	; 0x756 <UART_Transmit+0x78>
		if (pdata16bits == NULL)
     75c:	e1 14       	cp	r14, r1
     75e:	f1 04       	cpc	r15, r1
     760:	39 f4       	brne	.+14     	; 0x770 <UART_Transmit+0x92>
		{
			*(usart->UDRn) = *(pdata8bits + i);
     762:	eb 01       	movw	r28, r22
     764:	e8 81       	ld	r30, Y
     766:	f9 81       	ldd	r31, Y+1	; 0x01
     768:	e5 01       	movw	r28, r10
     76a:	88 81       	ld	r24, Y
     76c:	80 83       	st	Z, r24
     76e:	05 c0       	rjmp	.+10     	; 0x77a <UART_Transmit+0x9c>
		}
		else
		{
			*(usart->UDRn) = *(pdata16bits + i);
     770:	eb 01       	movw	r28, r22
     772:	e8 81       	ld	r30, Y
     774:	f9 81       	ldd	r31, Y+1	; 0x01
     776:	8c 91       	ld	r24, X
     778:	80 83       	st	Z, r24
		pdata8bits	= pData;
		pdata16bits = NULL;
	}
	

	for(int i = 0; i < huart->TxXferCount; i++)
     77a:	2f 5f       	subi	r18, 0xFF	; 255
     77c:	3f 4f       	sbci	r19, 0xFF	; 255
     77e:	df ef       	ldi	r29, 0xFF	; 255
     780:	ad 1a       	sub	r10, r29
     782:	bd 0a       	sbc	r11, r29
     784:	12 96       	adiw	r26, 0x02	; 2
     786:	f8 01       	movw	r30, r16
     788:	42 89       	ldd	r20, Z+18	; 0x12
     78a:	53 89       	ldd	r21, Z+19	; 0x13
     78c:	24 17       	cp	r18, r20
     78e:	35 07       	cpc	r19, r21
     790:	f8 f2       	brcs	.-66     	; 0x750 <UART_Transmit+0x72>
		}
	}
	
	
	return OK;
}
     792:	80 e0       	ldi	r24, 0x00	; 0
     794:	df 91       	pop	r29
     796:	cf 91       	pop	r28
     798:	1f 91       	pop	r17
     79a:	0f 91       	pop	r16
     79c:	ff 90       	pop	r15
     79e:	ef 90       	pop	r14
     7a0:	df 90       	pop	r13
     7a2:	cf 90       	pop	r12
     7a4:	bf 90       	pop	r11
     7a6:	af 90       	pop	r10
     7a8:	08 95       	ret

000007aa <main>:
#include "main.h"


int main(void)
{
    hwInit();
     7aa:	5d dd       	rcall	.-1350   	; 0x266 <hwInit>
	apInit();
     7ac:	8d dc       	rcall	.-1766   	; 0xc8 <apInit>
	
	apMain();
     7ae:	93 dc       	rcall	.-1754   	; 0xd6 <apMain>
     7b0:	80 e0       	ldi	r24, 0x00	; 0
}
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	08 95       	ret

000007b6 <__subsf3>:
     7b6:	50 58       	subi	r21, 0x80	; 128

000007b8 <__addsf3>:
     7b8:	bb 27       	eor	r27, r27
     7ba:	aa 27       	eor	r26, r26
     7bc:	0e d0       	rcall	.+28     	; 0x7da <__addsf3x>
     7be:	48 c1       	rjmp	.+656    	; 0xa50 <__fp_round>
     7c0:	39 d1       	rcall	.+626    	; 0xa34 <__fp_pscA>
     7c2:	30 f0       	brcs	.+12     	; 0x7d0 <__addsf3+0x18>
     7c4:	3e d1       	rcall	.+636    	; 0xa42 <__fp_pscB>
     7c6:	20 f0       	brcs	.+8      	; 0x7d0 <__addsf3+0x18>
     7c8:	31 f4       	brne	.+12     	; 0x7d6 <__addsf3+0x1e>
     7ca:	9f 3f       	cpi	r25, 0xFF	; 255
     7cc:	11 f4       	brne	.+4      	; 0x7d2 <__addsf3+0x1a>
     7ce:	1e f4       	brtc	.+6      	; 0x7d6 <__addsf3+0x1e>
     7d0:	2e c1       	rjmp	.+604    	; 0xa2e <__fp_nan>
     7d2:	0e f4       	brtc	.+2      	; 0x7d6 <__addsf3+0x1e>
     7d4:	e0 95       	com	r30
     7d6:	e7 fb       	bst	r30, 7
     7d8:	24 c1       	rjmp	.+584    	; 0xa22 <__fp_inf>

000007da <__addsf3x>:
     7da:	e9 2f       	mov	r30, r25
     7dc:	4a d1       	rcall	.+660    	; 0xa72 <__fp_split3>
     7de:	80 f3       	brcs	.-32     	; 0x7c0 <__addsf3+0x8>
     7e0:	ba 17       	cp	r27, r26
     7e2:	62 07       	cpc	r22, r18
     7e4:	73 07       	cpc	r23, r19
     7e6:	84 07       	cpc	r24, r20
     7e8:	95 07       	cpc	r25, r21
     7ea:	18 f0       	brcs	.+6      	; 0x7f2 <__addsf3x+0x18>
     7ec:	71 f4       	brne	.+28     	; 0x80a <__addsf3x+0x30>
     7ee:	9e f5       	brtc	.+102    	; 0x856 <__addsf3x+0x7c>
     7f0:	62 c1       	rjmp	.+708    	; 0xab6 <__fp_zero>
     7f2:	0e f4       	brtc	.+2      	; 0x7f6 <__addsf3x+0x1c>
     7f4:	e0 95       	com	r30
     7f6:	0b 2e       	mov	r0, r27
     7f8:	ba 2f       	mov	r27, r26
     7fa:	a0 2d       	mov	r26, r0
     7fc:	0b 01       	movw	r0, r22
     7fe:	b9 01       	movw	r22, r18
     800:	90 01       	movw	r18, r0
     802:	0c 01       	movw	r0, r24
     804:	ca 01       	movw	r24, r20
     806:	a0 01       	movw	r20, r0
     808:	11 24       	eor	r1, r1
     80a:	ff 27       	eor	r31, r31
     80c:	59 1b       	sub	r21, r25
     80e:	99 f0       	breq	.+38     	; 0x836 <__addsf3x+0x5c>
     810:	59 3f       	cpi	r21, 0xF9	; 249
     812:	50 f4       	brcc	.+20     	; 0x828 <__addsf3x+0x4e>
     814:	50 3e       	cpi	r21, 0xE0	; 224
     816:	68 f1       	brcs	.+90     	; 0x872 <__addsf3x+0x98>
     818:	1a 16       	cp	r1, r26
     81a:	f0 40       	sbci	r31, 0x00	; 0
     81c:	a2 2f       	mov	r26, r18
     81e:	23 2f       	mov	r18, r19
     820:	34 2f       	mov	r19, r20
     822:	44 27       	eor	r20, r20
     824:	58 5f       	subi	r21, 0xF8	; 248
     826:	f3 cf       	rjmp	.-26     	; 0x80e <__addsf3x+0x34>
     828:	46 95       	lsr	r20
     82a:	37 95       	ror	r19
     82c:	27 95       	ror	r18
     82e:	a7 95       	ror	r26
     830:	f0 40       	sbci	r31, 0x00	; 0
     832:	53 95       	inc	r21
     834:	c9 f7       	brne	.-14     	; 0x828 <__addsf3x+0x4e>
     836:	7e f4       	brtc	.+30     	; 0x856 <__addsf3x+0x7c>
     838:	1f 16       	cp	r1, r31
     83a:	ba 0b       	sbc	r27, r26
     83c:	62 0b       	sbc	r22, r18
     83e:	73 0b       	sbc	r23, r19
     840:	84 0b       	sbc	r24, r20
     842:	ba f0       	brmi	.+46     	; 0x872 <__addsf3x+0x98>
     844:	91 50       	subi	r25, 0x01	; 1
     846:	a1 f0       	breq	.+40     	; 0x870 <__addsf3x+0x96>
     848:	ff 0f       	add	r31, r31
     84a:	bb 1f       	adc	r27, r27
     84c:	66 1f       	adc	r22, r22
     84e:	77 1f       	adc	r23, r23
     850:	88 1f       	adc	r24, r24
     852:	c2 f7       	brpl	.-16     	; 0x844 <__addsf3x+0x6a>
     854:	0e c0       	rjmp	.+28     	; 0x872 <__addsf3x+0x98>
     856:	ba 0f       	add	r27, r26
     858:	62 1f       	adc	r22, r18
     85a:	73 1f       	adc	r23, r19
     85c:	84 1f       	adc	r24, r20
     85e:	48 f4       	brcc	.+18     	; 0x872 <__addsf3x+0x98>
     860:	87 95       	ror	r24
     862:	77 95       	ror	r23
     864:	67 95       	ror	r22
     866:	b7 95       	ror	r27
     868:	f7 95       	ror	r31
     86a:	9e 3f       	cpi	r25, 0xFE	; 254
     86c:	08 f0       	brcs	.+2      	; 0x870 <__addsf3x+0x96>
     86e:	b3 cf       	rjmp	.-154    	; 0x7d6 <__addsf3+0x1e>
     870:	93 95       	inc	r25
     872:	88 0f       	add	r24, r24
     874:	08 f0       	brcs	.+2      	; 0x878 <__addsf3x+0x9e>
     876:	99 27       	eor	r25, r25
     878:	ee 0f       	add	r30, r30
     87a:	97 95       	ror	r25
     87c:	87 95       	ror	r24
     87e:	08 95       	ret

00000880 <__divsf3>:
     880:	0c d0       	rcall	.+24     	; 0x89a <__divsf3x>
     882:	e6 c0       	rjmp	.+460    	; 0xa50 <__fp_round>
     884:	de d0       	rcall	.+444    	; 0xa42 <__fp_pscB>
     886:	40 f0       	brcs	.+16     	; 0x898 <__divsf3+0x18>
     888:	d5 d0       	rcall	.+426    	; 0xa34 <__fp_pscA>
     88a:	30 f0       	brcs	.+12     	; 0x898 <__divsf3+0x18>
     88c:	21 f4       	brne	.+8      	; 0x896 <__divsf3+0x16>
     88e:	5f 3f       	cpi	r21, 0xFF	; 255
     890:	19 f0       	breq	.+6      	; 0x898 <__divsf3+0x18>
     892:	c7 c0       	rjmp	.+398    	; 0xa22 <__fp_inf>
     894:	51 11       	cpse	r21, r1
     896:	10 c1       	rjmp	.+544    	; 0xab8 <__fp_szero>
     898:	ca c0       	rjmp	.+404    	; 0xa2e <__fp_nan>

0000089a <__divsf3x>:
     89a:	eb d0       	rcall	.+470    	; 0xa72 <__fp_split3>
     89c:	98 f3       	brcs	.-26     	; 0x884 <__divsf3+0x4>

0000089e <__divsf3_pse>:
     89e:	99 23       	and	r25, r25
     8a0:	c9 f3       	breq	.-14     	; 0x894 <__divsf3+0x14>
     8a2:	55 23       	and	r21, r21
     8a4:	b1 f3       	breq	.-20     	; 0x892 <__divsf3+0x12>
     8a6:	95 1b       	sub	r25, r21
     8a8:	55 0b       	sbc	r21, r21
     8aa:	bb 27       	eor	r27, r27
     8ac:	aa 27       	eor	r26, r26
     8ae:	62 17       	cp	r22, r18
     8b0:	73 07       	cpc	r23, r19
     8b2:	84 07       	cpc	r24, r20
     8b4:	38 f0       	brcs	.+14     	; 0x8c4 <__divsf3_pse+0x26>
     8b6:	9f 5f       	subi	r25, 0xFF	; 255
     8b8:	5f 4f       	sbci	r21, 0xFF	; 255
     8ba:	22 0f       	add	r18, r18
     8bc:	33 1f       	adc	r19, r19
     8be:	44 1f       	adc	r20, r20
     8c0:	aa 1f       	adc	r26, r26
     8c2:	a9 f3       	breq	.-22     	; 0x8ae <__divsf3_pse+0x10>
     8c4:	33 d0       	rcall	.+102    	; 0x92c <__divsf3_pse+0x8e>
     8c6:	0e 2e       	mov	r0, r30
     8c8:	3a f0       	brmi	.+14     	; 0x8d8 <__divsf3_pse+0x3a>
     8ca:	e0 e8       	ldi	r30, 0x80	; 128
     8cc:	30 d0       	rcall	.+96     	; 0x92e <__divsf3_pse+0x90>
     8ce:	91 50       	subi	r25, 0x01	; 1
     8d0:	50 40       	sbci	r21, 0x00	; 0
     8d2:	e6 95       	lsr	r30
     8d4:	00 1c       	adc	r0, r0
     8d6:	ca f7       	brpl	.-14     	; 0x8ca <__divsf3_pse+0x2c>
     8d8:	29 d0       	rcall	.+82     	; 0x92c <__divsf3_pse+0x8e>
     8da:	fe 2f       	mov	r31, r30
     8dc:	27 d0       	rcall	.+78     	; 0x92c <__divsf3_pse+0x8e>
     8de:	66 0f       	add	r22, r22
     8e0:	77 1f       	adc	r23, r23
     8e2:	88 1f       	adc	r24, r24
     8e4:	bb 1f       	adc	r27, r27
     8e6:	26 17       	cp	r18, r22
     8e8:	37 07       	cpc	r19, r23
     8ea:	48 07       	cpc	r20, r24
     8ec:	ab 07       	cpc	r26, r27
     8ee:	b0 e8       	ldi	r27, 0x80	; 128
     8f0:	09 f0       	breq	.+2      	; 0x8f4 <__divsf3_pse+0x56>
     8f2:	bb 0b       	sbc	r27, r27
     8f4:	80 2d       	mov	r24, r0
     8f6:	bf 01       	movw	r22, r30
     8f8:	ff 27       	eor	r31, r31
     8fa:	93 58       	subi	r25, 0x83	; 131
     8fc:	5f 4f       	sbci	r21, 0xFF	; 255
     8fe:	2a f0       	brmi	.+10     	; 0x90a <__divsf3_pse+0x6c>
     900:	9e 3f       	cpi	r25, 0xFE	; 254
     902:	51 05       	cpc	r21, r1
     904:	68 f0       	brcs	.+26     	; 0x920 <__divsf3_pse+0x82>
     906:	8d c0       	rjmp	.+282    	; 0xa22 <__fp_inf>
     908:	d7 c0       	rjmp	.+430    	; 0xab8 <__fp_szero>
     90a:	5f 3f       	cpi	r21, 0xFF	; 255
     90c:	ec f3       	brlt	.-6      	; 0x908 <__divsf3_pse+0x6a>
     90e:	98 3e       	cpi	r25, 0xE8	; 232
     910:	dc f3       	brlt	.-10     	; 0x908 <__divsf3_pse+0x6a>
     912:	86 95       	lsr	r24
     914:	77 95       	ror	r23
     916:	67 95       	ror	r22
     918:	b7 95       	ror	r27
     91a:	f7 95       	ror	r31
     91c:	9f 5f       	subi	r25, 0xFF	; 255
     91e:	c9 f7       	brne	.-14     	; 0x912 <__divsf3_pse+0x74>
     920:	88 0f       	add	r24, r24
     922:	91 1d       	adc	r25, r1
     924:	96 95       	lsr	r25
     926:	87 95       	ror	r24
     928:	97 f9       	bld	r25, 7
     92a:	08 95       	ret
     92c:	e1 e0       	ldi	r30, 0x01	; 1
     92e:	66 0f       	add	r22, r22
     930:	77 1f       	adc	r23, r23
     932:	88 1f       	adc	r24, r24
     934:	bb 1f       	adc	r27, r27
     936:	62 17       	cp	r22, r18
     938:	73 07       	cpc	r23, r19
     93a:	84 07       	cpc	r24, r20
     93c:	ba 07       	cpc	r27, r26
     93e:	20 f0       	brcs	.+8      	; 0x948 <__divsf3_pse+0xaa>
     940:	62 1b       	sub	r22, r18
     942:	73 0b       	sbc	r23, r19
     944:	84 0b       	sbc	r24, r20
     946:	ba 0b       	sbc	r27, r26
     948:	ee 1f       	adc	r30, r30
     94a:	88 f7       	brcc	.-30     	; 0x92e <__divsf3_pse+0x90>
     94c:	e0 95       	com	r30
     94e:	08 95       	ret

00000950 <__fixunssfsi>:
     950:	98 d0       	rcall	.+304    	; 0xa82 <__fp_splitA>
     952:	88 f0       	brcs	.+34     	; 0x976 <__fixunssfsi+0x26>
     954:	9f 57       	subi	r25, 0x7F	; 127
     956:	90 f0       	brcs	.+36     	; 0x97c <__fixunssfsi+0x2c>
     958:	b9 2f       	mov	r27, r25
     95a:	99 27       	eor	r25, r25
     95c:	b7 51       	subi	r27, 0x17	; 23
     95e:	a0 f0       	brcs	.+40     	; 0x988 <__fixunssfsi+0x38>
     960:	d1 f0       	breq	.+52     	; 0x996 <__fixunssfsi+0x46>
     962:	66 0f       	add	r22, r22
     964:	77 1f       	adc	r23, r23
     966:	88 1f       	adc	r24, r24
     968:	99 1f       	adc	r25, r25
     96a:	1a f0       	brmi	.+6      	; 0x972 <__fixunssfsi+0x22>
     96c:	ba 95       	dec	r27
     96e:	c9 f7       	brne	.-14     	; 0x962 <__fixunssfsi+0x12>
     970:	12 c0       	rjmp	.+36     	; 0x996 <__fixunssfsi+0x46>
     972:	b1 30       	cpi	r27, 0x01	; 1
     974:	81 f0       	breq	.+32     	; 0x996 <__fixunssfsi+0x46>
     976:	9f d0       	rcall	.+318    	; 0xab6 <__fp_zero>
     978:	b1 e0       	ldi	r27, 0x01	; 1
     97a:	08 95       	ret
     97c:	9c c0       	rjmp	.+312    	; 0xab6 <__fp_zero>
     97e:	67 2f       	mov	r22, r23
     980:	78 2f       	mov	r23, r24
     982:	88 27       	eor	r24, r24
     984:	b8 5f       	subi	r27, 0xF8	; 248
     986:	39 f0       	breq	.+14     	; 0x996 <__fixunssfsi+0x46>
     988:	b9 3f       	cpi	r27, 0xF9	; 249
     98a:	cc f3       	brlt	.-14     	; 0x97e <__fixunssfsi+0x2e>
     98c:	86 95       	lsr	r24
     98e:	77 95       	ror	r23
     990:	67 95       	ror	r22
     992:	b3 95       	inc	r27
     994:	d9 f7       	brne	.-10     	; 0x98c <__fixunssfsi+0x3c>
     996:	3e f4       	brtc	.+14     	; 0x9a6 <__fixunssfsi+0x56>
     998:	90 95       	com	r25
     99a:	80 95       	com	r24
     99c:	70 95       	com	r23
     99e:	61 95       	neg	r22
     9a0:	7f 4f       	sbci	r23, 0xFF	; 255
     9a2:	8f 4f       	sbci	r24, 0xFF	; 255
     9a4:	9f 4f       	sbci	r25, 0xFF	; 255
     9a6:	08 95       	ret

000009a8 <__floatunsisf>:
     9a8:	e8 94       	clt
     9aa:	09 c0       	rjmp	.+18     	; 0x9be <__floatsisf+0x12>

000009ac <__floatsisf>:
     9ac:	97 fb       	bst	r25, 7
     9ae:	3e f4       	brtc	.+14     	; 0x9be <__floatsisf+0x12>
     9b0:	90 95       	com	r25
     9b2:	80 95       	com	r24
     9b4:	70 95       	com	r23
     9b6:	61 95       	neg	r22
     9b8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ba:	8f 4f       	sbci	r24, 0xFF	; 255
     9bc:	9f 4f       	sbci	r25, 0xFF	; 255
     9be:	99 23       	and	r25, r25
     9c0:	a9 f0       	breq	.+42     	; 0x9ec <__floatsisf+0x40>
     9c2:	f9 2f       	mov	r31, r25
     9c4:	96 e9       	ldi	r25, 0x96	; 150
     9c6:	bb 27       	eor	r27, r27
     9c8:	93 95       	inc	r25
     9ca:	f6 95       	lsr	r31
     9cc:	87 95       	ror	r24
     9ce:	77 95       	ror	r23
     9d0:	67 95       	ror	r22
     9d2:	b7 95       	ror	r27
     9d4:	f1 11       	cpse	r31, r1
     9d6:	f8 cf       	rjmp	.-16     	; 0x9c8 <__floatsisf+0x1c>
     9d8:	fa f4       	brpl	.+62     	; 0xa18 <__floatsisf+0x6c>
     9da:	bb 0f       	add	r27, r27
     9dc:	11 f4       	brne	.+4      	; 0x9e2 <__floatsisf+0x36>
     9de:	60 ff       	sbrs	r22, 0
     9e0:	1b c0       	rjmp	.+54     	; 0xa18 <__floatsisf+0x6c>
     9e2:	6f 5f       	subi	r22, 0xFF	; 255
     9e4:	7f 4f       	sbci	r23, 0xFF	; 255
     9e6:	8f 4f       	sbci	r24, 0xFF	; 255
     9e8:	9f 4f       	sbci	r25, 0xFF	; 255
     9ea:	16 c0       	rjmp	.+44     	; 0xa18 <__floatsisf+0x6c>
     9ec:	88 23       	and	r24, r24
     9ee:	11 f0       	breq	.+4      	; 0x9f4 <__floatsisf+0x48>
     9f0:	96 e9       	ldi	r25, 0x96	; 150
     9f2:	11 c0       	rjmp	.+34     	; 0xa16 <__floatsisf+0x6a>
     9f4:	77 23       	and	r23, r23
     9f6:	21 f0       	breq	.+8      	; 0xa00 <__floatsisf+0x54>
     9f8:	9e e8       	ldi	r25, 0x8E	; 142
     9fa:	87 2f       	mov	r24, r23
     9fc:	76 2f       	mov	r23, r22
     9fe:	05 c0       	rjmp	.+10     	; 0xa0a <__floatsisf+0x5e>
     a00:	66 23       	and	r22, r22
     a02:	71 f0       	breq	.+28     	; 0xa20 <__floatsisf+0x74>
     a04:	96 e8       	ldi	r25, 0x86	; 134
     a06:	86 2f       	mov	r24, r22
     a08:	70 e0       	ldi	r23, 0x00	; 0
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	2a f0       	brmi	.+10     	; 0xa18 <__floatsisf+0x6c>
     a0e:	9a 95       	dec	r25
     a10:	66 0f       	add	r22, r22
     a12:	77 1f       	adc	r23, r23
     a14:	88 1f       	adc	r24, r24
     a16:	da f7       	brpl	.-10     	; 0xa0e <__floatsisf+0x62>
     a18:	88 0f       	add	r24, r24
     a1a:	96 95       	lsr	r25
     a1c:	87 95       	ror	r24
     a1e:	97 f9       	bld	r25, 7
     a20:	08 95       	ret

00000a22 <__fp_inf>:
     a22:	97 f9       	bld	r25, 7
     a24:	9f 67       	ori	r25, 0x7F	; 127
     a26:	80 e8       	ldi	r24, 0x80	; 128
     a28:	70 e0       	ldi	r23, 0x00	; 0
     a2a:	60 e0       	ldi	r22, 0x00	; 0
     a2c:	08 95       	ret

00000a2e <__fp_nan>:
     a2e:	9f ef       	ldi	r25, 0xFF	; 255
     a30:	80 ec       	ldi	r24, 0xC0	; 192
     a32:	08 95       	ret

00000a34 <__fp_pscA>:
     a34:	00 24       	eor	r0, r0
     a36:	0a 94       	dec	r0
     a38:	16 16       	cp	r1, r22
     a3a:	17 06       	cpc	r1, r23
     a3c:	18 06       	cpc	r1, r24
     a3e:	09 06       	cpc	r0, r25
     a40:	08 95       	ret

00000a42 <__fp_pscB>:
     a42:	00 24       	eor	r0, r0
     a44:	0a 94       	dec	r0
     a46:	12 16       	cp	r1, r18
     a48:	13 06       	cpc	r1, r19
     a4a:	14 06       	cpc	r1, r20
     a4c:	05 06       	cpc	r0, r21
     a4e:	08 95       	ret

00000a50 <__fp_round>:
     a50:	09 2e       	mov	r0, r25
     a52:	03 94       	inc	r0
     a54:	00 0c       	add	r0, r0
     a56:	11 f4       	brne	.+4      	; 0xa5c <__fp_round+0xc>
     a58:	88 23       	and	r24, r24
     a5a:	52 f0       	brmi	.+20     	; 0xa70 <__fp_round+0x20>
     a5c:	bb 0f       	add	r27, r27
     a5e:	40 f4       	brcc	.+16     	; 0xa70 <__fp_round+0x20>
     a60:	bf 2b       	or	r27, r31
     a62:	11 f4       	brne	.+4      	; 0xa68 <__fp_round+0x18>
     a64:	60 ff       	sbrs	r22, 0
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <__fp_round+0x20>
     a68:	6f 5f       	subi	r22, 0xFF	; 255
     a6a:	7f 4f       	sbci	r23, 0xFF	; 255
     a6c:	8f 4f       	sbci	r24, 0xFF	; 255
     a6e:	9f 4f       	sbci	r25, 0xFF	; 255
     a70:	08 95       	ret

00000a72 <__fp_split3>:
     a72:	57 fd       	sbrc	r21, 7
     a74:	90 58       	subi	r25, 0x80	; 128
     a76:	44 0f       	add	r20, r20
     a78:	55 1f       	adc	r21, r21
     a7a:	59 f0       	breq	.+22     	; 0xa92 <__fp_splitA+0x10>
     a7c:	5f 3f       	cpi	r21, 0xFF	; 255
     a7e:	71 f0       	breq	.+28     	; 0xa9c <__fp_splitA+0x1a>
     a80:	47 95       	ror	r20

00000a82 <__fp_splitA>:
     a82:	88 0f       	add	r24, r24
     a84:	97 fb       	bst	r25, 7
     a86:	99 1f       	adc	r25, r25
     a88:	61 f0       	breq	.+24     	; 0xaa2 <__fp_splitA+0x20>
     a8a:	9f 3f       	cpi	r25, 0xFF	; 255
     a8c:	79 f0       	breq	.+30     	; 0xaac <__fp_splitA+0x2a>
     a8e:	87 95       	ror	r24
     a90:	08 95       	ret
     a92:	12 16       	cp	r1, r18
     a94:	13 06       	cpc	r1, r19
     a96:	14 06       	cpc	r1, r20
     a98:	55 1f       	adc	r21, r21
     a9a:	f2 cf       	rjmp	.-28     	; 0xa80 <__fp_split3+0xe>
     a9c:	46 95       	lsr	r20
     a9e:	f1 df       	rcall	.-30     	; 0xa82 <__fp_splitA>
     aa0:	08 c0       	rjmp	.+16     	; 0xab2 <__fp_splitA+0x30>
     aa2:	16 16       	cp	r1, r22
     aa4:	17 06       	cpc	r1, r23
     aa6:	18 06       	cpc	r1, r24
     aa8:	99 1f       	adc	r25, r25
     aaa:	f1 cf       	rjmp	.-30     	; 0xa8e <__fp_splitA+0xc>
     aac:	86 95       	lsr	r24
     aae:	71 05       	cpc	r23, r1
     ab0:	61 05       	cpc	r22, r1
     ab2:	08 94       	sec
     ab4:	08 95       	ret

00000ab6 <__fp_zero>:
     ab6:	e8 94       	clt

00000ab8 <__fp_szero>:
     ab8:	bb 27       	eor	r27, r27
     aba:	66 27       	eor	r22, r22
     abc:	77 27       	eor	r23, r23
     abe:	cb 01       	movw	r24, r22
     ac0:	97 f9       	bld	r25, 7
     ac2:	08 95       	ret

00000ac4 <vsnprintf>:
     ac4:	0f 93       	push	r16
     ac6:	1f 93       	push	r17
     ac8:	cf 93       	push	r28
     aca:	df 93       	push	r29
     acc:	cd b7       	in	r28, 0x3d	; 61
     ace:	de b7       	in	r29, 0x3e	; 62
     ad0:	2e 97       	sbiw	r28, 0x0e	; 14
     ad2:	0f b6       	in	r0, 0x3f	; 63
     ad4:	f8 94       	cli
     ad6:	de bf       	out	0x3e, r29	; 62
     ad8:	0f be       	out	0x3f, r0	; 63
     ada:	cd bf       	out	0x3d, r28	; 61
     adc:	8c 01       	movw	r16, r24
     ade:	fa 01       	movw	r30, r20
     ae0:	86 e0       	ldi	r24, 0x06	; 6
     ae2:	8c 83       	std	Y+4, r24	; 0x04
     ae4:	1a 83       	std	Y+2, r17	; 0x02
     ae6:	09 83       	std	Y+1, r16	; 0x01
     ae8:	77 ff       	sbrs	r23, 7
     aea:	02 c0       	rjmp	.+4      	; 0xaf0 <vsnprintf+0x2c>
     aec:	60 e0       	ldi	r22, 0x00	; 0
     aee:	70 e8       	ldi	r23, 0x80	; 128
     af0:	cb 01       	movw	r24, r22
     af2:	01 97       	sbiw	r24, 0x01	; 1
     af4:	9e 83       	std	Y+6, r25	; 0x06
     af6:	8d 83       	std	Y+5, r24	; 0x05
     af8:	a9 01       	movw	r20, r18
     afa:	bf 01       	movw	r22, r30
     afc:	ce 01       	movw	r24, r28
     afe:	01 96       	adiw	r24, 0x01	; 1
     b00:	19 d0       	rcall	.+50     	; 0xb34 <vfprintf>
     b02:	4d 81       	ldd	r20, Y+5	; 0x05
     b04:	5e 81       	ldd	r21, Y+6	; 0x06
     b06:	57 fd       	sbrc	r21, 7
     b08:	0a c0       	rjmp	.+20     	; 0xb1e <vsnprintf+0x5a>
     b0a:	2f 81       	ldd	r18, Y+7	; 0x07
     b0c:	38 85       	ldd	r19, Y+8	; 0x08
     b0e:	42 17       	cp	r20, r18
     b10:	53 07       	cpc	r21, r19
     b12:	0c f4       	brge	.+2      	; 0xb16 <vsnprintf+0x52>
     b14:	9a 01       	movw	r18, r20
     b16:	f8 01       	movw	r30, r16
     b18:	e2 0f       	add	r30, r18
     b1a:	f3 1f       	adc	r31, r19
     b1c:	10 82       	st	Z, r1
     b1e:	2e 96       	adiw	r28, 0x0e	; 14
     b20:	0f b6       	in	r0, 0x3f	; 63
     b22:	f8 94       	cli
     b24:	de bf       	out	0x3e, r29	; 62
     b26:	0f be       	out	0x3f, r0	; 63
     b28:	cd bf       	out	0x3d, r28	; 61
     b2a:	df 91       	pop	r29
     b2c:	cf 91       	pop	r28
     b2e:	1f 91       	pop	r17
     b30:	0f 91       	pop	r16
     b32:	08 95       	ret

00000b34 <vfprintf>:
     b34:	2f 92       	push	r2
     b36:	3f 92       	push	r3
     b38:	4f 92       	push	r4
     b3a:	5f 92       	push	r5
     b3c:	6f 92       	push	r6
     b3e:	7f 92       	push	r7
     b40:	8f 92       	push	r8
     b42:	9f 92       	push	r9
     b44:	af 92       	push	r10
     b46:	bf 92       	push	r11
     b48:	cf 92       	push	r12
     b4a:	df 92       	push	r13
     b4c:	ef 92       	push	r14
     b4e:	ff 92       	push	r15
     b50:	0f 93       	push	r16
     b52:	1f 93       	push	r17
     b54:	cf 93       	push	r28
     b56:	df 93       	push	r29
     b58:	cd b7       	in	r28, 0x3d	; 61
     b5a:	de b7       	in	r29, 0x3e	; 62
     b5c:	2b 97       	sbiw	r28, 0x0b	; 11
     b5e:	0f b6       	in	r0, 0x3f	; 63
     b60:	f8 94       	cli
     b62:	de bf       	out	0x3e, r29	; 62
     b64:	0f be       	out	0x3f, r0	; 63
     b66:	cd bf       	out	0x3d, r28	; 61
     b68:	6c 01       	movw	r12, r24
     b6a:	7b 01       	movw	r14, r22
     b6c:	8a 01       	movw	r16, r20
     b6e:	fc 01       	movw	r30, r24
     b70:	17 82       	std	Z+7, r1	; 0x07
     b72:	16 82       	std	Z+6, r1	; 0x06
     b74:	83 81       	ldd	r24, Z+3	; 0x03
     b76:	81 ff       	sbrs	r24, 1
     b78:	bf c1       	rjmp	.+894    	; 0xef8 <vfprintf+0x3c4>
     b7a:	ce 01       	movw	r24, r28
     b7c:	01 96       	adiw	r24, 0x01	; 1
     b7e:	3c 01       	movw	r6, r24
     b80:	f6 01       	movw	r30, r12
     b82:	93 81       	ldd	r25, Z+3	; 0x03
     b84:	f7 01       	movw	r30, r14
     b86:	93 fd       	sbrc	r25, 3
     b88:	85 91       	lpm	r24, Z+
     b8a:	93 ff       	sbrs	r25, 3
     b8c:	81 91       	ld	r24, Z+
     b8e:	7f 01       	movw	r14, r30
     b90:	88 23       	and	r24, r24
     b92:	09 f4       	brne	.+2      	; 0xb96 <vfprintf+0x62>
     b94:	ad c1       	rjmp	.+858    	; 0xef0 <vfprintf+0x3bc>
     b96:	85 32       	cpi	r24, 0x25	; 37
     b98:	39 f4       	brne	.+14     	; 0xba8 <vfprintf+0x74>
     b9a:	93 fd       	sbrc	r25, 3
     b9c:	85 91       	lpm	r24, Z+
     b9e:	93 ff       	sbrs	r25, 3
     ba0:	81 91       	ld	r24, Z+
     ba2:	7f 01       	movw	r14, r30
     ba4:	85 32       	cpi	r24, 0x25	; 37
     ba6:	21 f4       	brne	.+8      	; 0xbb0 <vfprintf+0x7c>
     ba8:	b6 01       	movw	r22, r12
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	d6 d1       	rcall	.+940    	; 0xf5a <fputc>
     bae:	e8 cf       	rjmp	.-48     	; 0xb80 <vfprintf+0x4c>
     bb0:	91 2c       	mov	r9, r1
     bb2:	21 2c       	mov	r2, r1
     bb4:	31 2c       	mov	r3, r1
     bb6:	ff e1       	ldi	r31, 0x1F	; 31
     bb8:	f3 15       	cp	r31, r3
     bba:	d8 f0       	brcs	.+54     	; 0xbf2 <vfprintf+0xbe>
     bbc:	8b 32       	cpi	r24, 0x2B	; 43
     bbe:	79 f0       	breq	.+30     	; 0xbde <vfprintf+0xaa>
     bc0:	38 f4       	brcc	.+14     	; 0xbd0 <vfprintf+0x9c>
     bc2:	80 32       	cpi	r24, 0x20	; 32
     bc4:	79 f0       	breq	.+30     	; 0xbe4 <vfprintf+0xb0>
     bc6:	83 32       	cpi	r24, 0x23	; 35
     bc8:	a1 f4       	brne	.+40     	; 0xbf2 <vfprintf+0xbe>
     bca:	23 2d       	mov	r18, r3
     bcc:	20 61       	ori	r18, 0x10	; 16
     bce:	1d c0       	rjmp	.+58     	; 0xc0a <vfprintf+0xd6>
     bd0:	8d 32       	cpi	r24, 0x2D	; 45
     bd2:	61 f0       	breq	.+24     	; 0xbec <vfprintf+0xb8>
     bd4:	80 33       	cpi	r24, 0x30	; 48
     bd6:	69 f4       	brne	.+26     	; 0xbf2 <vfprintf+0xbe>
     bd8:	23 2d       	mov	r18, r3
     bda:	21 60       	ori	r18, 0x01	; 1
     bdc:	16 c0       	rjmp	.+44     	; 0xc0a <vfprintf+0xd6>
     bde:	83 2d       	mov	r24, r3
     be0:	82 60       	ori	r24, 0x02	; 2
     be2:	38 2e       	mov	r3, r24
     be4:	e3 2d       	mov	r30, r3
     be6:	e4 60       	ori	r30, 0x04	; 4
     be8:	3e 2e       	mov	r3, r30
     bea:	2a c0       	rjmp	.+84     	; 0xc40 <vfprintf+0x10c>
     bec:	f3 2d       	mov	r31, r3
     bee:	f8 60       	ori	r31, 0x08	; 8
     bf0:	1d c0       	rjmp	.+58     	; 0xc2c <vfprintf+0xf8>
     bf2:	37 fc       	sbrc	r3, 7
     bf4:	2d c0       	rjmp	.+90     	; 0xc50 <vfprintf+0x11c>
     bf6:	20 ed       	ldi	r18, 0xD0	; 208
     bf8:	28 0f       	add	r18, r24
     bfa:	2a 30       	cpi	r18, 0x0A	; 10
     bfc:	40 f0       	brcs	.+16     	; 0xc0e <vfprintf+0xda>
     bfe:	8e 32       	cpi	r24, 0x2E	; 46
     c00:	b9 f4       	brne	.+46     	; 0xc30 <vfprintf+0xfc>
     c02:	36 fc       	sbrc	r3, 6
     c04:	75 c1       	rjmp	.+746    	; 0xef0 <vfprintf+0x3bc>
     c06:	23 2d       	mov	r18, r3
     c08:	20 64       	ori	r18, 0x40	; 64
     c0a:	32 2e       	mov	r3, r18
     c0c:	19 c0       	rjmp	.+50     	; 0xc40 <vfprintf+0x10c>
     c0e:	36 fe       	sbrs	r3, 6
     c10:	06 c0       	rjmp	.+12     	; 0xc1e <vfprintf+0xea>
     c12:	8a e0       	ldi	r24, 0x0A	; 10
     c14:	98 9e       	mul	r9, r24
     c16:	20 0d       	add	r18, r0
     c18:	11 24       	eor	r1, r1
     c1a:	92 2e       	mov	r9, r18
     c1c:	11 c0       	rjmp	.+34     	; 0xc40 <vfprintf+0x10c>
     c1e:	ea e0       	ldi	r30, 0x0A	; 10
     c20:	2e 9e       	mul	r2, r30
     c22:	20 0d       	add	r18, r0
     c24:	11 24       	eor	r1, r1
     c26:	22 2e       	mov	r2, r18
     c28:	f3 2d       	mov	r31, r3
     c2a:	f0 62       	ori	r31, 0x20	; 32
     c2c:	3f 2e       	mov	r3, r31
     c2e:	08 c0       	rjmp	.+16     	; 0xc40 <vfprintf+0x10c>
     c30:	8c 36       	cpi	r24, 0x6C	; 108
     c32:	21 f4       	brne	.+8      	; 0xc3c <vfprintf+0x108>
     c34:	83 2d       	mov	r24, r3
     c36:	80 68       	ori	r24, 0x80	; 128
     c38:	38 2e       	mov	r3, r24
     c3a:	02 c0       	rjmp	.+4      	; 0xc40 <vfprintf+0x10c>
     c3c:	88 36       	cpi	r24, 0x68	; 104
     c3e:	41 f4       	brne	.+16     	; 0xc50 <vfprintf+0x11c>
     c40:	f7 01       	movw	r30, r14
     c42:	93 fd       	sbrc	r25, 3
     c44:	85 91       	lpm	r24, Z+
     c46:	93 ff       	sbrs	r25, 3
     c48:	81 91       	ld	r24, Z+
     c4a:	7f 01       	movw	r14, r30
     c4c:	81 11       	cpse	r24, r1
     c4e:	b3 cf       	rjmp	.-154    	; 0xbb6 <vfprintf+0x82>
     c50:	98 2f       	mov	r25, r24
     c52:	9f 7d       	andi	r25, 0xDF	; 223
     c54:	95 54       	subi	r25, 0x45	; 69
     c56:	93 30       	cpi	r25, 0x03	; 3
     c58:	28 f4       	brcc	.+10     	; 0xc64 <vfprintf+0x130>
     c5a:	0c 5f       	subi	r16, 0xFC	; 252
     c5c:	1f 4f       	sbci	r17, 0xFF	; 255
     c5e:	9f e3       	ldi	r25, 0x3F	; 63
     c60:	99 83       	std	Y+1, r25	; 0x01
     c62:	0d c0       	rjmp	.+26     	; 0xc7e <vfprintf+0x14a>
     c64:	83 36       	cpi	r24, 0x63	; 99
     c66:	31 f0       	breq	.+12     	; 0xc74 <vfprintf+0x140>
     c68:	83 37       	cpi	r24, 0x73	; 115
     c6a:	71 f0       	breq	.+28     	; 0xc88 <vfprintf+0x154>
     c6c:	83 35       	cpi	r24, 0x53	; 83
     c6e:	09 f0       	breq	.+2      	; 0xc72 <vfprintf+0x13e>
     c70:	55 c0       	rjmp	.+170    	; 0xd1c <vfprintf+0x1e8>
     c72:	20 c0       	rjmp	.+64     	; 0xcb4 <vfprintf+0x180>
     c74:	f8 01       	movw	r30, r16
     c76:	80 81       	ld	r24, Z
     c78:	89 83       	std	Y+1, r24	; 0x01
     c7a:	0e 5f       	subi	r16, 0xFE	; 254
     c7c:	1f 4f       	sbci	r17, 0xFF	; 255
     c7e:	88 24       	eor	r8, r8
     c80:	83 94       	inc	r8
     c82:	91 2c       	mov	r9, r1
     c84:	53 01       	movw	r10, r6
     c86:	12 c0       	rjmp	.+36     	; 0xcac <vfprintf+0x178>
     c88:	28 01       	movw	r4, r16
     c8a:	f2 e0       	ldi	r31, 0x02	; 2
     c8c:	4f 0e       	add	r4, r31
     c8e:	51 1c       	adc	r5, r1
     c90:	f8 01       	movw	r30, r16
     c92:	a0 80       	ld	r10, Z
     c94:	b1 80       	ldd	r11, Z+1	; 0x01
     c96:	36 fe       	sbrs	r3, 6
     c98:	03 c0       	rjmp	.+6      	; 0xca0 <vfprintf+0x16c>
     c9a:	69 2d       	mov	r22, r9
     c9c:	70 e0       	ldi	r23, 0x00	; 0
     c9e:	02 c0       	rjmp	.+4      	; 0xca4 <vfprintf+0x170>
     ca0:	6f ef       	ldi	r22, 0xFF	; 255
     ca2:	7f ef       	ldi	r23, 0xFF	; 255
     ca4:	c5 01       	movw	r24, r10
     ca6:	4e d1       	rcall	.+668    	; 0xf44 <strnlen>
     ca8:	4c 01       	movw	r8, r24
     caa:	82 01       	movw	r16, r4
     cac:	f3 2d       	mov	r31, r3
     cae:	ff 77       	andi	r31, 0x7F	; 127
     cb0:	3f 2e       	mov	r3, r31
     cb2:	15 c0       	rjmp	.+42     	; 0xcde <vfprintf+0x1aa>
     cb4:	28 01       	movw	r4, r16
     cb6:	22 e0       	ldi	r18, 0x02	; 2
     cb8:	42 0e       	add	r4, r18
     cba:	51 1c       	adc	r5, r1
     cbc:	f8 01       	movw	r30, r16
     cbe:	a0 80       	ld	r10, Z
     cc0:	b1 80       	ldd	r11, Z+1	; 0x01
     cc2:	36 fe       	sbrs	r3, 6
     cc4:	03 c0       	rjmp	.+6      	; 0xccc <vfprintf+0x198>
     cc6:	69 2d       	mov	r22, r9
     cc8:	70 e0       	ldi	r23, 0x00	; 0
     cca:	02 c0       	rjmp	.+4      	; 0xcd0 <vfprintf+0x19c>
     ccc:	6f ef       	ldi	r22, 0xFF	; 255
     cce:	7f ef       	ldi	r23, 0xFF	; 255
     cd0:	c5 01       	movw	r24, r10
     cd2:	2d d1       	rcall	.+602    	; 0xf2e <strnlen_P>
     cd4:	4c 01       	movw	r8, r24
     cd6:	f3 2d       	mov	r31, r3
     cd8:	f0 68       	ori	r31, 0x80	; 128
     cda:	3f 2e       	mov	r3, r31
     cdc:	82 01       	movw	r16, r4
     cde:	33 fc       	sbrc	r3, 3
     ce0:	19 c0       	rjmp	.+50     	; 0xd14 <vfprintf+0x1e0>
     ce2:	82 2d       	mov	r24, r2
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	88 16       	cp	r8, r24
     ce8:	99 06       	cpc	r9, r25
     cea:	a0 f4       	brcc	.+40     	; 0xd14 <vfprintf+0x1e0>
     cec:	b6 01       	movw	r22, r12
     cee:	80 e2       	ldi	r24, 0x20	; 32
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	33 d1       	rcall	.+614    	; 0xf5a <fputc>
     cf4:	2a 94       	dec	r2
     cf6:	f5 cf       	rjmp	.-22     	; 0xce2 <vfprintf+0x1ae>
     cf8:	f5 01       	movw	r30, r10
     cfa:	37 fc       	sbrc	r3, 7
     cfc:	85 91       	lpm	r24, Z+
     cfe:	37 fe       	sbrs	r3, 7
     d00:	81 91       	ld	r24, Z+
     d02:	5f 01       	movw	r10, r30
     d04:	b6 01       	movw	r22, r12
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	28 d1       	rcall	.+592    	; 0xf5a <fputc>
     d0a:	21 10       	cpse	r2, r1
     d0c:	2a 94       	dec	r2
     d0e:	21 e0       	ldi	r18, 0x01	; 1
     d10:	82 1a       	sub	r8, r18
     d12:	91 08       	sbc	r9, r1
     d14:	81 14       	cp	r8, r1
     d16:	91 04       	cpc	r9, r1
     d18:	79 f7       	brne	.-34     	; 0xcf8 <vfprintf+0x1c4>
     d1a:	e1 c0       	rjmp	.+450    	; 0xede <vfprintf+0x3aa>
     d1c:	84 36       	cpi	r24, 0x64	; 100
     d1e:	11 f0       	breq	.+4      	; 0xd24 <vfprintf+0x1f0>
     d20:	89 36       	cpi	r24, 0x69	; 105
     d22:	39 f5       	brne	.+78     	; 0xd72 <vfprintf+0x23e>
     d24:	f8 01       	movw	r30, r16
     d26:	37 fe       	sbrs	r3, 7
     d28:	07 c0       	rjmp	.+14     	; 0xd38 <vfprintf+0x204>
     d2a:	60 81       	ld	r22, Z
     d2c:	71 81       	ldd	r23, Z+1	; 0x01
     d2e:	82 81       	ldd	r24, Z+2	; 0x02
     d30:	93 81       	ldd	r25, Z+3	; 0x03
     d32:	0c 5f       	subi	r16, 0xFC	; 252
     d34:	1f 4f       	sbci	r17, 0xFF	; 255
     d36:	08 c0       	rjmp	.+16     	; 0xd48 <vfprintf+0x214>
     d38:	60 81       	ld	r22, Z
     d3a:	71 81       	ldd	r23, Z+1	; 0x01
     d3c:	07 2e       	mov	r0, r23
     d3e:	00 0c       	add	r0, r0
     d40:	88 0b       	sbc	r24, r24
     d42:	99 0b       	sbc	r25, r25
     d44:	0e 5f       	subi	r16, 0xFE	; 254
     d46:	1f 4f       	sbci	r17, 0xFF	; 255
     d48:	f3 2d       	mov	r31, r3
     d4a:	ff 76       	andi	r31, 0x6F	; 111
     d4c:	3f 2e       	mov	r3, r31
     d4e:	97 ff       	sbrs	r25, 7
     d50:	09 c0       	rjmp	.+18     	; 0xd64 <vfprintf+0x230>
     d52:	90 95       	com	r25
     d54:	80 95       	com	r24
     d56:	70 95       	com	r23
     d58:	61 95       	neg	r22
     d5a:	7f 4f       	sbci	r23, 0xFF	; 255
     d5c:	8f 4f       	sbci	r24, 0xFF	; 255
     d5e:	9f 4f       	sbci	r25, 0xFF	; 255
     d60:	f0 68       	ori	r31, 0x80	; 128
     d62:	3f 2e       	mov	r3, r31
     d64:	2a e0       	ldi	r18, 0x0A	; 10
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	a3 01       	movw	r20, r6
     d6a:	33 d1       	rcall	.+614    	; 0xfd2 <__ultoa_invert>
     d6c:	88 2e       	mov	r8, r24
     d6e:	86 18       	sub	r8, r6
     d70:	44 c0       	rjmp	.+136    	; 0xdfa <vfprintf+0x2c6>
     d72:	85 37       	cpi	r24, 0x75	; 117
     d74:	31 f4       	brne	.+12     	; 0xd82 <vfprintf+0x24e>
     d76:	23 2d       	mov	r18, r3
     d78:	2f 7e       	andi	r18, 0xEF	; 239
     d7a:	b2 2e       	mov	r11, r18
     d7c:	2a e0       	ldi	r18, 0x0A	; 10
     d7e:	30 e0       	ldi	r19, 0x00	; 0
     d80:	25 c0       	rjmp	.+74     	; 0xdcc <vfprintf+0x298>
     d82:	93 2d       	mov	r25, r3
     d84:	99 7f       	andi	r25, 0xF9	; 249
     d86:	b9 2e       	mov	r11, r25
     d88:	8f 36       	cpi	r24, 0x6F	; 111
     d8a:	c1 f0       	breq	.+48     	; 0xdbc <vfprintf+0x288>
     d8c:	18 f4       	brcc	.+6      	; 0xd94 <vfprintf+0x260>
     d8e:	88 35       	cpi	r24, 0x58	; 88
     d90:	79 f0       	breq	.+30     	; 0xdb0 <vfprintf+0x27c>
     d92:	ae c0       	rjmp	.+348    	; 0xef0 <vfprintf+0x3bc>
     d94:	80 37       	cpi	r24, 0x70	; 112
     d96:	19 f0       	breq	.+6      	; 0xd9e <vfprintf+0x26a>
     d98:	88 37       	cpi	r24, 0x78	; 120
     d9a:	21 f0       	breq	.+8      	; 0xda4 <vfprintf+0x270>
     d9c:	a9 c0       	rjmp	.+338    	; 0xef0 <vfprintf+0x3bc>
     d9e:	e9 2f       	mov	r30, r25
     da0:	e0 61       	ori	r30, 0x10	; 16
     da2:	be 2e       	mov	r11, r30
     da4:	b4 fe       	sbrs	r11, 4
     da6:	0d c0       	rjmp	.+26     	; 0xdc2 <vfprintf+0x28e>
     da8:	fb 2d       	mov	r31, r11
     daa:	f4 60       	ori	r31, 0x04	; 4
     dac:	bf 2e       	mov	r11, r31
     dae:	09 c0       	rjmp	.+18     	; 0xdc2 <vfprintf+0x28e>
     db0:	34 fe       	sbrs	r3, 4
     db2:	0a c0       	rjmp	.+20     	; 0xdc8 <vfprintf+0x294>
     db4:	29 2f       	mov	r18, r25
     db6:	26 60       	ori	r18, 0x06	; 6
     db8:	b2 2e       	mov	r11, r18
     dba:	06 c0       	rjmp	.+12     	; 0xdc8 <vfprintf+0x294>
     dbc:	28 e0       	ldi	r18, 0x08	; 8
     dbe:	30 e0       	ldi	r19, 0x00	; 0
     dc0:	05 c0       	rjmp	.+10     	; 0xdcc <vfprintf+0x298>
     dc2:	20 e1       	ldi	r18, 0x10	; 16
     dc4:	30 e0       	ldi	r19, 0x00	; 0
     dc6:	02 c0       	rjmp	.+4      	; 0xdcc <vfprintf+0x298>
     dc8:	20 e1       	ldi	r18, 0x10	; 16
     dca:	32 e0       	ldi	r19, 0x02	; 2
     dcc:	f8 01       	movw	r30, r16
     dce:	b7 fe       	sbrs	r11, 7
     dd0:	07 c0       	rjmp	.+14     	; 0xde0 <vfprintf+0x2ac>
     dd2:	60 81       	ld	r22, Z
     dd4:	71 81       	ldd	r23, Z+1	; 0x01
     dd6:	82 81       	ldd	r24, Z+2	; 0x02
     dd8:	93 81       	ldd	r25, Z+3	; 0x03
     dda:	0c 5f       	subi	r16, 0xFC	; 252
     ddc:	1f 4f       	sbci	r17, 0xFF	; 255
     dde:	06 c0       	rjmp	.+12     	; 0xdec <vfprintf+0x2b8>
     de0:	60 81       	ld	r22, Z
     de2:	71 81       	ldd	r23, Z+1	; 0x01
     de4:	80 e0       	ldi	r24, 0x00	; 0
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	0e 5f       	subi	r16, 0xFE	; 254
     dea:	1f 4f       	sbci	r17, 0xFF	; 255
     dec:	a3 01       	movw	r20, r6
     dee:	f1 d0       	rcall	.+482    	; 0xfd2 <__ultoa_invert>
     df0:	88 2e       	mov	r8, r24
     df2:	86 18       	sub	r8, r6
     df4:	fb 2d       	mov	r31, r11
     df6:	ff 77       	andi	r31, 0x7F	; 127
     df8:	3f 2e       	mov	r3, r31
     dfa:	36 fe       	sbrs	r3, 6
     dfc:	0d c0       	rjmp	.+26     	; 0xe18 <vfprintf+0x2e4>
     dfe:	23 2d       	mov	r18, r3
     e00:	2e 7f       	andi	r18, 0xFE	; 254
     e02:	a2 2e       	mov	r10, r18
     e04:	89 14       	cp	r8, r9
     e06:	58 f4       	brcc	.+22     	; 0xe1e <vfprintf+0x2ea>
     e08:	34 fe       	sbrs	r3, 4
     e0a:	0b c0       	rjmp	.+22     	; 0xe22 <vfprintf+0x2ee>
     e0c:	32 fc       	sbrc	r3, 2
     e0e:	09 c0       	rjmp	.+18     	; 0xe22 <vfprintf+0x2ee>
     e10:	83 2d       	mov	r24, r3
     e12:	8e 7e       	andi	r24, 0xEE	; 238
     e14:	a8 2e       	mov	r10, r24
     e16:	05 c0       	rjmp	.+10     	; 0xe22 <vfprintf+0x2ee>
     e18:	b8 2c       	mov	r11, r8
     e1a:	a3 2c       	mov	r10, r3
     e1c:	03 c0       	rjmp	.+6      	; 0xe24 <vfprintf+0x2f0>
     e1e:	b8 2c       	mov	r11, r8
     e20:	01 c0       	rjmp	.+2      	; 0xe24 <vfprintf+0x2f0>
     e22:	b9 2c       	mov	r11, r9
     e24:	a4 fe       	sbrs	r10, 4
     e26:	0f c0       	rjmp	.+30     	; 0xe46 <vfprintf+0x312>
     e28:	fe 01       	movw	r30, r28
     e2a:	e8 0d       	add	r30, r8
     e2c:	f1 1d       	adc	r31, r1
     e2e:	80 81       	ld	r24, Z
     e30:	80 33       	cpi	r24, 0x30	; 48
     e32:	21 f4       	brne	.+8      	; 0xe3c <vfprintf+0x308>
     e34:	9a 2d       	mov	r25, r10
     e36:	99 7e       	andi	r25, 0xE9	; 233
     e38:	a9 2e       	mov	r10, r25
     e3a:	09 c0       	rjmp	.+18     	; 0xe4e <vfprintf+0x31a>
     e3c:	a2 fe       	sbrs	r10, 2
     e3e:	06 c0       	rjmp	.+12     	; 0xe4c <vfprintf+0x318>
     e40:	b3 94       	inc	r11
     e42:	b3 94       	inc	r11
     e44:	04 c0       	rjmp	.+8      	; 0xe4e <vfprintf+0x31a>
     e46:	8a 2d       	mov	r24, r10
     e48:	86 78       	andi	r24, 0x86	; 134
     e4a:	09 f0       	breq	.+2      	; 0xe4e <vfprintf+0x31a>
     e4c:	b3 94       	inc	r11
     e4e:	a3 fc       	sbrc	r10, 3
     e50:	10 c0       	rjmp	.+32     	; 0xe72 <vfprintf+0x33e>
     e52:	a0 fe       	sbrs	r10, 0
     e54:	06 c0       	rjmp	.+12     	; 0xe62 <vfprintf+0x32e>
     e56:	b2 14       	cp	r11, r2
     e58:	80 f4       	brcc	.+32     	; 0xe7a <vfprintf+0x346>
     e5a:	28 0c       	add	r2, r8
     e5c:	92 2c       	mov	r9, r2
     e5e:	9b 18       	sub	r9, r11
     e60:	0d c0       	rjmp	.+26     	; 0xe7c <vfprintf+0x348>
     e62:	b2 14       	cp	r11, r2
     e64:	58 f4       	brcc	.+22     	; 0xe7c <vfprintf+0x348>
     e66:	b6 01       	movw	r22, r12
     e68:	80 e2       	ldi	r24, 0x20	; 32
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	76 d0       	rcall	.+236    	; 0xf5a <fputc>
     e6e:	b3 94       	inc	r11
     e70:	f8 cf       	rjmp	.-16     	; 0xe62 <vfprintf+0x32e>
     e72:	b2 14       	cp	r11, r2
     e74:	18 f4       	brcc	.+6      	; 0xe7c <vfprintf+0x348>
     e76:	2b 18       	sub	r2, r11
     e78:	02 c0       	rjmp	.+4      	; 0xe7e <vfprintf+0x34a>
     e7a:	98 2c       	mov	r9, r8
     e7c:	21 2c       	mov	r2, r1
     e7e:	a4 fe       	sbrs	r10, 4
     e80:	0f c0       	rjmp	.+30     	; 0xea0 <vfprintf+0x36c>
     e82:	b6 01       	movw	r22, r12
     e84:	80 e3       	ldi	r24, 0x30	; 48
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	68 d0       	rcall	.+208    	; 0xf5a <fputc>
     e8a:	a2 fe       	sbrs	r10, 2
     e8c:	16 c0       	rjmp	.+44     	; 0xeba <vfprintf+0x386>
     e8e:	a1 fc       	sbrc	r10, 1
     e90:	03 c0       	rjmp	.+6      	; 0xe98 <vfprintf+0x364>
     e92:	88 e7       	ldi	r24, 0x78	; 120
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	02 c0       	rjmp	.+4      	; 0xe9c <vfprintf+0x368>
     e98:	88 e5       	ldi	r24, 0x58	; 88
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	b6 01       	movw	r22, r12
     e9e:	0c c0       	rjmp	.+24     	; 0xeb8 <vfprintf+0x384>
     ea0:	8a 2d       	mov	r24, r10
     ea2:	86 78       	andi	r24, 0x86	; 134
     ea4:	51 f0       	breq	.+20     	; 0xeba <vfprintf+0x386>
     ea6:	a1 fe       	sbrs	r10, 1
     ea8:	02 c0       	rjmp	.+4      	; 0xeae <vfprintf+0x37a>
     eaa:	8b e2       	ldi	r24, 0x2B	; 43
     eac:	01 c0       	rjmp	.+2      	; 0xeb0 <vfprintf+0x37c>
     eae:	80 e2       	ldi	r24, 0x20	; 32
     eb0:	a7 fc       	sbrc	r10, 7
     eb2:	8d e2       	ldi	r24, 0x2D	; 45
     eb4:	b6 01       	movw	r22, r12
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	50 d0       	rcall	.+160    	; 0xf5a <fputc>
     eba:	89 14       	cp	r8, r9
     ebc:	30 f4       	brcc	.+12     	; 0xeca <vfprintf+0x396>
     ebe:	b6 01       	movw	r22, r12
     ec0:	80 e3       	ldi	r24, 0x30	; 48
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	4a d0       	rcall	.+148    	; 0xf5a <fputc>
     ec6:	9a 94       	dec	r9
     ec8:	f8 cf       	rjmp	.-16     	; 0xeba <vfprintf+0x386>
     eca:	8a 94       	dec	r8
     ecc:	f3 01       	movw	r30, r6
     ece:	e8 0d       	add	r30, r8
     ed0:	f1 1d       	adc	r31, r1
     ed2:	80 81       	ld	r24, Z
     ed4:	b6 01       	movw	r22, r12
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	40 d0       	rcall	.+128    	; 0xf5a <fputc>
     eda:	81 10       	cpse	r8, r1
     edc:	f6 cf       	rjmp	.-20     	; 0xeca <vfprintf+0x396>
     ede:	22 20       	and	r2, r2
     ee0:	09 f4       	brne	.+2      	; 0xee4 <vfprintf+0x3b0>
     ee2:	4e ce       	rjmp	.-868    	; 0xb80 <vfprintf+0x4c>
     ee4:	b6 01       	movw	r22, r12
     ee6:	80 e2       	ldi	r24, 0x20	; 32
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	37 d0       	rcall	.+110    	; 0xf5a <fputc>
     eec:	2a 94       	dec	r2
     eee:	f7 cf       	rjmp	.-18     	; 0xede <vfprintf+0x3aa>
     ef0:	f6 01       	movw	r30, r12
     ef2:	86 81       	ldd	r24, Z+6	; 0x06
     ef4:	97 81       	ldd	r25, Z+7	; 0x07
     ef6:	02 c0       	rjmp	.+4      	; 0xefc <vfprintf+0x3c8>
     ef8:	8f ef       	ldi	r24, 0xFF	; 255
     efa:	9f ef       	ldi	r25, 0xFF	; 255
     efc:	2b 96       	adiw	r28, 0x0b	; 11
     efe:	0f b6       	in	r0, 0x3f	; 63
     f00:	f8 94       	cli
     f02:	de bf       	out	0x3e, r29	; 62
     f04:	0f be       	out	0x3f, r0	; 63
     f06:	cd bf       	out	0x3d, r28	; 61
     f08:	df 91       	pop	r29
     f0a:	cf 91       	pop	r28
     f0c:	1f 91       	pop	r17
     f0e:	0f 91       	pop	r16
     f10:	ff 90       	pop	r15
     f12:	ef 90       	pop	r14
     f14:	df 90       	pop	r13
     f16:	cf 90       	pop	r12
     f18:	bf 90       	pop	r11
     f1a:	af 90       	pop	r10
     f1c:	9f 90       	pop	r9
     f1e:	8f 90       	pop	r8
     f20:	7f 90       	pop	r7
     f22:	6f 90       	pop	r6
     f24:	5f 90       	pop	r5
     f26:	4f 90       	pop	r4
     f28:	3f 90       	pop	r3
     f2a:	2f 90       	pop	r2
     f2c:	08 95       	ret

00000f2e <strnlen_P>:
     f2e:	fc 01       	movw	r30, r24
     f30:	05 90       	lpm	r0, Z+
     f32:	61 50       	subi	r22, 0x01	; 1
     f34:	70 40       	sbci	r23, 0x00	; 0
     f36:	01 10       	cpse	r0, r1
     f38:	d8 f7       	brcc	.-10     	; 0xf30 <strnlen_P+0x2>
     f3a:	80 95       	com	r24
     f3c:	90 95       	com	r25
     f3e:	8e 0f       	add	r24, r30
     f40:	9f 1f       	adc	r25, r31
     f42:	08 95       	ret

00000f44 <strnlen>:
     f44:	fc 01       	movw	r30, r24
     f46:	61 50       	subi	r22, 0x01	; 1
     f48:	70 40       	sbci	r23, 0x00	; 0
     f4a:	01 90       	ld	r0, Z+
     f4c:	01 10       	cpse	r0, r1
     f4e:	d8 f7       	brcc	.-10     	; 0xf46 <strnlen+0x2>
     f50:	80 95       	com	r24
     f52:	90 95       	com	r25
     f54:	8e 0f       	add	r24, r30
     f56:	9f 1f       	adc	r25, r31
     f58:	08 95       	ret

00000f5a <fputc>:
     f5a:	0f 93       	push	r16
     f5c:	1f 93       	push	r17
     f5e:	cf 93       	push	r28
     f60:	df 93       	push	r29
     f62:	fb 01       	movw	r30, r22
     f64:	23 81       	ldd	r18, Z+3	; 0x03
     f66:	21 fd       	sbrc	r18, 1
     f68:	03 c0       	rjmp	.+6      	; 0xf70 <fputc+0x16>
     f6a:	8f ef       	ldi	r24, 0xFF	; 255
     f6c:	9f ef       	ldi	r25, 0xFF	; 255
     f6e:	2c c0       	rjmp	.+88     	; 0xfc8 <fputc+0x6e>
     f70:	22 ff       	sbrs	r18, 2
     f72:	16 c0       	rjmp	.+44     	; 0xfa0 <fputc+0x46>
     f74:	46 81       	ldd	r20, Z+6	; 0x06
     f76:	57 81       	ldd	r21, Z+7	; 0x07
     f78:	24 81       	ldd	r18, Z+4	; 0x04
     f7a:	35 81       	ldd	r19, Z+5	; 0x05
     f7c:	42 17       	cp	r20, r18
     f7e:	53 07       	cpc	r21, r19
     f80:	44 f4       	brge	.+16     	; 0xf92 <fputc+0x38>
     f82:	a0 81       	ld	r26, Z
     f84:	b1 81       	ldd	r27, Z+1	; 0x01
     f86:	9d 01       	movw	r18, r26
     f88:	2f 5f       	subi	r18, 0xFF	; 255
     f8a:	3f 4f       	sbci	r19, 0xFF	; 255
     f8c:	31 83       	std	Z+1, r19	; 0x01
     f8e:	20 83       	st	Z, r18
     f90:	8c 93       	st	X, r24
     f92:	26 81       	ldd	r18, Z+6	; 0x06
     f94:	37 81       	ldd	r19, Z+7	; 0x07
     f96:	2f 5f       	subi	r18, 0xFF	; 255
     f98:	3f 4f       	sbci	r19, 0xFF	; 255
     f9a:	37 83       	std	Z+7, r19	; 0x07
     f9c:	26 83       	std	Z+6, r18	; 0x06
     f9e:	14 c0       	rjmp	.+40     	; 0xfc8 <fputc+0x6e>
     fa0:	8b 01       	movw	r16, r22
     fa2:	ec 01       	movw	r28, r24
     fa4:	fb 01       	movw	r30, r22
     fa6:	00 84       	ldd	r0, Z+8	; 0x08
     fa8:	f1 85       	ldd	r31, Z+9	; 0x09
     faa:	e0 2d       	mov	r30, r0
     fac:	09 95       	icall
     fae:	89 2b       	or	r24, r25
     fb0:	e1 f6       	brne	.-72     	; 0xf6a <fputc+0x10>
     fb2:	d8 01       	movw	r26, r16
     fb4:	16 96       	adiw	r26, 0x06	; 6
     fb6:	8d 91       	ld	r24, X+
     fb8:	9c 91       	ld	r25, X
     fba:	17 97       	sbiw	r26, 0x07	; 7
     fbc:	01 96       	adiw	r24, 0x01	; 1
     fbe:	17 96       	adiw	r26, 0x07	; 7
     fc0:	9c 93       	st	X, r25
     fc2:	8e 93       	st	-X, r24
     fc4:	16 97       	sbiw	r26, 0x06	; 6
     fc6:	ce 01       	movw	r24, r28
     fc8:	df 91       	pop	r29
     fca:	cf 91       	pop	r28
     fcc:	1f 91       	pop	r17
     fce:	0f 91       	pop	r16
     fd0:	08 95       	ret

00000fd2 <__ultoa_invert>:
     fd2:	fa 01       	movw	r30, r20
     fd4:	aa 27       	eor	r26, r26
     fd6:	28 30       	cpi	r18, 0x08	; 8
     fd8:	51 f1       	breq	.+84     	; 0x102e <__ultoa_invert+0x5c>
     fda:	20 31       	cpi	r18, 0x10	; 16
     fdc:	81 f1       	breq	.+96     	; 0x103e <__ultoa_invert+0x6c>
     fde:	e8 94       	clt
     fe0:	6f 93       	push	r22
     fe2:	6e 7f       	andi	r22, 0xFE	; 254
     fe4:	6e 5f       	subi	r22, 0xFE	; 254
     fe6:	7f 4f       	sbci	r23, 0xFF	; 255
     fe8:	8f 4f       	sbci	r24, 0xFF	; 255
     fea:	9f 4f       	sbci	r25, 0xFF	; 255
     fec:	af 4f       	sbci	r26, 0xFF	; 255
     fee:	b1 e0       	ldi	r27, 0x01	; 1
     ff0:	3e d0       	rcall	.+124    	; 0x106e <__ultoa_invert+0x9c>
     ff2:	b4 e0       	ldi	r27, 0x04	; 4
     ff4:	3c d0       	rcall	.+120    	; 0x106e <__ultoa_invert+0x9c>
     ff6:	67 0f       	add	r22, r23
     ff8:	78 1f       	adc	r23, r24
     ffa:	89 1f       	adc	r24, r25
     ffc:	9a 1f       	adc	r25, r26
     ffe:	a1 1d       	adc	r26, r1
    1000:	68 0f       	add	r22, r24
    1002:	79 1f       	adc	r23, r25
    1004:	8a 1f       	adc	r24, r26
    1006:	91 1d       	adc	r25, r1
    1008:	a1 1d       	adc	r26, r1
    100a:	6a 0f       	add	r22, r26
    100c:	71 1d       	adc	r23, r1
    100e:	81 1d       	adc	r24, r1
    1010:	91 1d       	adc	r25, r1
    1012:	a1 1d       	adc	r26, r1
    1014:	20 d0       	rcall	.+64     	; 0x1056 <__ultoa_invert+0x84>
    1016:	09 f4       	brne	.+2      	; 0x101a <__ultoa_invert+0x48>
    1018:	68 94       	set
    101a:	3f 91       	pop	r19
    101c:	2a e0       	ldi	r18, 0x0A	; 10
    101e:	26 9f       	mul	r18, r22
    1020:	11 24       	eor	r1, r1
    1022:	30 19       	sub	r19, r0
    1024:	30 5d       	subi	r19, 0xD0	; 208
    1026:	31 93       	st	Z+, r19
    1028:	de f6       	brtc	.-74     	; 0xfe0 <__ultoa_invert+0xe>
    102a:	cf 01       	movw	r24, r30
    102c:	08 95       	ret
    102e:	46 2f       	mov	r20, r22
    1030:	47 70       	andi	r20, 0x07	; 7
    1032:	40 5d       	subi	r20, 0xD0	; 208
    1034:	41 93       	st	Z+, r20
    1036:	b3 e0       	ldi	r27, 0x03	; 3
    1038:	0f d0       	rcall	.+30     	; 0x1058 <__ultoa_invert+0x86>
    103a:	c9 f7       	brne	.-14     	; 0x102e <__ultoa_invert+0x5c>
    103c:	f6 cf       	rjmp	.-20     	; 0x102a <__ultoa_invert+0x58>
    103e:	46 2f       	mov	r20, r22
    1040:	4f 70       	andi	r20, 0x0F	; 15
    1042:	40 5d       	subi	r20, 0xD0	; 208
    1044:	4a 33       	cpi	r20, 0x3A	; 58
    1046:	18 f0       	brcs	.+6      	; 0x104e <__ultoa_invert+0x7c>
    1048:	49 5d       	subi	r20, 0xD9	; 217
    104a:	31 fd       	sbrc	r19, 1
    104c:	40 52       	subi	r20, 0x20	; 32
    104e:	41 93       	st	Z+, r20
    1050:	02 d0       	rcall	.+4      	; 0x1056 <__ultoa_invert+0x84>
    1052:	a9 f7       	brne	.-22     	; 0x103e <__ultoa_invert+0x6c>
    1054:	ea cf       	rjmp	.-44     	; 0x102a <__ultoa_invert+0x58>
    1056:	b4 e0       	ldi	r27, 0x04	; 4
    1058:	a6 95       	lsr	r26
    105a:	97 95       	ror	r25
    105c:	87 95       	ror	r24
    105e:	77 95       	ror	r23
    1060:	67 95       	ror	r22
    1062:	ba 95       	dec	r27
    1064:	c9 f7       	brne	.-14     	; 0x1058 <__ultoa_invert+0x86>
    1066:	00 97       	sbiw	r24, 0x00	; 0
    1068:	61 05       	cpc	r22, r1
    106a:	71 05       	cpc	r23, r1
    106c:	08 95       	ret
    106e:	9b 01       	movw	r18, r22
    1070:	ac 01       	movw	r20, r24
    1072:	0a 2e       	mov	r0, r26
    1074:	06 94       	lsr	r0
    1076:	57 95       	ror	r21
    1078:	47 95       	ror	r20
    107a:	37 95       	ror	r19
    107c:	27 95       	ror	r18
    107e:	ba 95       	dec	r27
    1080:	c9 f7       	brne	.-14     	; 0x1074 <__ultoa_invert+0xa2>
    1082:	62 0f       	add	r22, r18
    1084:	73 1f       	adc	r23, r19
    1086:	84 1f       	adc	r24, r20
    1088:	95 1f       	adc	r25, r21
    108a:	a0 1d       	adc	r26, r0
    108c:	08 95       	ret

0000108e <_exit>:
    108e:	f8 94       	cli

00001090 <__stop_program>:
    1090:	ff cf       	rjmp	.-2      	; 0x1090 <__stop_program>
